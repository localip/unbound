"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(a,b){for(var c in b)Object.defineProperty(a,c,{enumerable:!0,get:b[c]})}(exports,{listeners:()=>g,get:()=>h,toggle:()=>i,set:()=>j,initialize:()=>k,shutdown:()=>l,connectComponent:()=>m,makeStore:()=>n,subscribe:()=>o,unsubscribe:()=>p});const a=require("../components/hooks"),b=require("../../common/logger"),c=function(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=e(b);if(c&&c.has(a))return c.get(a);var d={},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var g in a)if("default"!==g&&Object.prototype.hasOwnProperty.call(a,g)){var h=f?Object.getOwnPropertyDescriptor(a,g):null;h&&(h.get||h.set)?Object.defineProperty(d,g,h):d[g]=a[g]}return d.default=a,c&&c.set(a,d),d}(require("../../common/settings")),d=function(a){return a&&a.__esModule?a:{default:a}}(require("react"));function e(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(e=function(a){return a?c:b})(a)}const f=(0,b.createLogger)("Settings"),g={},h=c.get,i=c.toggle,j=c.set;function k(){c.on("change",q)}function l(){c.off("change",q)}function m(b,c,e){return f=>{let g=(0,a.useForceUpdate)(),h=a=>{(!e||e(a))&&g()};return d.default.useEffect(()=>(o(c,h),()=>p(c,h)),[]),d.default.createElement(b,Object.assign({},f,{settings:n(c)}))}}function n(a){return{settings:c.settings[a]??{},set:(b,c)=>j(a,b,c),get:(b,c)=>h(a,b,c),toggle:(b,c)=>i(a,b,c),subscribe:b=>o(a,b),unsubscribe:b=>p(a,b),connectComponent:(b,c)=>m(b,a,c)}}function o(a,b){g[a]??=new Set,g[a].add(b)}function p(a,b){g[a]?.delete(b),g[a]?.size===0&&delete g[a]}function q(a){if(g[a.id])for(let b of[...g[a.id]])try{b(a)}catch(c){f.error("Failed to fire settings listener.",a,c)}}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGllbnQvYXBpL3NldHRpbmdzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VGb3JjZVVwZGF0ZSB9IGZyb20gJ0Bjb21wb25lbnRzL2hvb2tzJztcclxuaW1wb3J0IHsgY3JlYXRlTG9nZ2VyIH0gZnJvbSAnQGNvbW1vbi9sb2dnZXInO1xyXG5pbXBvcnQgKiBhcyBTZXR0aW5ncyBmcm9tICdAY29tbW9uL3NldHRpbmdzJztcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmNvbnN0IExvZ2dlciA9IGNyZWF0ZUxvZ2dlcignU2V0dGluZ3MnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBsaXN0ZW5lcnMgPSB7fTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXQgPSBTZXR0aW5ncy5nZXQ7XHJcbmV4cG9ydCBjb25zdCB0b2dnbGUgPSBTZXR0aW5ncy50b2dnbGU7XHJcbmV4cG9ydCBjb25zdCBzZXQgPSBTZXR0aW5ncy5zZXQ7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcclxuICAgU2V0dGluZ3Mub24oJ2NoYW5nZScsIG9uU2V0dGluZ3NDaGFuZ2UpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2h1dGRvd24oKSB7XHJcbiAgIFNldHRpbmdzLm9mZignY2hhbmdlJywgb25TZXR0aW5nc0NoYW5nZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjb25uZWN0Q29tcG9uZW50KENvbXBvbmVudDogUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+LCBpZDogc3RyaW5nLCBwcmVkaWNhdGU/OiBGbik6IFJlYWN0LkZDPGFueT4ge1xyXG4gICByZXR1cm4gKHByb3BzKSA9PiB7XHJcbiAgICAgIGNvbnN0IGZvcmNlVXBkYXRlID0gdXNlRm9yY2VVcGRhdGUoKTtcclxuICAgICAgY29uc3Qgb25DaGFuZ2UgPSAocGF5bG9hZCkgPT4ge1xyXG4gICAgICAgICBpZiAoIXByZWRpY2F0ZSB8fCBwcmVkaWNhdGUocGF5bG9hZCkpIHtcclxuICAgICAgICAgICAgZm9yY2VVcGRhdGUoKTtcclxuICAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICAgc3Vic2NyaWJlKGlkLCBvbkNoYW5nZSk7XHJcbiAgICAgICAgIHJldHVybiAoKSA9PiB1bnN1YnNjcmliZShpZCwgb25DaGFuZ2UpO1xyXG4gICAgICB9LCBbXSk7XHJcblxyXG4gICAgICByZXR1cm4gPENvbXBvbmVudCB7Li4ucHJvcHN9IHNldHRpbmdzPXttYWtlU3RvcmUoaWQpfSAvPjtcclxuICAgfTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VTdG9yZShpZDogc3RyaW5nKSB7XHJcbiAgIHJldHVybiB7XHJcbiAgICAgIHNldHRpbmdzOiBTZXR0aW5ncy5zZXR0aW5nc1tpZF0gPz8ge30sXHJcbiAgICAgIHNldDogKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KSA9PiBzZXQoaWQsIGtleSwgdmFsdWUpLFxyXG4gICAgICBnZXQ6IChrZXk6IHN0cmluZywgZGVmYXVsdHM6IGFueSkgPT4gZ2V0KGlkLCBrZXksIGRlZmF1bHRzKSxcclxuICAgICAgdG9nZ2xlOiAoa2V5OiBzdHJpbmcsIGRlZmF1bHRzOiBhbnkpID0+IHRvZ2dsZShpZCwga2V5LCBkZWZhdWx0cyksXHJcbiAgICAgIHN1YnNjcmliZTogKGNhbGxiYWNrOiBGbikgPT4gc3Vic2NyaWJlKGlkLCBjYWxsYmFjayksXHJcbiAgICAgIHVuc3Vic2NyaWJlOiAoY2FsbGJhY2s6IEZuKSA9PiB1bnN1YnNjcmliZShpZCwgY2FsbGJhY2spLFxyXG4gICAgICBjb25uZWN0Q29tcG9uZW50OiAoY29tcG9uZW50OiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT4sIHByZWRpY2F0ZT86IEZuKSA9PiBjb25uZWN0Q29tcG9uZW50KGNvbXBvbmVudCwgaWQsIHByZWRpY2F0ZSlcclxuICAgfTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHN1YnNjcmliZShpZDogc3RyaW5nLCBjYWxsYmFjazogRm4pIHtcclxuICAgbGlzdGVuZXJzW2lkXSA/Pz0gbmV3IFNldCgpO1xyXG4gICBsaXN0ZW5lcnNbaWRdLmFkZChjYWxsYmFjayk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1bnN1YnNjcmliZShpZDogc3RyaW5nLCBjYWxsYmFjazogRm4pIHtcclxuICAgbGlzdGVuZXJzW2lkXT8uZGVsZXRlKGNhbGxiYWNrKTtcclxuXHJcbiAgIGlmIChsaXN0ZW5lcnNbaWRdPy5zaXplID09PSAwKSB7XHJcbiAgICAgIGRlbGV0ZSBsaXN0ZW5lcnNbaWRdO1xyXG4gICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9uU2V0dGluZ3NDaGFuZ2UocGF5bG9hZCkge1xyXG4gICBpZiAoIWxpc3RlbmVyc1twYXlsb2FkLmlkXSkgcmV0dXJuO1xyXG5cclxuICAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiBbLi4ubGlzdGVuZXJzW3BheWxvYWQuaWRdXSkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgICBsaXN0ZW5lcihwYXlsb2FkKTtcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICBMb2dnZXIuZXJyb3IoJ0ZhaWxlZCB0byBmaXJlIHNldHRpbmdzIGxpc3RlbmVyLicsIHBheWxvYWQsIGUpO1xyXG4gICAgICB9XHJcbiAgIH1cclxufTsiXSwibmFtZXMiOlsibGlzdGVuZXJzIiwiZ2V0IiwidG9nZ2xlIiwic2V0IiwiaW5pdGlhbGl6ZSIsInNodXRkb3duIiwiY29ubmVjdENvbXBvbmVudCIsIm1ha2VTdG9yZSIsInN1YnNjcmliZSIsInVuc3Vic2NyaWJlIiwiTG9nZ2VyIiwiY3JlYXRlTG9nZ2VyIiwiU2V0dGluZ3MiLCJvbiIsIm9uU2V0dGluZ3NDaGFuZ2UiLCJvZmYiLCJDb21wb25lbnQiLCJpZCIsInByZWRpY2F0ZSIsInByb3BzIiwiZm9yY2VVcGRhdGUiLCJ1c2VGb3JjZVVwZGF0ZSIsIm9uQ2hhbmdlIiwicGF5bG9hZCIsIlJlYWN0IiwidXNlRWZmZWN0Iiwic2V0dGluZ3MiLCJrZXkiLCJ2YWx1ZSIsImRlZmF1bHRzIiwiY2FsbGJhY2siLCJjb21wb25lbnQiLCJTZXQiLCJhZGQiLCJkZWxldGUiLCJzaXplIiwibGlzdGVuZXIiLCJlIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBLGdLQU9hQSxTQUFTLEtBQVRBLENBQVMsQ0FFVEMsR0FBRyxLQUFIQSxDQUFHLENBQ0hDLE1BQU0sS0FBTkEsQ0FBTSxDQUNOQyxHQUFHLEtBQUhBLENBQUcsQ0FFQUMsVUFBVSxLQUFWQSxDQUFVLENBSVZDLFFBQVEsS0FBUkEsQ0FBUSxDQUlSQyxnQkFBZ0IsS0FBaEJBLENBQWdCLENBa0JoQkMsU0FBUyxLQUFUQSxDQUFTLENBWVRDLFNBQVMsS0FBVEEsQ0FBUyxDQUtUQyxXQUFXLEtBQVhBLENBQVcsbUJBeERJLHFCQUFtQixZQUNyQixxQkFBZ0IseWNBQ25CLHVCQUFrQiwrREFDMUIsT0FBTyxrSUFFekIsTUFBTUMsQ0FBTSxDQUFHQyxHQUFBQSxDQUFZLGFBQUEsRUFBQyxVQUFVLENBQUMsQ0FFMUJYLENBQVMsQ0FBRyxFQUFFLENBRWRDLENBQUcsQ0FBR1csQ0FBUSxDQUFDWCxHQUFHLENBQ2xCQyxDQUFNLENBQUdVLENBQVEsQ0FBQ1YsTUFBTSxDQUN4QkMsQ0FBRyxDQUFHUyxDQUFRLENBQUNULEdBQUcsQUFOUyxBQVFqQyxVQUFTQyxDQUFVLEVBQUcsQ0FDMUJRLENBQVEsQ0FBQ0MsRUFBRSxDQUFDLFFBQVEsQ0FBRUMsQ0FBZ0IsQ0FBQyxDQUN6QyxBQUVNLFNBQVNULENBQVEsRUFBRyxDQUN4Qk8sQ0FBUSxDQUFDRyxHQUFHLENBQUMsUUFBUSxDQUFFRCxDQUFnQixDQUFDLENBQzFDLEFBRU0sU0FBU1IsQ0FBZ0IsQ0FBQ1UsQ0FBbUMsQ0FBRUMsQ0FBVSxDQUFFQyxDQUFjLENBQWlCLENBQzlHLE9BQU8sQUFBQ0MsQ0FBSyxFQUFLLENBQ2YsSUFBTUMsQ0FBVyxDQUFHQyxHQUFBQSxDQUFjLGVBQUEsR0FBRSxDQUM5QkMsQ0FBUSxDQUFHLEFBQUNDLENBQU8sRUFBSyxDQUN2QixDQUFBLENBSnFFTCxDQUFjLEFBSXpFLEVBQUlBLEFBSnVEQSxDQUFjLENBSTNESyxDQUFPLENBQUMsQ0FBQSxFQUNqQ0gsQ0FBVyxFQUFFLENBRWxCLEFBTG9DLEFBWXJDLFFBTEFJLENBQUssUUFBQSxDQUFDQyxTQUFTLENBQUMsS0FDYmpCLENBQVMsQ0FBQ1MsQ0FBRSxDQUFFSyxDQUFRLENBQUMsQ0FDaEIsSUFBTWIsQ0FBVyxDQUFDUSxDQUFFLENBQUVLLENBQVEsQ0FBQyxDQUN4QyxDQUFFLEVBQUUsQ0FBQyxDQUVDLHdCQUFDTixDQUFTLGtCQUFLRyxDQUFLLEVBQUVPLFFBQVEsQ0FBRW5CLENBQVMsQ0FBQ1UsQ0FBRSxDQUFDLEdBQUksQUFBQyxDQUMzRCxBQUFDLENBQ0osQUFFTSxTQUFTVixDQUFTLENBQUNVLENBQVUsQ0FBRSxDQUNuQyxNQUFPLENBQ0pTLFFBQVEsQ0FBRWQsQ0FBUSxDQUFDYyxRQUFRLENBQUNULENBQUUsQ0FBQyxFQUFJLEVBQUUsQ0FDckNkLEdBQUcsQ0FBRSxDQUFDd0IsQ0FBVyxDQUFFQyxDQUFVLEdBQUt6QixDQUFHLENBQUNjLENBQUUsQ0FBbENVLENBQVcsQ0FBRUMsQ0FBVSxDQUF3QixDQUNyRDNCLEdBQUcsQ0FBRSxDQUFDMEIsQ0FBVyxDQUFFRSxDQUFhLEdBQUs1QixDQUFHLENBQUNnQixDQUFFLENBQXJDVSxDQUFXLENBQUVFLENBQWEsQ0FBMkIsQ0FDM0QzQixNQUFNLENBQUUsQ0FBQ3lCLENBQVcsQ0FBRUUsQ0FBYSxHQUFLM0IsQ0FBTSxDQUFDZSxDQUFFLENBQXhDVSxDQUFXLENBQUVFLENBQWEsQ0FBOEIsQ0FDakVyQixTQUFTLENBQUUsQUFBQ3NCLENBQVksRUFBS3RCLENBQVMsQ0FBQ1MsQ0FBRSxDQUE3QmEsQ0FBWSxDQUE0QixDQUNwRHJCLFdBQVcsQ0FBRSxBQUFDcUIsQ0FBWSxFQUFLckIsQ0FBVyxDQUFDUSxDQUFFLENBQS9CYSxDQUFZLENBQThCLENBQ3hEeEIsZ0JBQWdCLENBQUUsQ0FBQ3lCLENBQW1DLENBQUViLENBQWMsR0FBS1osQ0FBZ0IsQ0FBeEV5QixDQUFtQyxDQUFpRGQsQ0FBRSxDQUFqREMsQ0FBYyxDQUErQyxDQUN2SCxBQUFDLENBQ0osQUFFTSxTQUFTVixDQUFTLENBQUNTLENBQVUsQ0FBRWEsQ0FBWSxDQUFFLENBQ2pEOUIsQ0FBUyxDQUFDaUIsQ0FBRSxDQUFDLEdBQUssSUFBSWUsR0FBRyxBQUFFLENBQzNCaEMsQ0FBUyxDQUFDaUIsQ0FBRSxDQUFDLENBQUNnQixHQUFHLENBRmtCSCxDQUFZLENBRXBCLENBQzdCLEFBRU0sU0FBU3JCLENBQVcsQ0FBQ1EsQ0FBVSxDQUFFYSxDQUFZLENBQUUsQ0FDbkQ5QixDQUFTLENBQUNpQixDQUFFLENBQUMsRUFBRWlCLE1BQU0sQ0FEZ0JKLENBQVksQ0FDbEIsQ0FFM0I5QixDQUFTLENBQUNpQixDQUFFLENBQUMsRUFBRWtCLElBQUksR0FBSyxDQUFDLEVBQzFCLE9BQU9uQyxDQUFTLENBQUNpQixDQUFFLENBQUMsQ0FFekIsQUFFRCxTQUFTSCxDQUFnQixDQUFDUyxDQUFPLENBQUUsQ0FDaEMsR0FBS3ZCLENBQVMsQ0FBQ3VCLENBQU8sQ0FBQ04sRUFBRSxDQUFDLENBRTFCLElBQUssSUFBTW1CLENBQVEsR0FBSSxJQUFJcEMsQ0FBUyxDQUFDdUIsQ0FBTyxDQUFDTixFQUFFLENBQUMsQ0FBQyxDQUM5QyxHQUFJLENBQ0RtQixDQUFRLENBQUNiLENBQU8sQ0FBQyxDQUNuQixBQUFDLE1BQU9jLENBQUMsQ0FBRSxDQUNUM0IsQ0FBTSxDQUFDNEIsS0FBSyxDQUFDLG1DQUFtQyxDQUFFZixDQUFPLENBQUVjLENBQUMsQ0FBQyxDQUMvRCxBQUNILEFBUmtDLENBU3JDLEFBQUMifQ==