"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(a,b){for(var c in b)Object.defineProperty(a,c,{enumerable:!0,get:b[c]})}(exports,{commands:()=>q,section:()=>r,initialize:()=>s,shutdown:()=>t,register:()=>u,unregister:()=>v});const a=require("../../../common/logger"),b=require("@webpack"),c=require("../../../common/utilities/index"),d=require("../../modules/patcher/index"),e=g(require("react")),f=g(require("./components/SectionIcon"));function g(a){return a&&a.__esModule?a:{default:a}}const h=(0,a.createLogger)("API","Commands"),i=(0,d.create)("unbound-commands"),[j,k,l,m,n,o,p]=(0,b.bulk)(b.filters.byProps("getBuiltInCommands"),b.filters.byProps("getApplicationIconURL"),b.filters.byProps("useSearchManager"),a=>!a.mask&&a.icon&&a.selectable&&a.wrapper,b.filters.byDisplayName("ApplicationCommandDiscoverySectionIcon",!1),b.filters.byDisplayName("ApplicationCommandItem",!1),a=>a.type?.displayName==="ChannelApplicationIcon"),q=new Map,r={id:"unbound",type:0,name:"Unbound",icon:"https://github.com/unbound-mod.png"};function s(){try{i.before(p,"type",(a,[b])=>{!b.section&&b.command.__unbound&&(b.section=r)})}catch(a){h.error("Failed to patch ChannelApplicationIcon: ",a)}try{i.before(o,"default",(a,[b])=>{!b.section&&b.command.__unbound&&(b.section=r)})}catch(b){h.error("Failed to patch ApplicationCommandItem: ",b)}try{i.instead(n,"default",(a,b,d)=>{let[g]=b,h=void 0===g.selectable;if(g.section.id===r.id){let i=(0,c.classnames)(m.wrapper,g.selectable&&m.selectable,g.selectable&&g.isSelected&&m.selected);return e.default.createElement("div",{className:i},e.default.createElement(f.default,{width:g.width,height:g.height,className:(0,c.classnames)(m.icon,g.className),style:{width:`${g.width}px`,height:`${g.height}px`,padding:h?0:"4px",paddingBottom:h?0:"1px"}}))}return d.apply(a,b)})}catch(d){h.error("Failed to patch ApplicationCommandDiscoverySectionIcon: ",d)}try{j.BUILT_IN_SECTIONS.unbound=r}catch(g){h.error("Failed to push section to BUILT_IN_SECTIONS: ",g)}try{i.instead(k,"getApplicationIconURL",(a,b,c)=>b[0]?.id===r.id?r.icon:c.apply(a,b))}catch(s){h.error("Failed to patch getApplicationIconURL: ",s)}try{i.instead(l.default,"getApplicationSections",(a,b,c)=>{try{let d=c.apply(self,b)??[];return d.find(a=>a.id===r.id)||d.push(r),d}catch{return[]}})}catch(t){h.error("Failed to patch getApplicationSections: ",t)}try{i.after(l.default,"getQueryCommands",(a,[,,b],c)=>{if(!(!b||b.startsWith("/"))){for(let d of(c??=[],q.values()))if(!(!~d.name?.indexOf(b)||c.some(a=>a.__unbound&&a.id===d.id)))try{c.unshift(d)}catch{c=[...c,d]}}})}catch(u){h.error("Failed to patch getQueryCommands: ",u)}try{i.after(l,"useSearchManager",(a,[,b],c)=>{if(1!==b||!q.size)return;c.sectionDescriptors?.find?.(a=>a.id===r.id)||(c.sectionDescriptors??=[],c.sectionDescriptors.push(r)),c.filteredSectionId&&c.filteredSectionId!==r.id||c.activeSections.find(a=>a.id===r.id)||c.activeSections.push(r);let d=[...q.values()];if(d.some(a=>!c.commands?.find?.(b=>b.id===a.id))){c.commands??=[];let e=[...c.commands,...d];c.commands=[...new Set(e).values()]}c.filteredSectionId&&c.filteredSectionId!==r.id||c.commandsByActiveSection.find(a=>a.section.id===r.id)||c.commandsByActiveSection.push({section:r,data:[...d.values()]});let f=c.commandsByActiveSection.find(a=>a.section.id===r.id);(!c.filteredSectionId||c.filteredSectionId===r.id)&&f&&0===f.data.length&&0!==q.size&&(f.data=[...q.values()]);let g=c.sectionDescriptors.filter(a=>"-1"===a.id);g.length>1&&(c.sectionDescriptors=c.sectionDescriptors.filter(a=>"-1"!==a.id),c.sectionDescriptors.push(g.find(a=>"-1"===a.id)))})}catch(v){h.error("Failed to patch useSearchManager: ",v)}}function t(){try{delete j.BUILT_IN_SECTIONS.unbound}catch(a){h.error("Failed to remove section from BUILT_IN_SECTIONS: ",a)}i.unpatchAll()}function u(a){let{command:b,executor:c,...d}=a;b&&q.set(b,{type:3,target:1,id:b,name:b,applicationId:r.id,options:[],__unbound:!0,listed:!0,dmPermission:!0,execute(){},...d})}function v(a){q.delete(a)}
//# sourceMappingURL=data:application/json;base64,