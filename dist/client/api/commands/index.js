"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function _export(e,t){for(var i in t)Object.defineProperty(e,i,{enumerable:!0,get:t[i]})}(exports,{commands:()=>h,section:()=>y,initialize:()=>initialize,shutdown:()=>shutdown,register:()=>register,unregister:()=>unregister});const e=require("../../../common/logger"),t=require("@webpack"),i=require("../../../common/utilities/index"),r=require("../../modules/patcher/index"),n=_interopRequireDefault(require("react")),s=_interopRequireDefault(require("./components/SectionIcon"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const c=(0,e.createLogger)("API","Commands"),o=(0,r.create)("unbound-commands"),[d,a,l,u,f,p,m]=(0,t.bulk)(t.filters.byProps("getBuiltInCommands"),t.filters.byProps("getApplicationIconURL"),t.filters.byProps("useSearchManager"),e=>!e.mask&&e.icon&&e.selectable&&e.wrapper,t.filters.byDisplayName("ApplicationCommandDiscoverySectionIcon",!1),t.filters.byDisplayName("ApplicationCommandItem",!1),e=>e.type?.displayName==="ChannelApplicationIcon"),h=new Map,y={id:"unbound",type:0,name:"Unbound",icon:"https://github.com/unbound-mod.png"};function initialize(){try{o.before(m,"type",(e,[t])=>{!t.section&&t.command.__unbound&&(t.section=y)})}catch(e){c.error("Failed to patch ChannelApplicationIcon: ",e)}try{o.before(p,"default",(e,[t])=>{!t.section&&t.command.__unbound&&(t.section=y)})}catch(t){c.error("Failed to patch ApplicationCommandItem: ",t)}try{o.instead(f,"default",(e,t,r)=>{let[c]=t,o=void 0===c.selectable;if(c.section.id===y.id){let d=(0,i.classnames)(u.wrapper,c.selectable&&u.selectable,c.selectable&&c.isSelected&&u.selected);return n.default.createElement("div",{className:d},n.default.createElement(s.default,{width:c.width,height:c.height,className:(0,i.classnames)(u.icon,c.className),style:{width:`${c.width}px`,height:`${c.height}px`,padding:o?0:"4px",paddingBottom:o?0:"1px"}}))}return r.apply(e,t)})}catch(r){c.error("Failed to patch ApplicationCommandDiscoverySectionIcon: ",r)}try{d.BUILT_IN_SECTIONS.unbound=y}catch(b){c.error("Failed to push section to BUILT_IN_SECTIONS: ",b)}try{o.instead(a,"getApplicationIconURL",(e,t,i)=>t[0]?.id===y.id?y.icon:i.apply(e,t))}catch(g){c.error("Failed to patch getApplicationIconURL: ",g)}try{o.instead(l.default,"getApplicationSections",(e,t,i)=>{try{let r=i.apply(self,t)??[];return r.find(e=>e.id===y.id)||r.push(y),r}catch{return[]}})}catch($){c.error("Failed to patch getApplicationSections: ",$)}try{o.after(l.default,"getQueryCommands",(e,[,,t],i)=>{if(!(!t||t.startsWith("/"))){for(let r of(i??=[],h.values()))if(!(!~r.name?.indexOf(t)||i.some(e=>e.__unbound&&e.id===r.id)))try{i.unshift(r)}catch{i=[...i,r]}}})}catch(S){c.error("Failed to patch getQueryCommands: ",S)}try{o.after(l,"useSearchManager",(e,[,t],i)=>{if(1!==t||!h.size)return;i.sectionDescriptors?.find?.(e=>e.id===y.id)||(i.sectionDescriptors??=[],i.sectionDescriptors.push(y)),i.filteredSectionId&&i.filteredSectionId!==y.id||i.activeSections.find(e=>e.id===y.id)||i.activeSections.push(y);let r=[...h.values()];if(r.some(e=>!i.commands?.find?.(t=>t.id===e.id))){i.commands??=[];let n=[...i.commands,...r];i.commands=[...new Set(n).values()]}i.filteredSectionId&&i.filteredSectionId!==y.id||i.commandsByActiveSection.find(e=>e.section.id===y.id)||i.commandsByActiveSection.push({section:y,data:[...r.values()]});let s=i.commandsByActiveSection.find(e=>e.section.id===y.id);(!i.filteredSectionId||i.filteredSectionId===y.id)&&s&&0===s.data.length&&0!==h.size&&(s.data=[...h.values()]);let c=i.sectionDescriptors.filter(e=>"-1"===e.id);c.length>1&&(i.sectionDescriptors=i.sectionDescriptors.filter(e=>"-1"!==e.id),i.sectionDescriptors.push(c.find(e=>"-1"===e.id)))})}catch(v){c.error("Failed to patch useSearchManager: ",v)}}function shutdown(){try{delete d.BUILT_IN_SECTIONS.unbound}catch(e){c.error("Failed to remove section from BUILT_IN_SECTIONS: ",e)}o.unpatchAll()}function register(e){let{command:t,name:i,description:r,executor:n,...s}=e;(t||i)&&r&&h.set(t,{type:3,target:1,id:t||i,name:t||i,displayName:t||i,displayDescription:r,applicationId:y.id,options:[],__unbound:!0,listed:!0,dmPermission:!0,executor(){},...s})}function unregister(e){h.delete(e)}
//# sourceMappingURL=data:application/json;base64,