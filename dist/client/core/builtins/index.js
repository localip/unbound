"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function _export(a,b){for(var c in b)Object.defineProperty(a,c,{enumerable:!0,get:b[c]})}(exports,{initialize:()=>initialize,shutdown:()=>shutdown,start:()=>start,stop:()=>stop});const a=require("../../api/modals"),b=require("../../../common/logger"),c=_interopRequireWildcard(require("../../../common/settings")),d=require("../../modules/webpack/common"),e=_interopRequireWildcard(require("./registry")),f=require("../../../common/utilities/index");function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!==f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}const g=(0,b.createLogger)("Built-In"),h=(0,f.debounce)(onSettingsChange,250),i={};async function initialize(){c.on("change",h);let a=Object.keys(e);for(let b=0;b<a.length;b++){let d=a[b];await start(d)}}async function shutdown(){c.off("change",h);let a=Object.keys(e);for(let b=0;b<a.length;b++){let d=a[b];await stop(d)}}async function start(a){let b=e[a];if(c.get("unbound",b.data.id,b.data.default)&& !i[b.data.id]&&b)try{b.data.wait?await b.initialize?.():b.initialize?.(),i[b.data.id]=!0,g.log(`${b.data.name} was initialized.`)}catch(d){g.error(`Failed to start ${b.data.name}.`,d.message)}}async function stop(a){let b=e[a];if(i[b.data.id]&&b)try{b.data.wait?await b.shutdown?.():b.shutdown?.(),delete i[b.data.id],g.log(`${b.data.name} was stopped.`)}catch(c){g.error(`Failed to stop ${b.data.name}.`,c.message)}}async function onSettingsChange({key:b,value:c}){let f=Object.entries(e).find(([,a])=>a.data.id===b);if(!f)return;let[g,h]=f;if(h.data.restart)return(0,a.showConfirmModal)({header:d.Locale.Messages.UNBOUND_RESTART,content:d.Locale.Messages.UNBOUND_RESTART_SETTING_DESC,confirmText:d.Locale.Messages.UNBOUND_RESTART,cancelText:d.Locale.Messages.CANCEL,onConfirm:()=>window.location.reload()});c?await start(g):await stop(g)}
//# sourceMappingURL=data:application/json;base64,