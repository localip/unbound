"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function _export(e,t){for(var a in t)Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}(exports,{initialize:()=>initialize,shutdown:()=>shutdown,start:()=>start,stop:()=>stop});const e=require("../../api/modals"),t=require("../../../common/logger"),a=_interopRequireWildcard(require("../../../common/settings")),i=require("../../modules/webpack/common"),r=_interopRequireWildcard(require("./registry")),n=require("../../../common/utilities/index");function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,a=new WeakMap;return(_getRequireWildcardCache=function(e){return e?a:t})(e)}function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var a=_getRequireWildcardCache(t);if(a&&a.has(e))return a.get(e);var i={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if("default"!==n&&Object.prototype.hasOwnProperty.call(e,n)){var o=r?Object.getOwnPropertyDescriptor(e,n):null;o&&(o.get||o.set)?Object.defineProperty(i,n,o):i[n]=e[n]}return i.default=e,a&&a.set(e,i),i}const o=(0,t.createLogger)("Built-In"),s=(0,n.debounce)(onSettingsChange,250),d={};async function initialize(){a.on("change",s);let e=Object.keys(r);for(let t=0;t<e.length;t++){let i=e[t];await start(i)}}async function shutdown(){a.off("change",s);let e=Object.keys(r);for(let t=0;t<e.length;t++){let i=e[t];await stop(i)}}async function start(e){let t=r[e];if(a.get("unbound",t.data.id,t.data.default)&&!d[t.data.id]&&t)try{t.data.wait?await t.initialize?.():t.initialize?.(),d[t.data.id]=!0,o.log(`${t.data.name} was initialized.`)}catch(i){o.error(`Failed to start ${t.data.name}.`,i.message)}}async function stop(e){let t=r[e];if(d[t.data.id]&&t)try{t.data.wait?await t.shutdown?.():t.shutdown?.(),delete d[t.data.id],o.log(`${t.data.name} was stopped.`)}catch(a){o.error(`Failed to stop ${t.data.name}.`,a.message)}}async function onSettingsChange({key:t,value:a}){let n=Object.entries(r).find(([,e])=>e.data.id===t);if(!n)return;let[o,s]=n;if(s.data.restart)return(0,e.showConfirmModal)({header:i.Locale.Messages.UNBOUND_RESTART,content:i.Locale.Messages.UNBOUND_RESTART_SETTING_DESC,confirmText:i.Locale.Messages.UNBOUND_RESTART,cancelText:i.Locale.Messages.CANCEL,onConfirm:()=>window.location.reload()});a?await start(o):await stop(o)}
//# sourceMappingURL=data:application/json;base64,