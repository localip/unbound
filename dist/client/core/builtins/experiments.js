"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function _export(e,n){for(var t in n)Object.defineProperty(e,t,{enumerable:!0,get:n[t]})}(exports,{data:()=>i,initialize:()=>initialize,shutdown:()=>shutdown});const e=require("../../modules/webpack/common"),n=require("../../modules/webpack/stores"),t=require("../../modules/patcher/index"),a=(0,t.create)("unbound-experiments"),i={name:"Experiments",id:"dev.experiments",default:!1,restart:!0,wait:!1,cancelled:!1};async function initialize(){i.cancelled=!1;let t=Object.values(e.Dispatcher._dependencyGraph.nodes);if(i.cancelled)return;let r=a.after(n.Users,"getCurrentUser",(n,t,a)=>{if(a)return new Proxy({},{get:(n,t)=>"hasFlag"===t?function(n){return n===e.Constants.UserFlags.STAFF||a.hasFlag.call(this,n)}:a[t]})});function onDispatch(){let a=t.find(e=>"ExperimentStore"===e.name);console.log(a),a&&a.actionHandler.CONNECTION_OPEN({type:"CONNECTION_OPEN",guildExperiments:[],experiments:[],user:{...n.Users.getCurrentUser(),flags:1}});let i=t.find(e=>"DeveloperExperimentStore"===e.name);i&&i.actionHandler.CONNECTION_OPEN(),e.Dispatcher.unsubscribe("CONNECTION_OPEN",onDispatch),r()}n.Users.getCurrentUser()?onDispatch():e.Dispatcher.subscribe("CONNECTION_OPEN",onDispatch)}function shutdown(){i.cancelled=!0,a.unpatchAll()}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jbGllbnQvY29yZS9idWlsdGlucy9leHBlcmltZW50cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdGFudHMsIERpc3BhdGNoZXIgfSBmcm9tICdAd2VicGFjay9jb21tb24nO1xyXG5pbXBvcnQgeyBVc2VycyB9IGZyb20gJ0B3ZWJwYWNrL3N0b3Jlcyc7XHJcbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BwYXRjaGVyJztcclxuXHJcbmNvbnN0IFBhdGNoZXIgPSBjcmVhdGUoJ3VuYm91bmQtZXhwZXJpbWVudHMnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBkYXRhID0ge1xyXG4gICBuYW1lOiAnRXhwZXJpbWVudHMnLFxyXG4gICBpZDogJ2Rldi5leHBlcmltZW50cycsXHJcbiAgIGRlZmF1bHQ6IGZhbHNlLFxyXG4gICByZXN0YXJ0OiB0cnVlLFxyXG4gICB3YWl0OiBmYWxzZSxcclxuXHJcbiAgIGNhbmNlbGxlZDogZmFsc2VcclxufTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xyXG4gICBkYXRhLmNhbmNlbGxlZCA9IGZhbHNlO1xyXG5cclxuICAgLy8gV2FpdCBmb3IgZGlzcGF0Y2hlciBoYW5kbGVyc1xyXG4gICBjb25zdCBldmVudHM6IGFueVtdID0gT2JqZWN0LnZhbHVlcyhEaXNwYXRjaGVyLl9kZXBlbmRlbmN5R3JhcGgubm9kZXMpO1xyXG5cclxuICAgLy8gRG9uJ3QgcnVuIGNvZGUgYmxvY2sgaW5jYXNlIGV4cGVyaW1lbnRzIGlzIHRvZ2dsZWQgYmVmb3JlIHRoZSBhYm92ZSByZXNvbHZlc1xyXG4gICBpZiAoZGF0YS5jYW5jZWxsZWQpIHJldHVybjtcclxuXHJcbiAgIC8vIFNwb29mIHRoZSBzdGFmZiBmbGFnXHJcbiAgIGNvbnN0IHVucGF0Y2ggPSBQYXRjaGVyLmFmdGVyKFVzZXJzLCAnZ2V0Q3VycmVudFVzZXInLCAoXywgX18sIHJlcykgPT4ge1xyXG4gICAgICBpZiAoIXJlcykgcmV0dXJuO1xyXG5cclxuICAgICAgcmV0dXJuIG5ldyBQcm94eSh7fSwge1xyXG4gICAgICAgICBnZXQoXywgcHJvcCkge1xyXG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gJ2hhc0ZsYWcnKSB7XHJcbiAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoZmxhZykge1xyXG4gICAgICAgICAgICAgICAgICBpZiAoZmxhZyA9PT0gQ29uc3RhbnRzLlVzZXJGbGFncy5TVEFGRikge1xyXG4gICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5oYXNGbGFnLmNhbGwodGhpcywgZmxhZyk7XHJcbiAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiByZXNbcHJvcF07XHJcbiAgICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgIH0pO1xyXG5cclxuICAgZnVuY3Rpb24gb25EaXNwYXRjaCgpIHtcclxuICAgICAgLy8gQ2FsbCB0aGUgZGlzcGF0Y2hlciBhY3Rpb24gaGFuZGxlciB3aXRoIHRoZSBzcG9vZmVkIGZsYWdzIHRvIGludGVybmFsbHkgYWxsb3cgYnVja2V0IG92ZXJyaWRlc1xyXG4gICAgICBjb25zdCBFeHBlcmltZW50U3RvcmUgPSBldmVudHMuZmluZChoID0+IGgubmFtZSA9PT0gJ0V4cGVyaW1lbnRTdG9yZScpO1xyXG4gICAgICBjb25zb2xlLmxvZyhFeHBlcmltZW50U3RvcmUpO1xyXG4gICAgICBpZiAoRXhwZXJpbWVudFN0b3JlKSBFeHBlcmltZW50U3RvcmUuYWN0aW9uSGFuZGxlci5DT05ORUNUSU9OX09QRU4oe1xyXG4gICAgICAgICB0eXBlOiAnQ09OTkVDVElPTl9PUEVOJyxcclxuICAgICAgICAgZ3VpbGRFeHBlcmltZW50czogW10sXHJcbiAgICAgICAgIGV4cGVyaW1lbnRzOiBbXSxcclxuICAgICAgICAgdXNlcjoge1xyXG4gICAgICAgICAgICAuLi5Vc2Vycy5nZXRDdXJyZW50VXNlcigpLFxyXG4gICAgICAgICAgICBmbGFnczogMSxcclxuICAgICAgICAgfVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIC8vIENhbGwgdGhlIGRpc3BhdGNoZXIgYWN0aW9uIGhhbmRsZXIgdG8gdXBkYXRlIGlzRGV2ZWxvcGVyIGludGVybmFsbHlcclxuICAgICAgY29uc3QgRGV2ZWxvcGVyRXhwZXJpbWVudFN0b3JlID0gZXZlbnRzLmZpbmQoaCA9PiBoLm5hbWUgPT09ICdEZXZlbG9wZXJFeHBlcmltZW50U3RvcmUnKTtcclxuICAgICAgaWYgKERldmVsb3BlckV4cGVyaW1lbnRTdG9yZSkgRGV2ZWxvcGVyRXhwZXJpbWVudFN0b3JlLmFjdGlvbkhhbmRsZXIuQ09OTkVDVElPTl9PUEVOKCk7XHJcblxyXG4gICAgICBEaXNwYXRjaGVyLnVuc3Vic2NyaWJlKCdDT05ORUNUSU9OX09QRU4nLCBvbkRpc3BhdGNoKTtcclxuICAgICAgdW5wYXRjaCgpO1xyXG4gICB9XHJcblxyXG4gICBpZiAoVXNlcnMuZ2V0Q3VycmVudFVzZXIoKSkge1xyXG4gICAgICBvbkRpc3BhdGNoKCk7XHJcbiAgIH0gZWxzZSB7XHJcbiAgICAgIERpc3BhdGNoZXIuc3Vic2NyaWJlKCdDT05ORUNUSU9OX09QRU4nLCBvbkRpc3BhdGNoKTtcclxuICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNodXRkb3duKCkge1xyXG4gICBkYXRhLmNhbmNlbGxlZCA9IHRydWU7XHJcbiAgIFBhdGNoZXIudW5wYXRjaEFsbCgpO1xyXG59Il0sIm5hbWVzIjpbImRhdGEiLCJpbml0aWFsaXplIiwic2h1dGRvd24iLCJQYXRjaGVyIiwiY3JlYXRlIiwibmFtZSIsImlkIiwiZGVmYXVsdCIsInJlc3RhcnQiLCJ3YWl0IiwiY2FuY2VsbGVkIiwiZXZlbnRzIiwiT2JqZWN0IiwidmFsdWVzIiwiRGlzcGF0Y2hlciIsIl9kZXBlbmRlbmN5R3JhcGgiLCJub2RlcyIsInVucGF0Y2giLCJhZnRlciIsIlVzZXJzIiwiXyIsIl9fIiwicmVzIiwiUHJveHkiLCJnZXQiLCJwcm9wIiwiZmxhZyIsIkNvbnN0YW50cyIsIlVzZXJGbGFncyIsIlNUQUZGIiwiaGFzRmxhZyIsImNhbGwiLCJvbkRpc3BhdGNoIiwiRXhwZXJpbWVudFN0b3JlIiwiZmluZCIsImgiLCJjb25zb2xlIiwibG9nIiwiYWN0aW9uSGFuZGxlciIsIkNPTk5FQ1RJT05fT1BFTiIsInR5cGUiLCJndWlsZEV4cGVyaW1lbnRzIiwiZXhwZXJpbWVudHMiLCJ1c2VyIiwiZ2V0Q3VycmVudFVzZXIiLCJmbGFncyIsIkRldmVsb3BlckV4cGVyaW1lbnRTdG9yZSIsInVuc3Vic2NyaWJlIiwic3Vic2NyaWJlIiwidW5wYXRjaEFsbCJdLCJtYXBwaW5ncyI6IkFBQUEsd0tBTWFBLElBQUksS0FBSkEsQ0FBSSxDQVVLQyxVQUFVLEtBQVZBLFVBQVUsQ0E0RGhCQyxRQUFRLEtBQVJBLFFBQVEsbUJBNUVjLDhCQUFpQixZQUNqQyw4QkFBaUIsWUFDaEIsNkJBQVUsRUFFM0JDLENBQU8sQ0FBR0MsR0FBQUEsQ0FBTSxPQUFBLEVBQUMscUJBQXFCLENBQUMsQ0FFaENKLENBQUksQ0FBRyxDQUNqQkssSUFBSSxDQUFFLGFBQWEsQ0FDbkJDLEVBQUUsQ0FBRSxpQkFBaUIsQ0FDckJDLE9BQU8sQ0FBRSxDQUFBLENBQUssQ0FDZEMsT0FBTyxDQUFFLENBQUEsQ0FBSSxDQUNiQyxJQUFJLENBQUUsQ0FBQSxDQUFLLENBRVhDLFNBQVMsQ0FBRSxDQUFBLENBQUssQ0FDbEIsQUFFTSxnQkFBZVQsVUFBVSxFQUFHLENBQ2hDRCxDQUFJLENBQUNVLFNBQVMsQ0FBRyxDQUFBLENBQUssQUFHdEIsS0FBTUMsQ0FBTSxDQUFVQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ0MsQ0FBVSxXQUFBLENBQUNDLGdCQUFnQixDQUFDQyxLQUFLLENBQUMsQUFBQyxBQUd2RSxJQUFJaEIsQ0FBSSxDQUFDVSxTQUFTLENBQUUsTUFBTyxBQUczQixLQUFNTyxDQUFPLENBQUdkLENBQU8sQ0FBQ2UsS0FBSyxDQUFDQyxDQUFLLE1BQUEsQ0FBRSxnQkFBZ0IsQ0FBRSxDQUFDQyxDQUFDLENBQUVDLENBQUUsQ0FBRUMsQ0FBRyxHQUFLLENBQ3BFLEdBQUtBLENBQUcsQ0FFUixPQUFPLElBQUlDLEtBQUssQ0FBQyxFQUFFLENBQUUsQ0FDbEJDLEdBQUcsQ0FBSEEsQ0FBSUosQ0FBQyxDQUFFSyxDQUFJLEdBQ1IsQUFBSUEsQUFBUyxTQUFTLEdBRGxCQSxDQUFJLEFBQ2MsQ0FDWixTQUFVQyxDQUFJLENBQUUsUUFDcEIsQUFEY0EsQ0FBSSxHQUNMQyxDQUFTLFVBQUEsQ0FBQ0MsU0FBUyxDQUFDQyxLQUFLLEVBSS9CUCxDQUFHLENBQUNRLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FMZEwsQ0FBSSxDQUtpQixBQUZsQyxDQUdILENBR0dKLENBQUcsQ0FYTkcsQ0FBSSxDQVdRLEFBRmYsQUFHSCxDQUNILENBQUMsQUFBQyxBQWhCYyxDQWlCbkIsQ0FBQyxBQUFDLEFBRUgsVUFBU08sVUFBVSxFQUFHLENBRW5CLElBQU1DLENBQWUsQ0FBR3RCLENBQU0sQ0FBQ3VCLElBQUksQ0FBQ0MsQ0FBQyxFQUFJQSxBQUFXLGlCQUFpQixHQUE1QkEsQ0FBQyxDQUFDOUIsSUFBSSxBQUFzQixDQUFDLEFBQUMsQUFDdkUrQixDQUFBQSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0osQ0FBZSxDQUFDLENBQ3hCQSxDQUFlLEVBQUVBLENBQWUsQ0FBQ0ssYUFBYSxDQUFDQyxlQUFlLENBQUMsQ0FDaEVDLElBQUksQ0FBRSxpQkFBaUIsQ0FDdkJDLGdCQUFnQixDQUFFLEVBQUUsQ0FDcEJDLFdBQVcsQ0FBRSxFQUFFLENBQ2ZDLElBQUksQ0FBRSxDQUNILEdBQUd4QixDQUFLLE1BQUEsQ0FBQ3lCLGNBQWMsRUFBRSxDQUN6QkMsS0FBSyxDQUFFLENBQUMsQ0FDVixDQUNILENBQUMsQUFHRixLQUFNQyxDQUF3QixDQUFHbkMsQ0FBTSxDQUFDdUIsSUFBSSxDQUFDQyxDQUFDLEVBQUlBLEFBQVcsMEJBQTBCLEdBQXJDQSxDQUFDLENBQUM5QixJQUFJLEFBQStCLENBQUMsQUFBQyxDQUNyRnlDLENBQXdCLEVBQUVBLENBQXdCLENBQUNSLGFBQWEsQ0FBQ0MsZUFBZSxFQUFFLENBRXRGekIsQ0FBVSxXQUFBLENBQUNpQyxXQUFXLENBQUMsaUJBQWlCLENBQUVmLFVBQVUsQ0FBQyxDQUNyRGYsQ0FBTyxFQUFFLENBQ1gsQUFFR0UsQ0FBSyxNQUFBLENBQUN5QixjQUFjLEVBQUUsQ0FDdkJaLFVBQVUsRUFBRSxDQUVabEIsQ0FBVSxXQUFBLENBQUNrQyxTQUFTLENBQUMsaUJBQWlCLENBQUVoQixVQUFVLENBQUMsQ0FHeEQsQUFFTSxTQUFTOUIsUUFBUSxFQUFHLENBQ3hCRixDQUFJLENBQUNVLFNBQVMsQ0FBRyxDQUFBLENBQUksQ0FDckJQLENBQU8sQ0FBQzhDLFVBQVUsRUFBRSxDQUN0QiJ9