"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function _export(e,n){for(var t in n)Object.defineProperty(e,t,{enumerable:!0,get:n[t]})}(exports,{data:()=>i,initialize:()=>initialize,shutdown:()=>shutdown});const e=require("../../modules/webpack/common"),n=require("../../modules/webpack/stores"),t=require("../../modules/patcher/index"),a=(0,t.create)("unbound-experiments"),i={name:"Experiments",id:"dev.experiments",default:!1,restart:!0,wait:!1,cancelled:!1};async function initialize(){i.cancelled=!1;let t=Object.values(e.Dispatcher._dependencyGraph.nodes);if(i.cancelled)return;let r=a.after(n.Users,"getCurrentUser",(n,t,a)=>{if(a)return new Proxy({},{get:(n,t)=>"hasFlag"===t?function(n){return n===e.Constants.UserFlags.STAFF||a.hasFlag.call(this,n)}:a[t]})});function onDispatch(){let a=t.find(e=>"ExperimentStore"===e.name);console.log(a),a&&a.actionHandler.CONNECTION_OPEN({type:"CONNECTION_OPEN",guildExperiments:[],experiments:[],user:{...n.Users.getCurrentUser(),flags:1}});let i=t.find(e=>"DeveloperExperimentStore"===e.name);i&&i.actionHandler.CONNECTION_OPEN(),e.Dispatcher.unsubscribe("CONNECTION_OPEN",onDispatch),r()}n.Users.getCurrentUser()?onDispatch():e.Dispatcher.subscribe("CONNECTION_OPEN",onDispatch)}function shutdown(){i.cancelled=!0,a.unpatchAll()}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jbGllbnQvY29yZS9idWlsdGlucy9leHBlcmltZW50cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25zdGFudHMsIERpc3BhdGNoZXIgfSBmcm9tICdAd2VicGFjay9jb21tb24nO1xyXG5pbXBvcnQgeyBVc2VycyB9IGZyb20gJ0B3ZWJwYWNrL3N0b3Jlcyc7XHJcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSAnQHV0aWxpdGllcyc7XHJcbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ0BwYXRjaGVyJztcclxuXHJcbmNvbnN0IFBhdGNoZXIgPSBjcmVhdGUoJ3VuYm91bmQtZXhwZXJpbWVudHMnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBkYXRhID0ge1xyXG4gICBuYW1lOiAnRXhwZXJpbWVudHMnLFxyXG4gICBpZDogJ2Rldi5leHBlcmltZW50cycsXHJcbiAgIGRlZmF1bHQ6IGZhbHNlLFxyXG4gICByZXN0YXJ0OiB0cnVlLFxyXG4gICB3YWl0OiBmYWxzZSxcclxuXHJcbiAgIGNhbmNlbGxlZDogZmFsc2VcclxufTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xyXG4gICBkYXRhLmNhbmNlbGxlZCA9IGZhbHNlO1xyXG5cclxuICAgLy8gV2FpdCBmb3IgZGlzcGF0Y2hlciBoYW5kbGVyc1xyXG4gICBjb25zdCBldmVudHMgPSBPYmplY3QudmFsdWVzKERpc3BhdGNoZXIuX2RlcGVuZGVuY3lHcmFwaC5ub2Rlcyk7XHJcblxyXG4gICAvLyBEb24ndCBydW4gY29kZSBibG9jayBpbmNhc2UgZXhwZXJpbWVudHMgaXMgdG9nZ2xlZCBiZWZvcmUgdGhlIGFib3ZlIHJlc29sdmVzXHJcbiAgIGlmIChkYXRhLmNhbmNlbGxlZCkgcmV0dXJuO1xyXG5cclxuICAgLy8gU3Bvb2YgdGhlIHN0YWZmIGZsYWdcclxuICAgY29uc3QgdW5wYXRjaCA9IFBhdGNoZXIuYWZ0ZXIoVXNlcnMsICdnZXRDdXJyZW50VXNlcicsIChfLCBfXywgcmVzKSA9PiB7XHJcbiAgICAgIGlmICghcmVzKSByZXR1cm47XHJcblxyXG4gICAgICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XHJcbiAgICAgICAgIGdldChfLCBwcm9wKSB7XHJcbiAgICAgICAgICAgIGlmIChwcm9wID09PSAnaGFzRmxhZycpIHtcclxuICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChmbGFnKSB7XHJcbiAgICAgICAgICAgICAgICAgIGlmIChmbGFnID09PSBDb25zdGFudHMuVXNlckZsYWdzLlNUQUZGKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmhhc0ZsYWcuY2FsbCh0aGlzLCBmbGFnKTtcclxuICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHJlc1twcm9wXTtcclxuICAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgfSk7XHJcblxyXG4gICBmdW5jdGlvbiBvbkRpc3BhdGNoKCkge1xyXG4gICAgICAvLyBDYWxsIHRoZSBkaXNwYXRjaGVyIGFjdGlvbiBoYW5kbGVyIHdpdGggdGhlIHNwb29mZWQgZmxhZ3MgdG8gaW50ZXJuYWxseSBhbGxvdyBidWNrZXQgb3ZlcnJpZGVzXHJcbiAgICAgIGNvbnN0IEV4cGVyaW1lbnRTdG9yZSA9IGV2ZW50cy5maW5kKGggPT4gaC5uYW1lID09PSAnRXhwZXJpbWVudFN0b3JlJyk7XHJcbiAgICAgIGNvbnNvbGUubG9nKEV4cGVyaW1lbnRTdG9yZSk7XHJcbiAgICAgIGlmIChFeHBlcmltZW50U3RvcmUpIEV4cGVyaW1lbnRTdG9yZS5hY3Rpb25IYW5kbGVyLkNPTk5FQ1RJT05fT1BFTih7XHJcbiAgICAgICAgIHR5cGU6ICdDT05ORUNUSU9OX09QRU4nLFxyXG4gICAgICAgICBndWlsZEV4cGVyaW1lbnRzOiBbXSxcclxuICAgICAgICAgZXhwZXJpbWVudHM6IFtdLFxyXG4gICAgICAgICB1c2VyOiB7XHJcbiAgICAgICAgICAgIC4uLlVzZXJzLmdldEN1cnJlbnRVc2VyKCksXHJcbiAgICAgICAgICAgIGZsYWdzOiAxLFxyXG4gICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgLy8gQ2FsbCB0aGUgZGlzcGF0Y2hlciBhY3Rpb24gaGFuZGxlciB0byB1cGRhdGUgaXNEZXZlbG9wZXIgaW50ZXJuYWxseVxyXG4gICAgICBjb25zdCBEZXZlbG9wZXJFeHBlcmltZW50U3RvcmUgPSBldmVudHMuZmluZChoID0+IGgubmFtZSA9PT0gJ0RldmVsb3BlckV4cGVyaW1lbnRTdG9yZScpO1xyXG4gICAgICBpZiAoRGV2ZWxvcGVyRXhwZXJpbWVudFN0b3JlKSBEZXZlbG9wZXJFeHBlcmltZW50U3RvcmUuYWN0aW9uSGFuZGxlci5DT05ORUNUSU9OX09QRU4oKTtcclxuXHJcbiAgICAgIERpc3BhdGNoZXIudW5zdWJzY3JpYmUoJ0NPTk5FQ1RJT05fT1BFTicsIG9uRGlzcGF0Y2gpO1xyXG4gICAgICB1bnBhdGNoKCk7XHJcbiAgIH1cclxuXHJcbiAgIGlmIChVc2Vycy5nZXRDdXJyZW50VXNlcigpKSB7XHJcbiAgICAgIG9uRGlzcGF0Y2goKTtcclxuICAgfSBlbHNlIHtcclxuICAgICAgRGlzcGF0Y2hlci5zdWJzY3JpYmUoJ0NPTk5FQ1RJT05fT1BFTicsIG9uRGlzcGF0Y2gpO1xyXG4gICB9XHJcblxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2h1dGRvd24oKSB7XHJcbiAgIGRhdGEuY2FuY2VsbGVkID0gdHJ1ZTtcclxuICAgUGF0Y2hlci51bnBhdGNoQWxsKCk7XHJcbn0iXSwibmFtZXMiOlsiZGF0YSIsImluaXRpYWxpemUiLCJzaHV0ZG93biIsIlBhdGNoZXIiLCJjcmVhdGUiLCJuYW1lIiwiaWQiLCJkZWZhdWx0IiwicmVzdGFydCIsIndhaXQiLCJjYW5jZWxsZWQiLCJldmVudHMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJEaXNwYXRjaGVyIiwiX2RlcGVuZGVuY3lHcmFwaCIsIm5vZGVzIiwidW5wYXRjaCIsImFmdGVyIiwiVXNlcnMiLCJfIiwiX18iLCJyZXMiLCJQcm94eSIsImdldCIsInByb3AiLCJmbGFnIiwiQ29uc3RhbnRzIiwiVXNlckZsYWdzIiwiU1RBRkYiLCJoYXNGbGFnIiwiY2FsbCIsIm9uRGlzcGF0Y2giLCJFeHBlcmltZW50U3RvcmUiLCJmaW5kIiwiaCIsImNvbnNvbGUiLCJsb2ciLCJhY3Rpb25IYW5kbGVyIiwiQ09OTkVDVElPTl9PUEVOIiwidHlwZSIsImd1aWxkRXhwZXJpbWVudHMiLCJleHBlcmltZW50cyIsInVzZXIiLCJnZXRDdXJyZW50VXNlciIsImZsYWdzIiwiRGV2ZWxvcGVyRXhwZXJpbWVudFN0b3JlIiwidW5zdWJzY3JpYmUiLCJzdWJzY3JpYmUiLCJ1bnBhdGNoQWxsIl0sIm1hcHBpbmdzIjoiQUFBQSx3S0FPYUEsSUFBSSxLQUFKQSxDQUFJLENBVUtDLFVBQVUsS0FBVkEsVUFBVSxDQTREaEJDLFFBQVEsS0FBUkEsUUFBUSxtQkE3RWMsOEJBQWlCLFlBQ2pDLDhCQUFpQixZQUVoQiw2QkFBVSxFQUUzQkMsQ0FBTyxDQUFHQyxHQUFBQSxDQUFNLE9BQUEsRUFBQyxxQkFBcUIsQ0FBQyxDQUVoQ0osQ0FBSSxDQUFHLENBQ2pCSyxJQUFJLENBQUUsYUFBYSxDQUNuQkMsRUFBRSxDQUFFLGlCQUFpQixDQUNyQkMsT0FBTyxDQUFFLENBQUEsQ0FBSyxDQUNkQyxPQUFPLENBQUUsQ0FBQSxDQUFJLENBQ2JDLElBQUksQ0FBRSxDQUFBLENBQUssQ0FFWEMsU0FBUyxDQUFFLENBQUEsQ0FBSyxDQUNsQixBQUVNLGdCQUFlVCxVQUFVLEVBQUcsQ0FDaENELENBQUksQ0FBQ1UsU0FBUyxDQUFHLENBQUEsQ0FBSyxBQUd0QixLQUFNQyxDQUFNLENBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDQyxDQUFVLFdBQUEsQ0FBQ0MsZ0JBQWdCLENBQUNDLEtBQUssQ0FBQyxBQUFDLEFBR2hFLElBQUloQixDQUFJLENBQUNVLFNBQVMsQ0FBRSxNQUFPLEFBRzNCLEtBQU1PLENBQU8sQ0FBR2QsQ0FBTyxDQUFDZSxLQUFLLENBQUNDLENBQUssTUFBQSxDQUFFLGdCQUFnQixDQUFFLENBQUNDLENBQUMsQ0FBRUMsQ0FBRSxDQUFFQyxDQUFHLEdBQUssQ0FDcEUsR0FBS0EsQ0FBRyxDQUVSLE9BQU8sSUFBSUMsS0FBSyxDQUFDLEVBQUUsQ0FBRSxDQUNsQkMsR0FBRyxDQUFIQSxDQUFJSixDQUFDLENBQUVLLENBQUksR0FDUixBQUFJQSxBQUFTLFNBQVMsR0FEbEJBLENBQUksQUFDYyxDQUNaLFNBQVVDLENBQUksQ0FBRSxRQUNwQixBQURjQSxDQUFJLEdBQ0xDLENBQVMsVUFBQSxDQUFDQyxTQUFTLENBQUNDLEtBQUssRUFJL0JQLENBQUcsQ0FBQ1EsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUxkTCxDQUFJLENBS2lCLEFBRmxDLENBR0gsQ0FHR0osQ0FBRyxDQVhORyxDQUFJLENBV1EsQUFGZixBQUdILENBQ0gsQ0FBQyxBQUFDLEFBaEJjLENBaUJuQixDQUFDLEFBQUMsQUFFSCxVQUFTTyxVQUFVLEVBQUcsQ0FFbkIsSUFBTUMsQ0FBZSxDQUFHdEIsQ0FBTSxDQUFDdUIsSUFBSSxDQUFDQyxDQUFDLEVBQUlBLEFBQVcsaUJBQWlCLEdBQTVCQSxDQUFDLENBQUM5QixJQUFJLEFBQXNCLENBQUMsQUFBQyxBQUN2RStCLENBQUFBLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSixDQUFlLENBQUMsQ0FDeEJBLENBQWUsRUFBRUEsQ0FBZSxDQUFDSyxhQUFhLENBQUNDLGVBQWUsQ0FBQyxDQUNoRUMsSUFBSSxDQUFFLGlCQUFpQixDQUN2QkMsZ0JBQWdCLENBQUUsRUFBRSxDQUNwQkMsV0FBVyxDQUFFLEVBQUUsQ0FDZkMsSUFBSSxDQUFFLENBQ0gsR0FBR3hCLENBQUssTUFBQSxDQUFDeUIsY0FBYyxFQUFFLENBQ3pCQyxLQUFLLENBQUUsQ0FBQyxDQUNWLENBQ0gsQ0FBQyxBQUdGLEtBQU1DLENBQXdCLENBQUduQyxDQUFNLENBQUN1QixJQUFJLENBQUNDLENBQUMsRUFBSUEsQUFBVywwQkFBMEIsR0FBckNBLENBQUMsQ0FBQzlCLElBQUksQUFBK0IsQ0FBQyxBQUFDLENBQ3JGeUMsQ0FBd0IsRUFBRUEsQ0FBd0IsQ0FBQ1IsYUFBYSxDQUFDQyxlQUFlLEVBQUUsQ0FFdEZ6QixDQUFVLFdBQUEsQ0FBQ2lDLFdBQVcsQ0FBQyxpQkFBaUIsQ0FBRWYsVUFBVSxDQUFDLENBQ3JEZixDQUFPLEVBQUUsQ0FDWCxBQUVHRSxDQUFLLE1BQUEsQ0FBQ3lCLGNBQWMsRUFBRSxDQUN2QlosVUFBVSxFQUFFLENBRVpsQixDQUFVLFdBQUEsQ0FBQ2tDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBRWhCLFVBQVUsQ0FBQyxDQUd4RCxBQUVNLFNBQVM5QixRQUFRLEVBQUcsQ0FDeEJGLENBQUksQ0FBQ1UsU0FBUyxDQUFHLENBQUEsQ0FBSSxDQUNyQlAsQ0FBTyxDQUFDOEMsVUFBVSxFQUFFLENBQ3RCIn0=