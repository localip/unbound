"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function _export(a,b){for(var c in b)Object.defineProperty(a,c,{enumerable:!0,get:b[c]})}(exports,{data:()=>j,initialize:()=>initialize,shutdown:()=>shutdown});const a=require("../../../common/logger"),b=require("@webpack"),c=require("../../modules/patcher/index"),d=(0,c.create)("unbound-anti-track"),e=(0,a.createLogger)("Anti-Track"),[f,g,h,i]=(0,b.findByProps)(["trackWithMetadata"],["AnalyticsActionHandlers"],["encodeProperties","track"],["submitLiveCrashReport"],{bulk:!0}),j={name:"Anti-Track",id:"tweaks.antiTrack",wait:!1,default:!0};function initialize(){try{patchMetadata()}catch(a){e.error("Failed to patch metadata",a.message)}try{patchAnalytics()}catch(b){e.error("Failed to patch analytics",b.message)}try{patchProperties()}catch(c){e.error("Failed to patch properties",c.message)}try{patchReporter()}catch(d){e.error("Failed to patch crash reporter",d.message)}}function shutdown(){d.unpatchAll()}function patchMetadata(){d.instead(f,"trackWithMetadata",()=>{}),d.instead(f,"trackWithGroupMetadata",()=>{}),d.instead(f,"trackWithGroupMetadata",()=>{})}function patchAnalytics(){d.instead(g.AnalyticsActionHandlers,"handleTrack",()=>{})}function patchProperties(){d.instead(h,"track",()=>{})}function patchReporter(){d.instead(i,"submitLiveCrashReport",()=>{})}