"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>h});const e=require("../../components/discord"),t=_interopRequireDefault(require("../components/DOMWrapper")),r=_interopRequireDefault(require("../components/AddonCard")),s=require("../../components/index"),a=require("../../../common/utilities/index"),n=require("../../../common/constants"),l=_interopRequireWildcard(require("../../api/settings")),o=require("../../modules/webpack/common"),i=_interopRequireWildcard(require("../../api/toasts")),c=require("electron"),u=_interopRequireDefault(require("react")),d=_interopRequireDefault(require("../../styles/panels/managers.css"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(_getRequireWildcardCache=function(e){return e?r:t})(e)}function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=_getRequireWildcardCache(t);if(r&&r.has(e))return r.get(e);var s={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if("default"!==n&&Object.prototype.hasOwnProperty.call(e,n)){var l=a?Object.getOwnPropertyDescriptor(e,n):null;l&&(l.get||l.set)?Object.defineProperty(s,n,l):s[n]=e[n]}return s.default=e,r&&r.set(e,s),s}var __decorate=function(e,t,r,s){var a,n=arguments.length,l=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,r,s);else for(var o=e.length-1;o>=0;o--)(a=e[o])&&(l=(n<3?a(l):n>3?a(t,r,l):a(t,r))||l);return n>3&&l&&Object.defineProperty(t,r,l),l};d.default.append();class Manager extends u.default.PureComponent{constructor(e,t){super(e),this.type=t,this.state={search:"",breadcrumbs:[],settings:{entity:null,client:null}}}render(){let e=this.renderAddons();return this.state.settings?.entity?this.renderSettings():u.default.createElement(s.ErrorBoundary,null,this.renderTitle(e.count),this.renderHeader(),e.render)}renderHeader(){return u.default.createElement("div",{className:"unbound-manager-page-header"},u.default.createElement(e.SearchBar,{onQueryChange:e=>this.setState({search:e}),onClear:()=>this.setState({search:""}),placeholder:o.Locale.Messages[`UNBOUND_SEARCH_${this.type?.toUpperCase()}`],size:e.SearchBar.Sizes.MEDIUM,query:this.state.search,className:"unbound-manager-search-bar"}),u.default.createElement(e.RelativeTooltip,{text:o.Locale.Messages.UNBOUND_OPEN_FOLDER,hideOnClick:!1},e=>u.default.createElement(s.Icon,Object.assign({},e,{onClick:()=>{try{c.shell.openPath(n.Paths[this.type])}catch{i.open({title:"Failed to open folder",icon:"Close",color:"var(--info-danger-foreground)",content:`We have encountered an error trying to open the ${this.type} folder for you. Does the ${this.type} folder exist?`})}},name:"Folder",className:"unbound-manager-button",width:32,height:32}))),u.default.createElement(e.RelativeTooltip,{text:o.Locale.Messages.UNBOUND_RELOAD,hideOnClick:!1},e=>u.default.createElement(s.Icon,Object.assign({},e,{onClick:this.onReload,name:"Replay",className:"unbound-manager-button",width:32,height:32}))),u.default.createElement(e.RelativeTooltip,{text:o.Locale.Messages.UNBOUND_SEARCH_OPTIONS,hideOnClick:!1},t=>u.default.createElement(e.Popout,{position:e.Popout.Positions.TOP,animation:e.Popout.Animation.SCALE,align:e.Popout.Align.RIGHT,spacing:12,renderPopout:this.renderOverflowMenu},e=>u.default.createElement(s.Icon,Object.assign({},t,e,{name:"OverflowMenu",className:"unbound-manager-button",width:32,height:32})))))}renderTitle(t){let r=o.Locale.Messages[`UNBOUND_${this.type.toUpperCase()}`],s=!this.state.breadcrumbs.length&&t?` - ${t}`:"";return u.default.createElement("div",{className:"unbound-manager-title"},u.default.createElement(e.FormTitle,{tag:"h1",onClick:()=>this.setState({settings:null,breadcrumbs:[]}),className:(0,a.classnames)("unbound-manager-title-main",this.state.breadcrumbs.length&&"unbound-manager-title-unselected")},r,s,!!this.state.breadcrumbs.length&&u.default.createElement(e.Caret,{direction:e.Caret.Directions.RIGHT,className:"unbound-manager-title-caret"})),this.renderBreadcrumbs())}renderBreadcrumbs(){return this.state.breadcrumbs.map((t,r,s)=>{let a=r+1,n=a>=s.length;return u.default.createElement(e.FormTitle,{tag:"h1",className:!n&&"unbound-manager-title-unselected",onClick:()=>!n&&this.setState({breadcrumbs:s.slice(0,a)})},t,!n&&u.default.createElement(e.Caret,{direction:e.Caret.Directions.RIGHT,className:"unbound-manager-title-caret"}))})}renderAddon(e,t){return u.default.createElement(r.default,{type:this.type,resolve:this.resolve,client:e,entity:t,openSettings:()=>this.setState({settings:{entity:t,client:e}})})}renderAddons(){let{addons:t}=this.getAddons(),{settings:r}=this.props,{search:s}=this.state,a=r.get("filters",{name:!0,description:!0,author:!0,version:!0}),n=Object.entries(t).flatMap(([e,t])=>{let r=t.sort((t,r)=>{let s=this.resolve(t,e,"name").toUpperCase(),a=this.resolve(r,e,"name").toUpperCase();return s<a?-1:s>a?1:0}),n=[];for(let l of r){if(void 0!==s){let o=[];for(let i in a){if(!a[i])continue;let c=this.resolve(l,e,i)?.toLowerCase?.(),u=s.toLowerCase();c?.includes(u)&&o.push(i)}if(0===o.length)continue}n.push(this.renderAddon(e,l))}return n});return{count:n.length,render:n.length?n:u.default.createElement("div",{className:"unbound-manager-not-found"},u.default.createElement("div",{"data-has-search":Boolean(s.length),className:"unbound-manager-empty-state"}),!s.length&&u.default.createElement(e.Text,{color:e.Text.Colors.MUTED},o.Locale.Messages.GIFT_CONFIRMATION_HEADER_FAIL),u.default.createElement(e.Text,{style:{textAlign:"center"},color:e.Text.Colors.MUTED},s.length?o.Locale.Messages.SEARCH_NO_RESULTS:o.Locale.Messages.UNBOUND_NO_ADDONS.format({type:this.type})),!s.length&&u.default.createElement(e.Text,{style:{textAlign:"center"},color:e.Text.Colors.MUTED},o.Locale.Messages.UNBOUND_NO_ADDONS_SUBTEXT))}}renderOverflowMenu(){let{settings:t}=this.props,r=t.get("filters",{name:!0,description:!0,author:!0,version:!0});return u.default.createElement(e.Menu.default,null,u.default.createElement(e.Menu.MenuGroup,null,u.default.createElement(e.Menu.MenuControlItem,{id:"filters",control:()=>u.default.createElement("h5",{className:"unbound-manager-overflow-title"},o.Locale.Messages.UNBOUND_FILTERS)}),Object.keys(r).sort().map(s=>u.default.createElement(e.Menu.MenuCheckboxItem,{key:`filter-${s}`,id:`filter-${s}`,label:o.Locale.Messages[`UNBOUND_FILTER_${s.toUpperCase()}`],checked:r[s],action(){r[s]=!r[s],t.set("filters",r)}}))))}renderSettings(){let{client:e,entity:r}=this.state.settings,a=this.resolve(r,e,"settings");!this.state.breadcrumbs.length&&r&&this.setState({breadcrumbs:[this.resolve(r,e,"name")]});let n={breadcrumbs:this.state.breadcrumbs,push:(...e)=>this.setState({breadcrumbs:[...this.state.breadcrumbs,...e]}),back:e=>{this.state.breadcrumbs.length-(e||1)<=0&&this.setState({settings:null,breadcrumbs:[]}),this.setState({breadcrumbs:this.state.breadcrumbs.slice(0,-(e||1))})}};try{let o=this.resolve(r,e,"id");if("function"==typeof a){let i=a();if(i){let c="unbound"===e?l.connectComponent(i,o):i,d=c instanceof Element;return u.default.createElement(s.ErrorBoundary,null,this.renderTitle(),"function"==typeof c?u.default.createElement(c,{router:n}):d?u.default.createElement(t.default,null,c):c)}}else if(a?.render){let h="unbound"===e?l.connectComponent(a.render,o):a.render;return u.default.createElement(s.ErrorBoundary,null,this.renderTitle(),u.default.createElement(h,{router:n}))}}catch(f){console.error(`Failed to open settings for ${this.resolve(r,e,"name")} (${e} addon)`,f)}}getAddons(){return{addons:{bd:[],powercord:[],unbound:[]},count:0}}onReload(){}resolve(e,t,r,s={}){switch(r){case"name":return this.resolveName(t,e);case"id":return this.resolveId(t,e);case"description":return this.resolveDescription(t,e);case"author":return this.resolveAuthors(t,e,s);case"version":return this.resolveVersion(t,e);case"color":return this.resolveColor(t,e);case"settings":let a=this.resolve(e,t,"id"),n=this.resolve(e,t,"name"),l=window.powercord?.api?.settings;if(e.instance?.getSettingsPanel)return e.instance.getSettingsPanel.bind(e.instance);if(e.getSettingsPanel)return e.getSettingsPanel.bind(e);if(!l?.settings)return null;if(l.settings.has(a))return l.settings.get(a);return l.settings[a]??[...l.settings.values()].find(e=>{let t=[e.label,e.category];if(t.includes(a)||t.includes(n))return!0});default:return"Not Found"}}resolveName(e,t){let r=o.Locale.Messages.UNBOUND_ADDON_MISSING_NAME;switch(e){case"bd":return t.name??r;case"unbound":return t.data.name??r;case"powercord":return t.displayName??r}return r}resolveId(e,t){switch(e){case"bd":return t.name;case"powercord":return t.entityID;case"unbound":return t.id}}resolveDescription(e,t){let r=o.Locale.Messages.UNBOUND_ADDON_MISSING_DESCRIPTION;switch(e){case"bd":return t.description??r;case"unbound":return t.data.description??r;case"powercord":return t.manifest.description??r}return r}resolveAuthors(e,t,{raw:r=!1}){let s=o.Locale.Messages.UNBOUND_ADDON_MISSING_AUTHOR;switch(e){case"bd":let a=t.instance?._config?.info?.authors;if(!r&&Array.isArray(a))return a.map(e=>e?.name?.toLowerCase()).filter(Boolean).join(", ");return(t.getAuthor?.()??t.author)??s;case"unbound":let n=t.data.authors;if(!r&&Array.isArray(n))return n.map(e=>(e?.name??e)?.toLowerCase()).filter(Boolean).join(", ");return t.data.authors??s;case"powercord":return t.manifest.author??s}return s}resolveVersion(e,t){let r=o.Locale.Messages.UNBOUND_ADDON_MISSING_VERSION;switch(e){case"bd":return(t.getVersion?.()??t.version)??r;case"powercord":return t.manifest.version??r;case"unbound":return t.data.version??r}return r}resolveColor(e,t){switch(e){case"bd":return"#3E82E5";case"powercord":return(t.color??t.manifest.color)??n.Colors.BRAND;case"unbound":return t.data.color??n.Colors.BRAND}return n.Colors.BRAND}}__decorate([a.bind],Manager.prototype,"renderOverflowMenu",null),__decorate([a.bind],Manager.prototype,"onReload",null),__decorate([a.bind],Manager.prototype,"resolve",null);const h=Manager
//# sourceMappingURL=data:application/json;base64,