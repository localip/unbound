"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>r});const a=require("../../components/discord"),b=require("../../../common/utilities/index"),c=m(require("../components/DOMWrapper")),d=m(require("../components/AddonCard")),e=require("../../components/index"),f=o(require("../../api/settings")),g=require("../../modules/webpack/common"),h=o(require("../../api/toasts")),i=require("../../../common/constants"),j=require("electron"),k=m(require("react")),l=m(require("../../styles/panels/managers.css"));function m(a){return a&&a.__esModule?a:{default:a}}function n(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(n=function(a){return a?c:b})(a)}function o(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=n(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!==f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}var p=function(a,b,c,d){var e,f=arguments.length,g=f<3?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(f<3?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g};l.default.append();class q extends k.default.PureComponent{constructor(a,b){super(a),this.type=b,this.state={search:"",breadcrumbs:[],settings:{entity:null,client:null}}}render(){let a=this.renderAddons();return this.state.settings?.entity?this.renderSettings():k.default.createElement(e.ErrorBoundary,null,this.renderTitle(a.count),this.renderHeader(),a.render)}renderHeader(){return k.default.createElement("div",{className:"unbound-manager-page-header"},k.default.createElement(a.SearchBar,{onQueryChange:a=>this.setState({search:a}),onClear:()=>this.setState({search:""}),placeholder:g.Locale.Messages[`UNBOUND_SEARCH_${this.type?.toUpperCase()}`],size:a.SearchBar.Sizes.MEDIUM,query:this.state.search,className:"unbound-manager-search-bar"}),k.default.createElement(a.RelativeTooltip,{text:g.Locale.Messages.UNBOUND_OPEN_FOLDER,hideOnClick:!1},a=>k.default.createElement(e.Icon,Object.assign({},a,{onClick:()=>{try{j.shell.openPath(i.Paths[this.type])}catch{h.open({title:"Failed to open folder",icon:"Close",color:"var(--info-danger-foreground)",content:`We have encountered an error trying to open the ${this.type} folder for you. Does the ${this.type} folder exist?`})}},name:"Folder",className:"unbound-manager-button",width:32,height:32}))),k.default.createElement(a.RelativeTooltip,{text:g.Locale.Messages.UNBOUND_RELOAD,hideOnClick:!1},a=>k.default.createElement(e.Icon,Object.assign({},a,{onClick:this.onReload,name:"Replay",className:"unbound-manager-button",width:32,height:32}))),k.default.createElement(a.RelativeTooltip,{text:g.Locale.Messages.UNBOUND_SEARCH_OPTIONS,hideOnClick:!1},b=>k.default.createElement(a.Popout,{position:a.Popout.Positions.TOP,animation:a.Popout.Animation.SCALE,align:a.Popout.Align.RIGHT,spacing:12,renderPopout:this.renderOverflowMenu},a=>k.default.createElement(e.Icon,Object.assign({},b,a,{name:"OverflowMenu",className:"unbound-manager-button",width:32,height:32})))))}renderTitle(c){let d=g.Locale.Messages[`UNBOUND_${this.type.toUpperCase()}`],e=!this.state.breadcrumbs.length&&c?` - ${c}`:"";return k.default.createElement("div",{className:"unbound-manager-title"},k.default.createElement(a.FormTitle,{tag:"h1",onClick:()=>this.setState({settings:null,breadcrumbs:[]}),className:(0,b.classnames)("unbound-manager-title-main",this.state.breadcrumbs.length&&"unbound-manager-title-unselected")},d,e,!!this.state.breadcrumbs.length&&k.default.createElement(a.Caret,{direction:a.Caret.Directions.RIGHT,className:"unbound-manager-title-caret"})),this.renderBreadcrumbs())}renderBreadcrumbs(){return this.state.breadcrumbs.map((b,c,d)=>{let e=c+1,f=e>=d.length;return k.default.createElement(a.FormTitle,{tag:"h1",className:!f&&"unbound-manager-title-unselected",onClick:()=>!f&&this.setState({breadcrumbs:d.slice(0,e)})},b,!f&&k.default.createElement(a.Caret,{direction:a.Caret.Directions.RIGHT,className:"unbound-manager-title-caret"}))})}renderAddon(a,b){return k.default.createElement(d.default,{type:this.type,client:a,entity:b,openSettings:()=>this.setState({settings:{entity:b,client:a}})})}renderAddons(){let{addons:b}=this.getAddons(),{settings:c}=this.props,{search:d}=this.state,e=c.get("filters",{name:!0,description:!0,author:!0,version:!0}),f=Object.entries(b).flatMap(([a,b])=>{let c=b.sort((a,b)=>{let c=this.resolve(a,"name").toUpperCase(),d=this.resolve(b,"name").toUpperCase();return c<d?-1:c>d?1:0}),f=[];for(let g of c){if(void 0!==d){let h=[];for(let i in e){if(!e[i])continue;let j=this.resolve(g,i)?.toLowerCase?.(),k=d.toLowerCase();j?.includes(k)&&h.push(i)}if(0===h.length)continue}f.push(this.renderAddon(a,g))}return f});return{count:f.length,render:f.length?f:k.default.createElement("div",{className:"unbound-manager-not-found"},k.default.createElement("div",{"data-has-search":Boolean(d.length),className:"unbound-manager-empty-state"}),!d.length&&k.default.createElement(a.Text,{color:a.Text.Colors.MUTED},g.Locale.Messages.GIFT_CONFIRMATION_HEADER_FAIL),k.default.createElement(a.Text,{style:{textAlign:"center"},color:a.Text.Colors.MUTED},d.length?g.Locale.Messages.SEARCH_NO_RESULTS:g.Locale.Messages.UNBOUND_NO_ADDONS.format({type:this.type})),!d.length&&k.default.createElement(a.Text,{style:{textAlign:"center"},color:a.Text.Colors.MUTED},g.Locale.Messages.UNBOUND_NO_ADDONS_SUBTEXT))}}renderOverflowMenu(){let{settings:b}=this.props,c=b.get("filters",{name:!0,description:!0,author:!0,version:!0});return k.default.createElement(a.Menu.default,null,k.default.createElement(a.Menu.MenuGroup,null,k.default.createElement(a.Menu.MenuControlItem,{id:"filters",control:()=>k.default.createElement("h5",{className:"unbound-manager-overflow-title"},g.Locale.Messages.UNBOUND_FILTERS)}),Object.keys(c).sort().map(d=>k.default.createElement(a.Menu.MenuCheckboxItem,{key:`filter-${d}`,id:`filter-${d}`,label:g.Locale.Messages[`UNBOUND_FILTER_${d.toUpperCase()}`],checked:c[d],action(){c[d]=!c[d],b.set("filters",c)}}))))}renderSettings(){let{client:a,entity:b}=this.state.settings,d=this.resolve(b,"settings");!this.state.breadcrumbs.length&&b&&this.setState({breadcrumbs:[this.resolve(b,"name")]});let g={breadcrumbs:this.state.breadcrumbs,push:(...a)=>this.setState({breadcrumbs:[...this.state.breadcrumbs,...a]}),back:a=>{this.state.breadcrumbs.length-(a||1)<=0&&this.setState({settings:null,breadcrumbs:[]}),this.setState({breadcrumbs:this.state.breadcrumbs.slice(0,-(a||1))})}};try{let h=this.resolve(b,"id");if("function"==typeof d){let i=d();if(i){let j="unbound"===a?f.connectComponent(i,h):i,l="function"==typeof j,m=j instanceof Element;return k.default.createElement(e.ErrorBoundary,null,this.renderTitle(),l?k.default.createElement(j,{router:g}):m?k.default.createElement(c.default,null,j):j)}}else if(d?.render){let n="unbound"===a?f.connectComponent(d.render,h):d.render;return k.default.createElement(e.ErrorBoundary,null,this.renderTitle(),k.default.createElement(n,{router:g}))}}catch(o){console.error(`Failed to open settings for ${this.resolve(b,"name")} (${a} addon)`,o)}}getAddons(){return{addons:{bd:[],powercord:[],unbound:[]},count:0}}onReload(){}resolve(a,b){switch(b){case"name":return((((a.instance?._config?.info?.name??a.manifest?.name)??a.displayName)??a.data?.name)??a.name)??g.Locale.Messages.UNBOUND_ADDON_MISSING_NAME;case"id":return(a.id??a.entityID)??a.name;case"description":return(((a.instance?._config?.info?.description??a.manifest?.description)??a.data?.description)??a.description)??g.Locale.Messages.UNBOUND_ADDON_MISSING_DESCRIPTION;case"author":if(Array.isArray(a.instance?._config?.info?.authors)){let c=a.instance._config.info.authors;return c.map(a=>a?.name?.toLowerCase?.()).filter(Boolean).join(", ")}if(Array.isArray(a.data?.author)){let d=a.data.author;return d.map(a=>(a?.name??a)?.toLowerCase?.()).filter(Boolean).join(", ")}return(((a.manifest?.author??a.getAuthor?.())??a.data?.author)??a.author)??g.Locale.Messages.UNBOUND_ADDON_MISSING_AUTHOR;case"version":return(((a.instance?._config?.info?.version??a.getVersion?.())??a.data?.version)??a.version)??g.Locale.Messages.UNBOUND_ADDON_MISSING_VERSION;case"settings":let e=this.resolve(a,"id"),f=this.resolve(a,"name"),h=window.powercord?.api?.settings;if(a.instance?.getSettingsPanel)return a.instance.getSettingsPanel.bind(a.instance);if(a.getSettingsPanel)return a.getSettingsPanel.bind(a);if(!h?.settings)return null;if(h.settings.has(e))return h.settings.get(e);return h.settings[e]??[...h.settings.values()].find(a=>{let b=[a.label,a.category];if(b.includes(e)||b.includes(f))return!0});default:return"Not Found"}}}p([b.bind],q.prototype,"renderOverflowMenu",null),p([b.bind],q.prototype,"onReload",null);const r=q
//# sourceMappingURL=data:application/json;base64,