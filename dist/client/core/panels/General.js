"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>q});const a=require("../../components/index"),b=require("../../api/settings"),c=require("../../modules/webpack/common"),d=require("../../../common/utilities/index"),e=require("../../components/discord"),f=require("@webpack"),g=function(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=m(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!==f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}(require("../../api/toasts")),h=l(require("react")),i=require("../../components/settings"),j=l(require("../../styles/panels/general.css")),k=require("../components/Icons");function l(a){return a&&a.__esModule?a:{default:a}}function m(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(m=function(a){return a?c:b})(a)}j.default.append();const n=(0,d.memoize)(()=>(0,f.findLazy)(f.filters.byDisplayName("NotificationSettings"))),o=a.AsyncComponent.from(n);class p extends h.default.Component{constructor(a){super(a),this.state={toasts:!1,developer:!1,bd:!1}}render(){return h.default.createElement(a.ErrorBoundary,null,h.default.createElement(e.FormTitle,{tag:"h1",className:"unbound-settings-title"},c.Locale.Messages.UNBOUND_GENERAL),this.renderToasts(),this.renderDeveloper(),this.renderBDSettings())}renderToasts(){let{settings:b}=this.props,e=(0,d.parseColor)("--background-tertiary");return h.default.createElement(a.Category,{title:c.Locale.Messages.UNBOUND_TOAST_SETTINGS_TITLE,description:c.Locale.Messages.UNBOUND_TOAST_SETTINGS_DESCRIPTION,icon:"ChatBubble",className:"unbound-settings-toast-category",opened:this.state.toasts,onChange:()=>this.setState(a=>({...a,toasts:!a.toasts}))},h.default.createElement(o,{className:"unbound-settings-toast-position",position:this.parsePosition(b.get("toasts.position","bottom-right")),onChange:(a,c)=>{let d=this.parsePosition(c);b.set("toasts.position",d),this.onToastsChange(),"disabled"===d&&g.clear()}}),h.default.createElement(a.Divider,{style:{marginTop:10}}),h.default.createElement(i.Switch,{title:c.Locale.Messages.UNBOUND_TOAST_SETTINGS_RESET_TIMEOUT_TITLE,description:c.Locale.Messages.UNBOUND_TOAST_SETTINGS_RESET_TIMEOUT_DESCRIPTION,checked:b.get("toasts.resetTimeoutOnHover",!1),onChange:()=>b.toggle("toasts.resetTimeoutOnHover",!1)}),h.default.createElement(i.Switch,{title:c.Locale.Messages.UNBOUND_TOAST_SETTINGS_CUSTOM_TITLE,description:c.Locale.Messages.UNBOUND_TOAST_SETTINGS_CUSTOM_DESCRIPTION,checked:b.get("toasts.useCustomColours",!1),endDivider:b.get("toasts.useCustomColours",!1),onChange:()=>b.toggle("toasts.useCustomColours",!1),bottomMargin:b.get("toasts.useCustomColours",!1)?15:7.5}),b.get("toasts.useCustomColours",!1)&&h.default.createElement(h.default.Fragment,null,h.default.createElement(i.ColorPicker,{value:b.get("toasts.bgColor"),className:"unbound-settings-toast-color",onChange:a=>b.set("toasts.bgColor",a),default:c.Colors.rgb2int(`rgb(${e[0]}, ${e[1]}, ${e[2]})`)}),h.default.createElement(i.SliderInput,{title:c.Locale.Messages.UNBOUND_TOAST_SETTINGS_OPACITY_TITLE,minValue:1,maxValue:10,stickToMarkers:!0,markers:[1,2,3,4,5,6,7,8,9,10],defaultValue:10,initialValue:10*b.get("toasts.bgOpacity",.5),onValueChange:a=>b.set("toasts.bgOpacity",a/10),onMarkerRender:a=>`${a/10}`}),h.default.createElement(i.SliderInput,{title:c.Locale.Messages.UNBOUND_TOAST_SETTINGS_BLUR_TITLE,minValue:0,maxValue:15,stickToMarkers:!0,markers:[0,2.5,5,7.5,10,12.5,15],defaultValue:7.5,initialValue:b.get("toasts.blurAmount",7.5),onValueChange:a=>b.set("toasts.blurAmount",a),onMarkerRender:a=>`${a}px`,endDivider:!1,bottomMargin:7.5})))}renderDeveloper(){let{settings:b}=this.props;return h.default.createElement(a.Category,{title:c.Locale.Messages.UNBOUND_DEV_SETTINGS_TITLE,description:c.Locale.Messages.UNBOUND_DEV_SETTINGS_DESCRIPTION,icon:"InlineCode",className:"unbound-settings-developer-category",opened:this.state.developer,onChange:()=>this.setState(a=>({...a,developer:!a.developer}))},h.default.createElement(i.Switch,{title:c.Locale.Messages.UNBOUND_DEV_SETTINGS_WARNING_TITLE,description:c.Locale.Messages.UNBOUND_DEV_SETTINGS_WARNING_DESCRIPTION,checked:b.get("dev.devtoolsWarning",!1),onChange:()=>b.toggle("dev.devtoolsWarning",!1)}),h.default.createElement(i.Switch,{title:c.Locale.Messages.UNBOUND_DEV_SETTINGS_EXPERIMENTS_TITLE,description:c.Locale.Messages.UNBOUND_DEV_SETTINGS_EXPERIMENTS_DESCRIPTION,checked:b.get("dev.experiments",!1),onChange:()=>b.toggle("dev.experiments",!1),bottomMargin:7.5,endDivider:!1}),h.default.createElement("div",{style:{marginBottom:2.5}}))}renderBDSettings(){if(!window.BdApi)return null;let b=window.BDInternal?.SettingsManager;return h.default.createElement(a.Category,{title:c.Locale.Messages.UNBOUND_BD_SETTINGS_TITLE,description:c.Locale.Messages.UNBOUND_BD_SETTINGS_DESCRIPTION,icon:()=>h.default.createElement(k.Bd,{className:"unbound-category-icon"}),opened:this.state.bd,onChange:()=>this.setState({bd:!this.state.bd})},Object.entries(b.defaultSettings).map(([a,{settings:b}])=>b.map(b=>this.renderBDSetting(a,b))))}renderBDSetting(b,c){let d=window.BDInternal?.SettingsManager;switch(c.type){case"switch":return c.requires&&c.requires.some(a=>!d.isEnabled(a))?null:h.default.createElement(i.Switch,{endDivider:!1,className:"unbound-bd-switch",title:c.name,checked:d.isEnabled(c.id)??c.value,onChange:a=>{d.setSetting(c.id,a),this.forceUpdate()}});case"category":return c.requires&&c.requires.some(a=>!d.isEnabled(a))?null:h.default.createElement(a.Category,{className:"unbound-bd-category",title:c.name,endDivider:!0,opened:this.state[`${b}-${c.name}`]?? !1,onChange:()=>this.setState({[`${b}-${c.name}`]:!this.state[`${b}-${c.name}`]})},c.items.map(a=>this.renderBDSetting(b,a)))}}componentWillUnmount(){if(this.toasts)for(let a of this.toasts)g.close(a)}onToastsChange(){for(let a of(this.toasts??=[],this.toasts))g.close(a,!0);this.toasts.push(g.open({title:c.Locale.Messages.UNBOUND_TOAST_EXAMPLE_TITLE,color:"var(--info-positive-foreground)",icon:"CheckmarkCircle",content:c.Locale.Messages.UNBOUND_TOAST_EXAMPLE_CONTENT}))}parsePosition(a){return a.includes("-")?a.split("-").map((a,b)=>0===b?a:`${a[0].toUpperCase()}${a.slice(1)}`).join(""):a.split(/(top|bottom)/).filter(Boolean).join("-").toLowerCase()}}const q=(0,b.connectComponent)(p,"unbound")
//# sourceMappingURL=data:application/json;base64,