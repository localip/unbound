"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>S});const e=require("../../components/settings"),t=require("../../components/index"),a=require("../../components/discord"),s=require("../../api/settings"),l=require("../../modules/webpack/common"),n=require("../../../common/utilities/index"),r=require("@webpack"),o=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var a=_getRequireWildcardCache(t);if(a&&a.has(e))return a.get(e);var s={},l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if("default"!==n&&Object.prototype.hasOwnProperty.call(e,n)){var r=l?Object.getOwnPropertyDescriptor(e,n):null;r&&(r.get||r.set)?Object.defineProperty(s,n,r):s[n]=e[n]}return s.default=e,a&&a.set(e,s),s}(require("../../api/toasts")),i=_interopRequireDefault(require("react")),c=_interopRequireDefault(require("../../styles/panels/general.css")),d=require("../components/Icons");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,a=new WeakMap;return(_getRequireWildcardCache=function(e){return e?a:t})(e)}c.default.append();const T=(0,n.memoize)(()=>(0,r.findLazy)(r.filters.byDisplayName("NotificationSettings"))),u=t.AsyncComponent.from(T);class General extends i.default.Component{constructor(e){super(e),this.state={toasts:!1,developer:!1,splash:!1,bd:!1,splashAdd:""}}render(){return i.default.createElement(t.ErrorBoundary,null,i.default.createElement(a.FormTitle,{tag:"h1",className:"unbound-settings-title"},l.Locale.Messages.UNBOUND_GENERAL),this.renderToasts(),this.renderSplash(),this.renderDeveloper(),this.renderBDSettings())}renderToasts(){let{settings:a}=this.props,s=(0,n.parseColor)("--background-tertiary");return i.default.createElement(t.Category,{title:l.Locale.Messages.UNBOUND_TOAST_SETTINGS_TITLE,description:l.Locale.Messages.UNBOUND_TOAST_SETTINGS_DESCRIPTION,icon:"ChatBubble",className:"unbound-settings-toast-category",opened:this.state.toasts,onChange:()=>this.setState(e=>({...e,toasts:!e.toasts}))},i.default.createElement(u,{className:"unbound-settings-toast-position",position:this.parsePosition(a.get("toasts.position","bottom-right")),onChange:(e,t)=>{let s=this.parsePosition(t);a.set("toasts.position",s),this.onToastsChange(),"disabled"===s&&o.clear()}}),i.default.createElement(t.Divider,{style:{marginTop:10}}),i.default.createElement(e.Switch,{title:l.Locale.Messages.UNBOUND_TOAST_SETTINGS_RESET_TIMEOUT_TITLE,description:l.Locale.Messages.UNBOUND_TOAST_SETTINGS_RESET_TIMEOUT_DESCRIPTION,checked:a.get("toasts.resetTimeoutOnHover",!1),onChange:()=>a.toggle("toasts.resetTimeoutOnHover",!1)}),i.default.createElement(e.Switch,{title:l.Locale.Messages.UNBOUND_TOAST_SETTINGS_CUSTOM_TITLE,description:l.Locale.Messages.UNBOUND_TOAST_SETTINGS_CUSTOM_DESCRIPTION,checked:a.get("toasts.useCustomColours",!1),endDivider:a.get("toasts.useCustomColours",!1),onChange:()=>a.toggle("toasts.useCustomColours",!1),bottomMargin:a.get("toasts.useCustomColours",!1)?15:7.5}),a.get("toasts.useCustomColours",!1)&&i.default.createElement(i.default.Fragment,null,i.default.createElement(e.ColorPicker,{value:a.get("toasts.bgColor"),className:"unbound-settings-toast-color",onChange:e=>a.set("toasts.bgColor",e),default:l.Colors.rgb2int(`rgb(${s[0]}, ${s[1]}, ${s[2]})`)}),i.default.createElement(e.SliderInput,{title:l.Locale.Messages.UNBOUND_TOAST_SETTINGS_OPACITY_TITLE,minValue:1,maxValue:10,markers:[1,2,3,4,5,6,7,8,9,10],defaultValue:10,initialValue:10*a.get("toasts.bgOpacity",.5),onValueChange:e=>a.set("toasts.bgOpacity",e/10),onMarkerRender:e=>`${e/10}`,onValueRender:e=>(e/10).toFixed(2)}),i.default.createElement(e.SliderInput,{title:l.Locale.Messages.UNBOUND_TOAST_SETTINGS_BLUR_TITLE,minValue:0,maxValue:15,markers:[0,2.5,5,7.5,10,12.5,15],defaultValue:7.5,initialValue:a.get("toasts.blurAmount",7.5),onValueChange:e=>a.set("toasts.blurAmount",e),endDivider:!1,bottomMargin:7.5,onValueRender:e=>e.toFixed(1)})))}renderDeveloper(){let{settings:a}=this.props;return i.default.createElement(t.Category,{title:l.Locale.Messages.UNBOUND_DEV_SETTINGS_TITLE,description:l.Locale.Messages.UNBOUND_DEV_SETTINGS_DESCRIPTION,icon:"InlineCode",className:"unbound-settings-developer-category",opened:this.state.developer,onChange:()=>this.setState(e=>({...e,developer:!e.developer}))},i.default.createElement(e.Switch,{title:l.Locale.Messages.UNBOUND_DEV_SETTINGS_WARNING_TITLE,description:l.Locale.Messages.UNBOUND_DEV_SETTINGS_WARNING_DESCRIPTION,checked:a.get("dev.devtoolsWarning",!1),onChange:()=>a.toggle("dev.devtoolsWarning",!1)}),i.default.createElement(e.Switch,{title:l.Locale.Messages.UNBOUND_DEV_SETTINGS_EXPERIMENTS_TITLE,description:l.Locale.Messages.UNBOUND_DEV_SETTINGS_EXPERIMENTS_DESCRIPTION,checked:a.get("dev.experiments",!1),onChange:()=>a.toggle("dev.experiments",!1),bottomMargin:7.5,endDivider:!1}),i.default.createElement("div",{style:{marginBottom:2.5}}))}renderSplash(){let{settings:s}=this.props,n=s.get("splashQuotes",["Unleash the chains"]);return i.default.createElement(t.Category,{title:l.Locale.Messages.UNBOUND_SPLASH_SETTINGS_TITLE,description:l.Locale.Messages.UNBOUND_SPLASH_SETTINGS_DESCRIPTION,icon:"Fullscreen",className:"unbound-settings-splash-category",opened:this.state.splash,onChange:()=>this.setState(e=>({...e,splash:!e.splash}))},i.default.createElement(e.SettingsItem,{title:l.Locale.Messages.UNBOUND_SPLASH_SETTINGS_QUOTES_TITLE,endDivider:!1},i.default.createElement("div",{className:"unbound-settings-splash-quotes","data-count":n.length??0},Array.isArray(n)&&n.map(e=>i.default.createElement("div",{onMouseEnter:e=>e.target.classList.add("is-hovered"),onMouseLeave:e=>e.target.classList.remove("is-hovered"),className:"unbound-settings-splash-quote",onClick(){let t=n.indexOf(e);t>-1&&(n.splice(t,1),s.set("splashQuotes",n))}},i.default.createElement("span",null,e),i.default.createElement("span",{className:"unbound-settings-splash-quote-remove"},l.Locale.Messages.UNBOUND_SPLASH_SETTINGS_QUOTES_REMOVE))),i.default.createElement("div",{className:"unbound-settings-splash-quote-wrapper"},i.default.createElement("input",{placeholder:l.Locale.Messages.UNBOUND_SPLASH_SETTINGS_QUOTES_ADD,className:"unbound-settings-splash-quote-add",onChange:e=>this.setState({splashAdd:e.target.value}),value:this.state.splashAdd}),i.default.createElement(a.Tooltip,{className:"unbound-settings-splash-quote-tooltip",text:l.Locale.Messages.UNBOUND_SPLASH_SETTINGS_QUOTES_TOOLTIP},i.default.createElement("div",{onClick:()=>{0!==[...this.state.splashAdd].filter(Boolean).length&&(n.push(this.state.splashAdd),s.set("splashQuotes",n),this.setState({splashAdd:""}))}},i.default.createElement(t.Icon,{className:"unbound-settings-splash-quote-add-icon",width:24,height:18,name:"PlusCircle"})))))),i.default.createElement("div",{style:{marginBottom:2.5}}))}renderBDSettings(){if(!window.BdApi)return null;let e=window.BDInternal?.SettingsManager;return i.default.createElement(t.Category,{title:l.Locale.Messages.UNBOUND_BD_SETTINGS_TITLE,description:l.Locale.Messages.UNBOUND_BD_SETTINGS_DESCRIPTION,icon:()=>i.default.createElement(d.Bd,{className:"unbound-category-icon"}),opened:this.state.bd,onChange:()=>this.setState({bd:!this.state.bd})},Object.entries(e.defaultSettings).map(([e,{settings:t}])=>t.map(t=>this.renderBDSetting(e,t))))}renderBDSetting(a,s){let l=window.BDInternal?.SettingsManager;switch(s.type){case"switch":return s.requires&&s.requires.some(e=>!l.isEnabled(e))?null:i.default.createElement(e.Switch,{endDivider:!1,className:"unbound-bd-switch",title:s.name,checked:l.isEnabled(s.id)??s.value,onChange:e=>{l.setSetting(s.id,e),this.forceUpdate()}});case"category":return s.requires&&s.requires.some(e=>!l.isEnabled(e))?null:i.default.createElement(t.Category,{className:"unbound-bd-category",title:s.name,endDivider:!0,opened:this.state[`${a}-${s.name}`]??!1,onChange:()=>this.setState({[`${a}-${s.name}`]:!this.state[`${a}-${s.name}`]})},s.items.map(e=>this.renderBDSetting(a,e)))}}componentWillUnmount(){if(this.toasts)for(let e of this.toasts)o.close(e)}onToastsChange(){for(let e of(this.toasts??=[],this.toasts))o.close(e,!0);this.toasts.push(o.open({title:l.Locale.Messages.UNBOUND_TOAST_EXAMPLE_TITLE,color:"var(--info-positive-foreground)",icon:"CheckmarkCircle",content:l.Locale.Messages.UNBOUND_TOAST_EXAMPLE_CONTENT}))}parsePosition(e){return e.includes("-")?e.split("-").map((e,t)=>0===t?e:`${e[0].toUpperCase()}${e.slice(1)}`).join(""):e.split(/(top|bottom)/).filter(Boolean).join("-").toLowerCase()}}const S=(0,s.connectComponent)(General,"unbound")
//# sourceMappingURL=data:application/json;base64,