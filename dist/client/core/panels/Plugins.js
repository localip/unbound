"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>h});const a=require("../../api/settings"),b=require("../components/Icons"),c=require("../../components/discord"),d=function(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=f(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var g in a)if("default"!==g&&Object.prototype.hasOwnProperty.call(a,g)){var h=e?Object.getOwnPropertyDescriptor(a,g):null;h&&(h.get||h.set)?Object.defineProperty(d,g,h):d[g]=a[g]}return d.default=a,c&&c.set(a,d),d}(require("../../api/toasts")),e=function(a){return a&&a.__esModule?a:{default:a}}(require("./Manager"));function f(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(f=function(a){return a?c:b})(a)}class g extends e.default{constructor(a){super(a,"plugins"),this.state={search:"",breadcrumbs:[],settings:{entity:null,client:null}}}componentWillMount(){let a=this.forceUpdate.bind(this,null);window.powercord&&powercord.pluginManager.on("updated",a),window.BdApi&&BdApi.Plugins.on("updated",a),window.unbound&&unbound.managers.plugins.on("updated",a)}componentWillUnmount(){let a=this.forceUpdate.bind(this,null);window.powercord&&powercord.pluginManager.off("updated",a),window.BdApi&&BdApi.Plugins.off("updated",a),window.unbound&&unbound.managers.plugins.off("updated",a)}getAddons(){let a={unbound:[...unbound.managers.plugins.entities.values()],powercord:[],bd:[]};return window.powercord&&a.powercord.push(...powercord.pluginManager.addons),window.BdApi&&a.bd.push(...BdApi.Plugins.getAll()),{addons:a,count:Object.values(a).flat().length}}onReload(){let a={unbound:[],powercord:[]};if(window.unbound){let e=unbound.managers.plugins.loadMissing();a.unbound.push(...e.loaded)}if(window.powercord){let f=powercord.pluginManager.loadAll(!0,!1);a.powercord.push(...f)}let g=Object.entries(a).flatMap(([a,d])=>{if(!d.length)return;let e=[];for(let f of d){let g=this.resolve(f,"name");e.push(React.createElement(c.Flex,{direction:c.Flex.Direction.HORIZONTAL,align:c.Flex.Align.CENTER,wrap:c.Flex.Wrap.NO_WRAP},"powercord"===a?React.createElement(b.Plug,{width:12,height:12}):null," ",g))}return e}).filter(Boolean);g.length&&d.open({title:"Missing plugins found:",icon:"CheckmarkCircle",color:"var(--info-positive-foreground)",content:()=>g})}}const h=(0,a.connectComponent)(g,"plugins-manager")
//# sourceMappingURL=data:application/json;base64,