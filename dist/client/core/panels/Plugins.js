"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>a});const e=require("../../api/settings"),t=require("../components/Icons"),n=require("../../components/discord"),r=require("../../modules/webpack/common"),o=function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=_getRequireWildcardCache(t);if(n&&n.has(e))return n.get(e);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if("default"!==l&&Object.prototype.hasOwnProperty.call(e,l)){var i=o?Object.getOwnPropertyDescriptor(e,l):null;i&&(i.get||i.set)?Object.defineProperty(r,l,i):r[l]=e[l]}return r.default=e,n&&n.set(e,r),r}(require("../../api/toasts")),l=require("../../../common/utilities/index"),i=_interopRequireDefault(require("./Manager")),u=_interopRequireDefault(require("react"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(_getRequireWildcardCache=function(e){return e?n:t})(e)}class Plugins extends i.default{constructor(e){super(e,"plugins"),this.state={search:"",breadcrumbs:[],settings:{entity:null,client:null}}}componentWillMount(){let e=this.forceUpdate.bind(this,null);window.powercord&&powercord.pluginManager.on("updated",e),window.BdApi&&BdApi.Plugins.on("updated",e),window.unbound&&unbound.managers.plugins.on("updated",e)}componentWillUnmount(){let e=this.forceUpdate.bind(this,null);window.powercord&&powercord.pluginManager.off("updated",e),window.BdApi&&BdApi.Plugins.off("updated",e),window.unbound&&unbound.managers.plugins.off("updated",e)}getAddons(){let e={unbound:[...unbound.managers.plugins.entities.values()],powercord:[],bd:[]};return window.powercord&&e.powercord.push(...powercord.pluginManager.addons),window.BdApi&&e.bd.push(...BdApi.Plugins.getAll()),{addons:e,count:Object.values(e).flat().length}}onReload(){let e={unbound:[],powercord:[]};if(window.unbound){let l=unbound.managers.plugins.loadMissing();e.unbound.push(...l.loaded)}if(window.powercord){let i=powercord.pluginManager.loadAll(!0,!1);e.powercord.push(...i)}let a=Object.entries(e).flatMap(([e,r])=>{if(!r.length)return;let o=[];for(let l of r){let i=this.resolve(l,e,"name");o.push(u.default.createElement(n.Flex,{direction:n.Flex.Direction.HORIZONTAL,align:n.Flex.Align.CENTER,wrap:n.Flex.Wrap.NO_WRAP},"powercord"===e?u.default.createElement(t.Plug,{width:12,height:12}):null," ",i))}return o}).filter(Boolean);if(!a.length)return o.open({title:r.Locale.Messages.UNREADS_EMPTY_STATE_HEADER,content:r.Locale.Messages.UNBOUND_ADDONS_MISSING_NONE,color:"var(--info-positive-foreground)",timeout:2500,icon:"CheckmarkCircle"});o.open({title:r.Locale.Messages.UNBOUND_ADDONS_FOUND.format({type:"plugins"}),icon:"CheckmarkCircle",color:"var(--info-positive-foreground)",timeout:5e3,content:()=>a})}}!function(e,t,n,r){var o,l=arguments.length,i=l<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var u=e.length-1;u>=0;u--)(o=e[u])&&(i=(l<3?o(i):l>3?o(t,n,i):o(t,n))||i);return l>3&&i&&Object.defineProperty(t,n,i),i}([l.bind],Plugins.prototype,"onReload",null);const a=(0,e.connectComponent)(Plugins,"plugins-manager")
//# sourceMappingURL=data:application/json;base64,