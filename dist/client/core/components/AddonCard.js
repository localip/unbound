"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>AddonCard});const e=require("../../components/discord"),t=require("../../modules/webpack/common"),a=require("../../../common/utilities/index"),s=require("../../modules/webpack/api"),l=require("../../components/index"),n=_interopRequireDefault(require("react")),r=require("./Icons/index"),i=_interopRequireDefault(require("../../styles/panels/addoncard.css"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}i.default.append();class AddonCard extends n.default.Component{componentWillMount(){let e=this.getGlobal(),t=this.getType(),a=window[e]?.[t]??window[e]?.managers?.[t];a?.on?.("toggle",this.onToggle)}componentWillUnmount(){let e=this.getGlobal(),t=this.getType(),a=window[e]?.[t]??window[e]?.managers?.[t];a?.off?.("toggle",this.onToggle)}render(){let{entity:s,client:r,resolve:i}=this.props,o=i(s,r,"author",{raw:!0}),d=i(s,r,"description"),c=i(s,r,"version"),u=i(s,r,"color"),p=i(s,r,"name");return n.default.createElement(e.Tooltip,{position:"left",text:s.failed?t.Locale.Messages[`UNBOUND_ADDON_FAILED_${this.props.type.toUpperCase()}`]:null,hideOnClick:!1},n.default.createElement("div",{className:(0,a.classnames)("unbound-addon-card",s.failed&&"disabled"),style:{"--entity-color":u},onContextMenu:a=>t.ContextMenu.openContextMenu(a,()=>n.default.createElement(e.Menu.default,{onClose:t.ContextMenu.closeContextMenu},n.default.createElement(e.Menu.MenuItem,{id:"delete",color:"colorDanger",label:t.Locale.Messages.UNBOUND_DELETE,action:()=>this.delete()}),n.default.createElement(e.Menu.MenuItem,{id:"reload",label:t.Locale.Messages.UNBOUND_RELOAD,action:()=>this.reload()})))},n.default.createElement("div",{className:"unbound-addon-header"},n.default.createElement(e.Text,{className:"unbound-addon-name",size:e.Text.Sizes.SIZE_16},p),n.default.createElement(e.Text,{className:"unbound-addon-version",size:e.Text.Sizes.SIZE_16,color:e.Text.Colors.INTERACTIVE_NORMAL},c),n.default.createElement(e.Text,{className:"unbound-addon-authors",size:e.Text.Sizes.SIZE_16,color:e.Text.Colors.INTERACTIVE_NORMAL},"by ",this.renderAuthors(o)),n.default.createElement("div",{className:"unbound-addon-controls"},"unbound"!==this.props.client&&n.default.createElement(e.RelativeTooltip,{text:t.Locale.Messages[`UNBOUND_ADDON_MANAGER_${this.props.client.toUpperCase()}_TOOLTIP`]?.format({type:"Plugin"}),hideOnClick:!1},e=>this.renderType({...e})),this.hasSettings()&&n.default.createElement(e.RelativeTooltip,{text:t.Locale.Messages.UNBOUND_SETTINGS,hideOnClick:!1},e=>n.default.createElement(l.Icon,Object.assign({},e,{onClick:()=>this.props.openSettings(),"data-is-disabled":!this.isEnabled,name:"Gear",width:28,height:28,className:"unbound-addon-control-button"}))),n.default.createElement(e.Switch,{checked:this.isEnabled,onChange:()=>this.toggle(),className:"unbound-addon-switch"}))),n.default.createElement("div",{className:"unbound-addon-footer"},n.default.createElement(e.FormText,{className:"unbound-addon-description"},n.default.createElement(e.Markdown,null,d)))))}renderAuthors(a){let l=[],handleAuthor=a=>{if("string"==typeof a)l.push(a);else if("object"==typeof a&&a.name){let r=typeof a.id||typeof a.discord_id,i=r&&["number","string"].includes(typeof r);l.push(i?n.default.createElement(e.Anchor,{className:"unbound-addon-author",async onClick(){let e=a.id??a.discord_id;await s.Users?.getUser(e),t.Dispatcher.dirtyDispatch({type:t.Constants.ActionTypes.USER_PROFILE_MODAL_OPEN,userId:e})}},a.name):a.name)}};return Array.isArray(a)?a.map(handleAuthor):"object"==typeof a&&a.name?handleAuthor(a):"string"==typeof a&&l.push(a),l.map((e,t)=>{let a=t+1===l.length;return"string"==typeof e?a?e:`${e}, `:[e,a?"":", "]})}renderType(e){let{client:t}=this.props;switch(e.className??="unbound-addon-type-icon",e.width??=16,e.height??=16,t){case"bd":return n.default.createElement(r.Bd,Object.assign({},e));case"powercord":return n.default.createElement(r.Plug,Object.assign({},e));default:return null}}get isEnabled(){let e=this.getId(),t=this.getGlobal(),a=this.getType(),s=window[t]?.[a]??window[t]?.managers?.[a];return s?.isEnabled?.(e)}delete(){let e=this.getId(),t=this.getGlobal(),a=this.getType(),s=window[t]?.[a]??window[t]?.managers?.[a];return s?.delete?.(e)}toggle(){let e=this.getId(),t=this.getGlobal(),a=this.getType(),s=window[t]?.[a]??window[t]?.managers?.[a];return s?.toggle?.(e)}reload(){let e=this.getId(),t=this.getGlobal(),a=this.getType(),s=window[t]?.[a]??window[t]?.managers?.[a];return s?.reload?s.reload(e):s?.remount?s.remount(e):void 0}onToggle(e){let{entity:t}=this.props;[t.id,t.entityID,t.name].includes(e)&&this.forceUpdate()}getType(){let{type:e,client:t}=this.props;switch(t){case"powercord":return"plugins"===e?"pluginManager":"styleManager";case"bd":return"plugins"===e?"Plugins":"Themes";case"unbound":return"plugins"===e?"plugins":"themes"}}getGlobal(){let{client:e}=this.props;switch(e){case"powercord":return"powercord";case"bd":return"BdApi";case"unbound":return"unbound"}}hasSettings(){let{client:e,entity:t}=this.props,a=this.getId();switch(e){case"powercord":let s=powercord.api.settings.settings;if(s.has(a))return!0;let l=[...s.values()];return l.find(e=>{let t=[e.label,e.category];if(t.includes(a))return!0});case"unbound":case"bd":return t.instance?.getSettingsPanel}}getId(){let{client:e,entity:t}=this.props;switch(e){case"powercord":return t.entityID;case"bd":return t.name;case"unbound":return t.id}}}!function(e,t,a,s){var l,n=arguments.length,r=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,a):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,a,s);else for(var i=e.length-1;i>=0;i--)(l=e[i])&&(r=(n<3?l(r):n>3?l(t,a,r):l(t,a))||r);return n>3&&r&&Object.defineProperty(t,a,r),r}([a.bind],AddonCard.prototype,"onToggle",null)
//# sourceMappingURL=data:application/json;base64,