"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>j});const a=require("../../components/discord"),b=require("../../modules/webpack/common"),c=require("../../../common/utilities/index"),d=require("../../components/index"),e=require("../../modules/webpack/api"),f=i(require("react")),g=require("./Icons/index"),h=i(require("../../styles/panels/addoncard.css"));function i(a){return a&&a.__esModule?a:{default:a}}h.default.append();class j extends f.default.Component{componentWillMount(){let a=this.getGlobal(),b=this.getType(),c=window[a]?.[b]??window[a]?.managers?.[b];c?.on?.("toggle",this.onToggle)}componentWillUnmount(){let a=this.getGlobal(),b=this.getType(),c=window[a]?.[b]??window[a]?.managers?.[b];c?.off?.("toggle",this.onToggle)}render(){let{entity:e,client:g,resolve:h}=this.props,i=h(e,g,"author",{raw:!0}),j=h(e,g,"description"),k=h(e,g,"version"),l=h(e,g,"color"),m=h(e,g,"name");return f.default.createElement(a.Tooltip,{position:"left",text:e.failed?b.Locale.Messages[`UNBOUND_ADDON_FAILED_${this.props.type.toUpperCase()}`]:null,hideOnClick:!1},f.default.createElement("div",{className:(0,c.classnames)("unbound-addon-card",e.failed&&"disabled"),style:{"--entity-color":l},onContextMenu:c=>b.ContextMenu.openContextMenu(c,()=>f.default.createElement(a.Menu.default,{onClose:b.ContextMenu.closeContextMenu},f.default.createElement(a.Menu.MenuItem,{id:"delete",color:"colorDanger",label:b.Locale.Messages.UNBOUND_DELETE,action:()=>this.delete()}),f.default.createElement(a.Menu.MenuItem,{id:"reload",label:b.Locale.Messages.UNBOUND_RELOAD,action:()=>this.reload()})))},f.default.createElement("div",{className:"unbound-addon-header"},f.default.createElement(a.Text,{className:"unbound-addon-name",size:a.Text.Sizes.SIZE_16},m),f.default.createElement(a.Text,{className:"unbound-addon-version",size:a.Text.Sizes.SIZE_16,color:a.Text.Colors.INTERACTIVE_NORMAL},k),f.default.createElement(a.Text,{className:"unbound-addon-authors",size:a.Text.Sizes.SIZE_16,color:a.Text.Colors.INTERACTIVE_NORMAL},"by ",this.renderAuthors(i)),f.default.createElement("div",{className:"unbound-addon-controls"},"unbound"!==this.props.client&&f.default.createElement(a.RelativeTooltip,{text:b.Locale.Messages[`UNBOUND_ADDON_MANAGER_${this.props.client.toUpperCase()}_TOOLTIP`]?.format({type:"Plugin"}),hideOnClick:!1},a=>this.renderType({...a})),this.hasSettings()&&f.default.createElement(a.RelativeTooltip,{text:b.Locale.Messages.UNBOUND_SETTINGS,hideOnClick:!1},a=>f.default.createElement(d.Icon,Object.assign({},a,{onClick:()=>this.props.openSettings(),"data-is-disabled":!this.isEnabled,name:"Gear",width:28,height:28,className:"unbound-addon-control-button"}))),f.default.createElement(a.Switch,{checked:this.isEnabled,onChange:()=>this.toggle(),className:"unbound-addon-switch"}))),f.default.createElement("div",{className:"unbound-addon-footer"},f.default.createElement(a.FormText,{className:"unbound-addon-description"},f.default.createElement(a.Markdown,null,j)))))}renderAuthors(c){let d=[],g=c=>{if("string"==typeof c)d.push(c);else if("object"==typeof c&&c.name){let g=typeof c.id||typeof c.discord_id,h=g&&["number","string"].includes(typeof g);d.push(h?f.default.createElement(a.Anchor,{className:"unbound-addon-author",onClick(){b.Layers?.popLayer?.(),e.DMs?.openPrivateChannel?.([c.id??c.discord_id])}},c.name):c.name)}};return Array.isArray(c)?c.map(g):"object"==typeof c&&c.name?g(c):"string"==typeof c&&d.push(c),d.map((a,b)=>{let c=b+1===d.length;return"string"==typeof a?c?a:`${a}, `:[a,c?"":", "]})}renderType(a){let{client:b}=this.props;switch(a.className??="unbound-addon-type-icon",a.width??=16,a.height??=16,b){case"bd":return f.default.createElement(g.Bd,Object.assign({},a));case"powercord":return f.default.createElement(g.Plug,Object.assign({},a));default:return null}}get isEnabled(){let a=this.getId(),b=this.getGlobal(),c=this.getType(),d=window[b]?.[c]??window[b]?.managers?.[c];return d?.isEnabled?.(a)}delete(){let a=this.getId(),b=this.getGlobal(),c=this.getType(),d=window[b]?.[c]??window[b]?.managers?.[c];return d?.delete?.(a)}toggle(){let a=this.getId(),b=this.getGlobal(),c=this.getType(),d=window[b]?.[c]??window[b]?.managers?.[c];return d?.toggle?.(a)}reload(){let a=this.getId(),b=this.getGlobal(),c=this.getType(),d=window[b]?.[c]??window[b]?.managers?.[c];return d?.reload?d.reload(a):d?.remount?d.remount(a):void 0}onToggle(a){let{entity:b}=this.props;[b.id,b.entityID,b.name].includes(a)&&this.forceUpdate()}getType(){let{type:a,client:b}=this.props;switch(b){case"powercord":return"plugins"===a?"pluginManager":"styleManager";case"bd":return"plugins"===a?"Plugins":"Themes";case"unbound":return"plugins"===a?"plugins":"themes"}}getGlobal(){let{client:a}=this.props;switch(a){case"powercord":return"powercord";case"bd":return"BdApi";case"unbound":return"unbound"}}hasSettings(){let{client:a,entity:b}=this.props,c=this.getId();switch(a){case"powercord":let d=powercord.api.settings.settings;if(d.has(c))return!0;let e=[...d.values()];return e.find(a=>{let b=[a.label,a.category];if(b.includes(c))return!0});case"unbound":case"bd":return b.instance?.getSettingsPanel}}getId(){let{client:a,entity:b}=this.props;switch(a){case"powercord":return b.entityID;case"bd":return b.name;case"unbound":return b.id}}}!function(a,b,c,d){var e,f=arguments.length,g=f<3?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(f<3?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g}([c.bind],j.prototype,"onToggle",null)
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jbGllbnQvY29yZS9jb21wb25lbnRzL0FkZG9uQ2FyZC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGV4dCwgU3dpdGNoLCBBbmNob3IsIEZvcm1UZXh0LCBNYXJrZG93biwgUmVsYXRpdmVUb29sdGlwLCBNZW51LCBUb29sdGlwIH0gZnJvbSAnQGNvbXBvbmVudHMvZGlzY29yZCc7XHJcbmltcG9ydCB7IENvbnRleHRNZW51LCBMYXllcnMsIExvY2FsZSB9IGZyb20gJ0B3ZWJwYWNrL2NvbW1vbic7XHJcbmltcG9ydCB7IEF1dGhvciB9IGZyb20gJ0BjbGllbnQvbWFuYWdlcnMvYmFzZSc7XHJcbmltcG9ydCB7IGJpbmQsIGNsYXNzbmFtZXMgfSBmcm9tICdAdXRpbGl0aWVzJztcclxuaW1wb3J0IHsgQ29sb3JzIH0gZnJvbSAnQGNvbnN0YW50cyc7XHJcbmltcG9ydCB7IEljb24gfSBmcm9tICdAY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IERNcyB9IGZyb20gJ0B3ZWJwYWNrL2FwaSc7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQgeyBQbHVnLCBCZCB9IGZyb20gJy4vSWNvbnMnO1xyXG5cclxuaW1wb3J0IFN0eWxlcyBmcm9tICdAc3R5bGVzL3BhbmVscy9hZGRvbmNhcmQuY3NzJztcclxuU3R5bGVzLmFwcGVuZCgpO1xyXG5cclxuaW50ZXJmYWNlIEFkZG9uQ2FyZFByb3BzIHtcclxuICAgb3BlblNldHRpbmdzOiBGbjtcclxuICAgY2xpZW50OiBzdHJpbmc7XHJcbiAgIHR5cGU6IHN0cmluZztcclxuICAgcmVzb2x2ZTogRm47XHJcbiAgIGVudGl0eTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBZGRvbkNhcmQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8QWRkb25DYXJkUHJvcHM+IHtcclxuICAgY29tcG9uZW50V2lsbE1vdW50KCkge1xyXG4gICAgICBjb25zdCBnbG9iYWwgPSB0aGlzLmdldEdsb2JhbCgpO1xyXG4gICAgICBjb25zdCB0eXBlID0gdGhpcy5nZXRUeXBlKCk7XHJcblxyXG4gICAgICBjb25zdCBtYW5hZ2VyID0gKHdpbmRvd1tnbG9iYWxdPy5bdHlwZV0gPz8gd2luZG93W2dsb2JhbF0/Lm1hbmFnZXJzPy5bdHlwZV0pO1xyXG5cclxuICAgICAgbWFuYWdlcj8ub24/LigndG9nZ2xlJywgdGhpcy5vblRvZ2dsZSk7XHJcbiAgIH1cclxuXHJcbiAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xyXG4gICAgICBjb25zdCBnbG9iYWwgPSB0aGlzLmdldEdsb2JhbCgpO1xyXG4gICAgICBjb25zdCB0eXBlID0gdGhpcy5nZXRUeXBlKCk7XHJcblxyXG4gICAgICBjb25zdCBtYW5hZ2VyID0gKHdpbmRvd1tnbG9iYWxdPy5bdHlwZV0gPz8gd2luZG93W2dsb2JhbF0/Lm1hbmFnZXJzPy5bdHlwZV0pO1xyXG4gICAgICBtYW5hZ2VyPy5vZmY/LigndG9nZ2xlJywgdGhpcy5vblRvZ2dsZSk7XHJcbiAgIH1cclxuXHJcbiAgIHJlbmRlcigpIHtcclxuICAgICAgY29uc3QgeyBlbnRpdHksIGNsaWVudCwgcmVzb2x2ZSB9ID0gdGhpcy5wcm9wcztcclxuXHJcbiAgICAgIGNvbnN0IGF1dGhvciA9IHJlc29sdmUoZW50aXR5LCBjbGllbnQsICdhdXRob3InLCB7IHJhdzogdHJ1ZSB9KTtcclxuICAgICAgY29uc3QgZGVzY3JpcHRpb24gPSByZXNvbHZlKGVudGl0eSwgY2xpZW50LCAnZGVzY3JpcHRpb24nKTtcclxuICAgICAgY29uc3QgdmVyc2lvbiA9IHJlc29sdmUoZW50aXR5LCBjbGllbnQsICd2ZXJzaW9uJyk7XHJcbiAgICAgIGNvbnN0IGNvbG9yID0gcmVzb2x2ZShlbnRpdHksIGNsaWVudCwgJ2NvbG9yJyk7XHJcbiAgICAgIGNvbnN0IG5hbWUgPSByZXNvbHZlKGVudGl0eSwgY2xpZW50LCAnbmFtZScpO1xyXG5cclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICAgPFRvb2x0aXBcclxuICAgICAgICAgICAgcG9zaXRpb249J2xlZnQnXHJcbiAgICAgICAgICAgIHRleHQ9e2VudGl0eS5mYWlsZWQgPyBMb2NhbGUuTWVzc2FnZXNbYFVOQk9VTkRfQURET05fRkFJTEVEXyR7dGhpcy5wcm9wcy50eXBlLnRvVXBwZXJDYXNlKCl9YF0gOiBudWxsfVxyXG4gICAgICAgICAgICBoaWRlT25DbGljaz17ZmFsc2V9XHJcbiAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzbmFtZXMoJ3VuYm91bmQtYWRkb24tY2FyZCcsIGVudGl0eS5mYWlsZWQgJiYgJ2Rpc2FibGVkJyl9XHJcbiAgICAgICAgICAgICAgIHN0eWxlPXt7ICctLWVudGl0eS1jb2xvcic6IGNvbG9yIH19XHJcbiAgICAgICAgICAgICAgIG9uQ29udGV4dE1lbnU9eyhlKSA9PiBDb250ZXh0TWVudS5vcGVuQ29udGV4dE1lbnUoZSwgKCkgPT5cclxuICAgICAgICAgICAgICAgICAgPE1lbnUuZGVmYXVsdCBvbkNsb3NlPXtDb250ZXh0TWVudS5jbG9zZUNvbnRleHRNZW51fT5cclxuICAgICAgICAgICAgICAgICAgICAgPE1lbnUuTWVudUl0ZW1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ9J2RlbGV0ZSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I9J2NvbG9yRGFuZ2VyJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17TG9jYWxlLk1lc3NhZ2VzLlVOQk9VTkRfREVMRVRFfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb249eygpID0+IHRoaXMuZGVsZXRlKCl9XHJcbiAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgIDxNZW51Lk1lbnVJdGVtXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkPSdyZWxvYWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtMb2NhbGUuTWVzc2FnZXMuVU5CT1VORF9SRUxPQUR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbj17KCkgPT4gdGhpcy5yZWxvYWQoKX1cclxuICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgPC9NZW51LmRlZmF1bHQ+XHJcbiAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3VuYm91bmQtYWRkb24taGVhZGVyJz5cclxuICAgICAgICAgICAgICAgICAgPFRleHQgY2xhc3NOYW1lPSd1bmJvdW5kLWFkZG9uLW5hbWUnIHNpemU9e1RleHQuU2l6ZXMuU0laRV8xNn0+XHJcbiAgICAgICAgICAgICAgICAgICAgIHtuYW1lfVxyXG4gICAgICAgICAgICAgICAgICA8L1RleHQ+XHJcbiAgICAgICAgICAgICAgICAgIDxUZXh0XHJcbiAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ndW5ib3VuZC1hZGRvbi12ZXJzaW9uJ1xyXG4gICAgICAgICAgICAgICAgICAgICBzaXplPXtUZXh0LlNpemVzLlNJWkVfMTZ9XHJcbiAgICAgICAgICAgICAgICAgICAgIGNvbG9yPXtUZXh0LkNvbG9ycy5JTlRFUkFDVElWRV9OT1JNQUx9XHJcbiAgICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICAge3ZlcnNpb259XHJcbiAgICAgICAgICAgICAgICAgIDwvVGV4dD5cclxuICAgICAgICAgICAgICAgICAgPFRleHRcclxuICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSd1bmJvdW5kLWFkZG9uLWF1dGhvcnMnXHJcbiAgICAgICAgICAgICAgICAgICAgIHNpemU9e1RleHQuU2l6ZXMuU0laRV8xNn1cclxuICAgICAgICAgICAgICAgICAgICAgY29sb3I9e1RleHQuQ29sb3JzLklOVEVSQUNUSVZFX05PUk1BTH1cclxuICAgICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgICBieSB7dGhpcy5yZW5kZXJBdXRob3JzKGF1dGhvcil9XHJcbiAgICAgICAgICAgICAgICAgIDwvVGV4dD5cclxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J3VuYm91bmQtYWRkb24tY29udHJvbHMnPlxyXG4gICAgICAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5jbGllbnQgIT09ICd1bmJvdW5kJyAmJiA8UmVsYXRpdmVUb29sdGlwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e0xvY2FsZS5NZXNzYWdlc1tgVU5CT1VORF9BRERPTl9NQU5BR0VSXyR7dGhpcy5wcm9wcy5jbGllbnQudG9VcHBlckNhc2UoKX1fVE9PTFRJUGBdPy5mb3JtYXQoeyB0eXBlOiAnUGx1Z2luJyB9KX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaGlkZU9uQ2xpY2s9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtwID0+IHRoaXMucmVuZGVyVHlwZSh7IC4uLnAgfSl9XHJcbiAgICAgICAgICAgICAgICAgICAgIDwvUmVsYXRpdmVUb29sdGlwPn1cclxuICAgICAgICAgICAgICAgICAgICAge3RoaXMuaGFzU2V0dGluZ3MoKSAmJiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxSZWxhdGl2ZVRvb2x0aXAgdGV4dD17TG9jYWxlLk1lc3NhZ2VzLlVOQk9VTkRfU0VUVElOR1N9IGhpZGVPbkNsaWNrPXtmYWxzZX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwID0+IDxJY29uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5wfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnByb3BzLm9wZW5TZXR0aW5ncygpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWlzLWRpc2FibGVkPXshdGhpcy5pc0VuYWJsZWR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9J0dlYXInXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPXsyOH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PXsyOH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSd1bmJvdW5kLWFkZG9uLWNvbnRyb2wtYnV0dG9uJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAvPn1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9SZWxhdGl2ZVRvb2x0aXA+XHJcbiAgICAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICAgICAgIDxTd2l0Y2hcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17dGhpcy5pc0VuYWJsZWR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoKSA9PiB0aGlzLnRvZ2dsZSgpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3VuYm91bmQtYWRkb24tc3dpdGNoJ1xyXG4gICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSd1bmJvdW5kLWFkZG9uLWZvb3Rlcic+XHJcbiAgICAgICAgICAgICAgICAgIDxGb3JtVGV4dCBjbGFzc05hbWU9J3VuYm91bmQtYWRkb24tZGVzY3JpcHRpb24nPlxyXG4gICAgICAgICAgICAgICAgICAgICA8TWFya2Rvd24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtkZXNjcmlwdGlvbn1cclxuICAgICAgICAgICAgICAgICAgICAgPC9NYXJrZG93bj5cclxuICAgICAgICAgICAgICAgICAgPC9Gb3JtVGV4dD5cclxuICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICA8L1Rvb2x0aXA+KTtcclxuICAgfVxyXG5cclxuICAgcmVuZGVyQXV0aG9ycyhhdXRob3JzOiBBdXRob3IpIHtcclxuICAgICAgY29uc3QgcmVzID0gW107XHJcblxyXG4gICAgICBjb25zdCBoYW5kbGVBdXRob3IgPSAoYXV0aG9yKSA9PiB7XHJcbiAgICAgICAgIGlmICh0eXBlb2YgYXV0aG9yID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICByZXMucHVzaChhdXRob3IpO1xyXG4gICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBhdXRob3IgPT09ICdvYmplY3QnICYmIGF1dGhvci5uYW1lKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkID0gdHlwZW9mIGF1dGhvci5pZCB8fCB0eXBlb2YgYXV0aG9yLmRpc2NvcmRfaWQ7XHJcbiAgICAgICAgICAgIGNvbnN0IGhhc0lkID0gaWQgJiYgKFsnbnVtYmVyJywgJ3N0cmluZyddLmluY2x1ZGVzKHR5cGVvZiBpZCkpO1xyXG5cclxuICAgICAgICAgICAgcmVzLnB1c2goaGFzSWQgP1xyXG4gICAgICAgICAgICAgICA8QW5jaG9yXHJcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0ndW5ib3VuZC1hZGRvbi1hdXRob3InXHJcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgTGF5ZXJzPy5wb3BMYXllcj8uKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgIERNcz8ub3BlblByaXZhdGVDaGFubmVsPy4oW2F1dGhvci5pZCA/PyBhdXRob3IuZGlzY29yZF9pZF0pO1xyXG4gICAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgIHthdXRob3IubmFtZX1cclxuICAgICAgICAgICAgICAgPC9BbmNob3I+IDpcclxuICAgICAgICAgICAgICAgYXV0aG9yLm5hbWVcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXV0aG9ycykpIHtcclxuICAgICAgICAgYXV0aG9ycy5tYXAoaGFuZGxlQXV0aG9yKTtcclxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgYXV0aG9ycyA9PT0gJ29iamVjdCcgJiYgYXV0aG9ycy5uYW1lKSB7XHJcbiAgICAgICAgIGhhbmRsZUF1dGhvcihhdXRob3JzKTtcclxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgYXV0aG9ycyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgcmVzLnB1c2goYXV0aG9ycyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiByZXMubWFwKChhdXRob3IsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgIGNvbnN0IGlzTGFzdCA9IGluZGV4ICsgMSA9PT0gcmVzLmxlbmd0aDtcclxuXHJcbiAgICAgICAgIGlmICh0eXBlb2YgYXV0aG9yID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICByZXR1cm4gaXNMYXN0ID8gYXV0aG9yIDogYCR7YXV0aG9yfSwgYDtcclxuICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIFthdXRob3IsIGlzTGFzdCA/ICcnIDogJywgJ107XHJcbiAgICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgIH1cclxuXHJcbiAgIHJlbmRlclR5cGUocHJvcHMpIHtcclxuICAgICAgY29uc3QgeyBjbGllbnQgfSA9IHRoaXMucHJvcHM7XHJcblxyXG4gICAgICBwcm9wcy5jbGFzc05hbWUgPz89ICd1bmJvdW5kLWFkZG9uLXR5cGUtaWNvbic7XHJcbiAgICAgIHByb3BzLndpZHRoID8/PSAxNjtcclxuICAgICAgcHJvcHMuaGVpZ2h0ID8/PSAxNjtcclxuXHJcbiAgICAgIHN3aXRjaCAoY2xpZW50KSB7XHJcbiAgICAgICAgIGNhc2UgJ2JkJzpcclxuICAgICAgICAgICAgcmV0dXJuIDxCZCB7Li4ucHJvcHN9IC8+O1xyXG4gICAgICAgICBjYXNlICdwb3dlcmNvcmQnOlxyXG4gICAgICAgICAgICByZXR1cm4gPFBsdWcgey4uLnByb3BzfSAvPjtcclxuICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH1cclxuICAgfVxyXG5cclxuICAgZ2V0IGlzRW5hYmxlZCgpIHtcclxuICAgICAgY29uc3QgbmFtZSA9IHRoaXMuZ2V0SWQoKTtcclxuICAgICAgY29uc3QgZ2xvYmFsID0gdGhpcy5nZXRHbG9iYWwoKTtcclxuICAgICAgY29uc3QgdHlwZSA9IHRoaXMuZ2V0VHlwZSgpO1xyXG5cclxuICAgICAgY29uc3QgbWFuYWdlciA9ICh3aW5kb3dbZ2xvYmFsXT8uW3R5cGVdID8/IHdpbmRvd1tnbG9iYWxdPy5tYW5hZ2Vycz8uW3R5cGVdKTtcclxuICAgICAgcmV0dXJuIG1hbmFnZXI/LmlzRW5hYmxlZD8uKG5hbWUpO1xyXG4gICB9XHJcblxyXG4gICBkZWxldGUoKSB7XHJcbiAgICAgIGNvbnN0IG5hbWUgPSB0aGlzLmdldElkKCk7XHJcbiAgICAgIGNvbnN0IGdsb2JhbCA9IHRoaXMuZ2V0R2xvYmFsKCk7XHJcbiAgICAgIGNvbnN0IHR5cGUgPSB0aGlzLmdldFR5cGUoKTtcclxuXHJcbiAgICAgIGNvbnN0IG1hbmFnZXIgPSAod2luZG93W2dsb2JhbF0/Llt0eXBlXSA/PyB3aW5kb3dbZ2xvYmFsXT8ubWFuYWdlcnM/Llt0eXBlXSk7XHJcbiAgICAgIHJldHVybiBtYW5hZ2VyPy5kZWxldGU/LihuYW1lKTtcclxuICAgfVxyXG5cclxuICAgdG9nZ2xlKCkge1xyXG4gICAgICBjb25zdCBuYW1lID0gdGhpcy5nZXRJZCgpO1xyXG4gICAgICBjb25zdCBnbG9iYWwgPSB0aGlzLmdldEdsb2JhbCgpO1xyXG4gICAgICBjb25zdCB0eXBlID0gdGhpcy5nZXRUeXBlKCk7XHJcblxyXG4gICAgICBjb25zdCBtYW5hZ2VyID0gKHdpbmRvd1tnbG9iYWxdPy5bdHlwZV0gPz8gd2luZG93W2dsb2JhbF0/Lm1hbmFnZXJzPy5bdHlwZV0pO1xyXG5cclxuICAgICAgcmV0dXJuIG1hbmFnZXI/LnRvZ2dsZT8uKG5hbWUpO1xyXG4gICB9XHJcblxyXG4gICByZWxvYWQoKSB7XHJcbiAgICAgIGNvbnN0IG5hbWUgPSB0aGlzLmdldElkKCk7XHJcbiAgICAgIGNvbnN0IGdsb2JhbCA9IHRoaXMuZ2V0R2xvYmFsKCk7XHJcbiAgICAgIGNvbnN0IHR5cGUgPSB0aGlzLmdldFR5cGUoKTtcclxuXHJcbiAgICAgIGNvbnN0IG1hbmFnZXIgPSAod2luZG93W2dsb2JhbF0/Llt0eXBlXSA/PyB3aW5kb3dbZ2xvYmFsXT8ubWFuYWdlcnM/Llt0eXBlXSk7XHJcblxyXG4gICAgICBpZiAobWFuYWdlcj8ucmVsb2FkKSB7XHJcbiAgICAgICAgIHJldHVybiBtYW5hZ2VyLnJlbG9hZChuYW1lKTtcclxuICAgICAgfSBlbHNlIGlmIChtYW5hZ2VyPy5yZW1vdW50KSB7XHJcbiAgICAgICAgIHJldHVybiBtYW5hZ2VyLnJlbW91bnQobmFtZSk7XHJcbiAgICAgIH1cclxuICAgfVxyXG5cclxuICAgQGJpbmRcclxuICAgb25Ub2dnbGUobmFtZSkge1xyXG4gICAgICBjb25zdCB7IGVudGl0eSB9ID0gdGhpcy5wcm9wcztcclxuXHJcbiAgICAgIGlmICghW2VudGl0eS5pZCwgZW50aXR5LmVudGl0eUlELCBlbnRpdHkubmFtZV0uaW5jbHVkZXMobmFtZSkpIHtcclxuICAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XHJcbiAgIH1cclxuXHJcbiAgIGdldFR5cGUoKSB7XHJcbiAgICAgIGNvbnN0IHsgdHlwZSwgY2xpZW50IH0gPSB0aGlzLnByb3BzO1xyXG5cclxuICAgICAgc3dpdGNoIChjbGllbnQpIHtcclxuICAgICAgICAgY2FzZSAncG93ZXJjb3JkJzpcclxuICAgICAgICAgICAgcmV0dXJuIHR5cGUgPT09ICdwbHVnaW5zJyA/ICdwbHVnaW5NYW5hZ2VyJyA6ICdzdHlsZU1hbmFnZXInO1xyXG4gICAgICAgICBjYXNlICdiZCc6XHJcbiAgICAgICAgICAgIHJldHVybiB0eXBlID09PSAncGx1Z2lucycgPyAnUGx1Z2lucycgOiAnVGhlbWVzJztcclxuICAgICAgICAgY2FzZSAndW5ib3VuZCc6XHJcbiAgICAgICAgICAgIHJldHVybiB0eXBlID09PSAncGx1Z2lucycgPyAncGx1Z2lucycgOiAndGhlbWVzJztcclxuICAgICAgfVxyXG4gICB9XHJcblxyXG4gICBnZXRHbG9iYWwoKSB7XHJcbiAgICAgIGNvbnN0IHsgY2xpZW50IH0gPSB0aGlzLnByb3BzO1xyXG5cclxuICAgICAgc3dpdGNoIChjbGllbnQpIHtcclxuICAgICAgICAgY2FzZSAncG93ZXJjb3JkJzpcclxuICAgICAgICAgICAgcmV0dXJuICdwb3dlcmNvcmQnO1xyXG4gICAgICAgICBjYXNlICdiZCc6XHJcbiAgICAgICAgICAgIHJldHVybiAnQmRBcGknO1xyXG4gICAgICAgICBjYXNlICd1bmJvdW5kJzpcclxuICAgICAgICAgICAgcmV0dXJuICd1bmJvdW5kJztcclxuICAgICAgfVxyXG4gICB9XHJcblxyXG4gICBoYXNTZXR0aW5ncygpIHtcclxuICAgICAgY29uc3QgeyBjbGllbnQsIGVudGl0eSB9ID0gdGhpcy5wcm9wcztcclxuICAgICAgY29uc3QgaWQgPSB0aGlzLmdldElkKCk7XHJcblxyXG4gICAgICBzd2l0Y2ggKGNsaWVudCkge1xyXG4gICAgICAgICBjYXNlICdwb3dlcmNvcmQnOlxyXG4gICAgICAgICAgICBjb25zdCBzZXR0aW5ncyA9IHBvd2VyY29yZC5hcGkuc2V0dGluZ3Muc2V0dGluZ3M7XHJcblxyXG4gICAgICAgICAgICBpZiAoc2V0dGluZ3MuaGFzKGlkKSkge1xyXG4gICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gWy4uLnNldHRpbmdzLnZhbHVlcygpXTtcclxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlcy5maW5kKGUgPT4ge1xyXG4gICAgICAgICAgICAgICBjb25zdCBzZWFyY2hhYmxlID0gW2UubGFiZWwsIGUuY2F0ZWdvcnldO1xyXG5cclxuICAgICAgICAgICAgICAgaWYgKHNlYXJjaGFibGUuaW5jbHVkZXMoaWQpKSB7XHJcbiAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICBjYXNlICd1bmJvdW5kJzpcclxuICAgICAgICAgY2FzZSAnYmQnOlxyXG4gICAgICAgICAgICByZXR1cm4gZW50aXR5Lmluc3RhbmNlPy5nZXRTZXR0aW5nc1BhbmVsO1xyXG4gICAgICB9XHJcbiAgIH1cclxuXHJcbiAgIGdldElkKCkge1xyXG4gICAgICBjb25zdCB7IGNsaWVudCwgZW50aXR5IH0gPSB0aGlzLnByb3BzO1xyXG5cclxuICAgICAgc3dpdGNoIChjbGllbnQpIHtcclxuICAgICAgICAgY2FzZSAncG93ZXJjb3JkJzpcclxuICAgICAgICAgICAgcmV0dXJuIGVudGl0eS5lbnRpdHlJRDtcclxuICAgICAgICAgY2FzZSAnYmQnOlxyXG4gICAgICAgICAgICByZXR1cm4gZW50aXR5Lm5hbWU7XHJcbiAgICAgICAgIGNhc2UgJ3VuYm91bmQnOlxyXG4gICAgICAgICAgICByZXR1cm4gZW50aXR5LmlkO1xyXG4gICAgICB9XHJcbiAgIH1cclxufTsiXSwibmFtZXMiOlsiQWRkb25DYXJkIiwiU3R5bGVzIiwiYXBwZW5kIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJnbG9iYWwiLCJnZXRHbG9iYWwiLCJ0eXBlIiwiZ2V0VHlwZSIsIm1hbmFnZXIiLCJ3aW5kb3ciLCJtYW5hZ2VycyIsIm9uIiwib25Ub2dnbGUiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIm9mZiIsInJlbmRlciIsImVudGl0eSIsImNsaWVudCIsInJlc29sdmUiLCJwcm9wcyIsImF1dGhvciIsInJhdyIsImRlc2NyaXB0aW9uIiwidmVyc2lvbiIsImNvbG9yIiwibmFtZSIsIlRvb2x0aXAiLCJwb3NpdGlvbiIsInRleHQiLCJmYWlsZWQiLCJMb2NhbGUiLCJNZXNzYWdlcyIsInRvVXBwZXJDYXNlIiwiaGlkZU9uQ2xpY2siLCJkaXYiLCJjbGFzc05hbWUiLCJjbGFzc25hbWVzIiwic3R5bGUiLCJvbkNvbnRleHRNZW51IiwiZSIsIkNvbnRleHRNZW51Iiwib3BlbkNvbnRleHRNZW51IiwiTWVudSIsImRlZmF1bHQiLCJvbkNsb3NlIiwiY2xvc2VDb250ZXh0TWVudSIsIk1lbnVJdGVtIiwiaWQiLCJsYWJlbCIsIlVOQk9VTkRfREVMRVRFIiwiYWN0aW9uIiwiZGVsZXRlIiwiVU5CT1VORF9SRUxPQUQiLCJyZWxvYWQiLCJUZXh0Iiwic2l6ZSIsIlNpemVzIiwiU0laRV8xNiIsIkNvbG9ycyIsIklOVEVSQUNUSVZFX05PUk1BTCIsInJlbmRlckF1dGhvcnMiLCJSZWxhdGl2ZVRvb2x0aXAiLCJmb3JtYXQiLCJwIiwicmVuZGVyVHlwZSIsImhhc1NldHRpbmdzIiwiVU5CT1VORF9TRVRUSU5HUyIsIkljb24iLCJvbkNsaWNrIiwib3BlblNldHRpbmdzIiwiZGF0YS1pcy1kaXNhYmxlZCIsImlzRW5hYmxlZCIsIndpZHRoIiwiaGVpZ2h0IiwiU3dpdGNoIiwiY2hlY2tlZCIsIm9uQ2hhbmdlIiwidG9nZ2xlIiwiRm9ybVRleHQiLCJNYXJrZG93biIsImF1dGhvcnMiLCJyZXMiLCJoYW5kbGVBdXRob3IiLCJwdXNoIiwiZGlzY29yZF9pZCIsImhhc0lkIiwiaW5jbHVkZXMiLCJBbmNob3IiLCJMYXllcnMiLCJwb3BMYXllciIsIkRNcyIsIm9wZW5Qcml2YXRlQ2hhbm5lbCIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsImluZGV4IiwiaXNMYXN0IiwibGVuZ3RoIiwiQmQiLCJQbHVnIiwiZ2V0SWQiLCJyZW1vdW50IiwiZW50aXR5SUQiLCJmb3JjZVVwZGF0ZSIsInNldHRpbmdzIiwicG93ZXJjb3JkIiwiYXBpIiwiaGFzIiwidmFsdWVzIiwiZmluZCIsInNlYXJjaGFibGUiLCJjYXRlZ29yeSIsImluc3RhbmNlIiwiZ2V0U2V0dGluZ3NQYW5lbCIsImJpbmQiXSwibWFwcGluZ3MiOiJBQUFBLGtHQXNCQSxTQThSQyx3QkE5Um9CQSxDQUFTLG1CQXRCMkQsMEJBQXFCLFlBQ2xFLDhCQUFpQixZQUU1QixpQ0FBWSxZQUV4Qix3QkFBYSxZQUNkLDJCQUFjLGNBQ2hCLE9BQU8sYUFFQSxlQUFTLGNBRWYsbUNBQThCLHNEQUNqREMsQ0FBTSxRQUFBLENBQUNDLE1BQU0sRUFBRSxBQVVBLE9BQU1GLENBQVMsU0FBU0csQ0FBSyxRQUFBLENBQUNDLFNBQVMsQ0FDbkRDLGtCQUFrQixFQUFHLENBQ2xCLElBQU1DLENBQU0sQ0FBRyxJQUFJLENBQUNDLFNBQVMsRUFBRSxDQUN6QkMsQ0FBSSxDQUFHLElBQUksQ0FBQ0MsT0FBTyxFQUFFLENBRXJCQyxDQUFPLENBQUlDLE1BQU0sQ0FBQ0wsQ0FBTSxDQUFDLEVBQUUsQ0FBQ0UsQ0FBSSxDQUFDLEVBQUlHLE1BQU0sQ0FBQ0wsQ0FBTSxDQUFDLEVBQUVNLFFBQVEsRUFBRSxDQUFDSixDQUFJLENBQUMsQUFBQyxBQUg1QyxDQUtoQ0UsQ0FBTyxFQUFFRyxFQUFFLEdBQUcsUUFBUSxDQUFFLElBQUksQ0FBQ0MsUUFBUSxFQUN2QyxBQUVEQyxvQkFBb0IsRUFBRyxDQUNwQixJQUFNVCxDQUFNLENBQUcsSUFBSSxDQUFDQyxTQUFTLEVBQUUsQ0FDekJDLENBQUksQ0FBRyxJQUFJLENBQUNDLE9BQU8sRUFBRSxDQUVyQkMsQ0FBTyxDQUFJQyxNQUFNLENBQUNMLENBQU0sQ0FBQyxFQUFFLENBQUNFLENBQUksQ0FBQyxFQUFJRyxNQUFNLENBQUNMLENBQU0sQ0FBQyxFQUFFTSxRQUFRLEVBQUUsQ0FBQ0osQ0FBSSxD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