"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:()=>k});const a=require("../../components/discord"),b=require("../../modules/webpack/common"),c=require("../../../common/utilities/index"),d=require("../../../common/constants"),e=require("../../components/index"),f=require("../../modules/webpack/api"),g=j(require("react")),h=require("./Icons/index"),i=j(require("../../styles/panels/addoncard.css"));function j(a){return a&&a.__esModule?a:{default:a}}i.default.append();class k extends g.default.Component{componentWillMount(){let a=this.getGlobal(),b=this.getType(),c=window[a]?.[b]??window[a]?.managers?.[b];c?.on?.("toggle",this.onToggle)}componentWillUnmount(){let a=this.getGlobal(),b=this.getType(),c=window[a]?.[b]??window[a]?.managers?.[b];c?.off?.("toggle",this.onToggle)}render(){let{entity:f}=this.props,h=((((f.instance?._config?.info?.name??f.manifest?.name)??f.displayName)??f.data?.name)??f.name)??b.Locale.Messages.UNBOUND_ADDON_MISSING_NAME,i=(((f.instance?._config?.info?.description??f.manifest?.description)??f.data?.description)??f.description)??b.Locale.Messages.UNBOUND_ADDON_MISSING_DESCRIPTION,j=((((f.instance?._config?.info?.authors??f.manifest?.author)??f.data?.authors)??f.getAuthor?.())??f.author)??b.Locale.Messages.UNBOUND_ADDON_MISSING_AUTHOR,k="bd"===this.props.client?"#3E82E5":((f?.color??f?.data?.color)??f?.instance?.color)??d.Colors.BRAND,l=((((f.instance?._config?.info?.version??f.manifest?.version)??f.getVersion?.())??f.data?.version)??f.version)??b.Locale.Messages.UNBOUND_ADDON_MISSING_VERSION;return g.default.createElement(a.Tooltip,{position:"left",text:f.failed?b.Locale.Messages[`UNBOUND_ADDON_FAILED_${this.props.type.toUpperCase()}`]:null,hideOnClick:!1},g.default.createElement("div",{className:(0,c.classnames)("unbound-addon-card",f.failed&&"disabled"),style:{"--entity-color":k},onContextMenu:c=>b.ContextMenu.openContextMenu(c,()=>g.default.createElement(a.Menu.default,{onClose:b.ContextMenu.closeContextMenu},g.default.createElement(a.Menu.MenuItem,{id:"delete",color:"colorDanger",label:b.Locale.Messages.UNBOUND_DELETE,action:()=>this.delete()}),g.default.createElement(a.Menu.MenuItem,{id:"reload",label:b.Locale.Messages.UNBOUND_RELOAD,action:()=>this.reload()})))},g.default.createElement("div",{className:"unbound-addon-header"},g.default.createElement(a.Text,{className:"unbound-addon-name",size:a.Text.Sizes.SIZE_16},h),g.default.createElement(a.Text,{className:"unbound-addon-version",size:a.Text.Sizes.SIZE_16,color:a.Text.Colors.INTERACTIVE_NORMAL},l),g.default.createElement(a.Text,{className:"unbound-addon-authors",size:a.Text.Sizes.SIZE_16,color:a.Text.Colors.INTERACTIVE_NORMAL},"by ",this.renderAuthors(j)),g.default.createElement("div",{className:"unbound-addon-controls"},"unbound"!==this.props.client&&g.default.createElement(a.RelativeTooltip,{text:b.Locale.Messages[`UNBOUND_ADDON_MANAGER_${this.props.client.toUpperCase()}_TOOLTIP`]?.format({type:"Plugin"}),hideOnClick:!1},a=>this.renderType({...a})),this.hasSettings()&&g.default.createElement(a.RelativeTooltip,{text:b.Locale.Messages.UNBOUND_SETTINGS,hideOnClick:!1},a=>g.default.createElement(e.Icon,Object.assign({},a,{onClick:()=>this.props.openSettings(),name:"Gear",width:28,height:28,className:"unbound-addon-control-button"}))),g.default.createElement(a.Switch,{checked:this.isEnabled,onChange:()=>this.toggle(),className:"unbound-addon-switch"}))),g.default.createElement("div",{className:"unbound-addon-footer"},g.default.createElement(a.FormText,{className:"unbound-addon-description"},g.default.createElement(a.Markdown,null,i)))))}renderAuthors(c){let d=[],e=c=>{if("string"==typeof c)d.push(c);else if("object"==typeof c&&c.name){let e=typeof c.id||typeof c.discord_id,h=e&&["number","string"].includes(typeof e);d.push(h?g.default.createElement(a.Anchor,{className:"unbound-addon-author",onClick(){b.Layers?.popLayer?.(),f.DMs?.openPrivateChannel?.([c.id??c.discord_id])}},c.name):c.name)}};return Array.isArray(c)?c.map(e):"object"==typeof c&&c.name?e(c):"string"==typeof c&&d.push(c),d.map((a,b)=>{let c=b+1===d.length;return"string"==typeof a?c?a:`${a}, `:[a,c?"":", "]})}renderType(a){let{client:b}=this.props;switch(a.className??="unbound-addon-type-icon",a.width??=16,a.height??=16,b.toLowerCase()){case"bd":return g.default.createElement(h.Bd,Object.assign({},a));case"powercord":return g.default.createElement(h.Plug,Object.assign({},a));default:return null}}get isEnabled(){let a=this.getName(),b=this.getGlobal(),c=this.getType(),d=window[b]?.[c]??window[b]?.managers?.[c];return d?.isEnabled?.(a)}delete(){let a=this.getName(),b=this.getGlobal(),c=this.getType(),d=window[b]?.[c]??window[b]?.managers?.[c];return d?.delete?.(a)}toggle(){let a=this.getName(),b=this.getGlobal(),c=this.getType(),d=window[b]?.[c]??window[b]?.managers?.[c];return d?.toggle?.(a)}reload(){let a=this.getName(),b=this.getGlobal(),c=this.getType(),d=window[b]?.[c]??window[b]?.managers?.[c];return d?.reload?d.reload(a):d?.remount?d.remount(a):void 0}onToggle(a){let{entity:b}=this.props;[b.id,b.entityID,b.name].includes(a)&&this.forceUpdate()}getType(){let{type:a,client:b}=this.props;switch(b.toLowerCase()){case"powercord":return"plugins"===a?"pluginManager":"styleManager";case"bd":return"plugins"===a?"Plugins":"Themes";case"unbound":return"plugins"===a?"plugins":"themes"}}getGlobal(){let{client:a}=this.props;switch(a.toLowerCase()){case"powercord":return"powercord";case"bd":return"BdApi";case"unbound":return"unbound"}}hasSettings(){let a=this.getId(),b=this.getName();return this.isEnabled&&(((this.props.entity.instance?.getSettingsPanel??this.props.entity.getSettingsPanel)??[...window?.powercord?.api?.settings?.settings?.keys()??[]].includes(a))??[...window?.powercord?.api?.settings?.settings?.values()??[]].find?.(c=>{let d=[c.label,c.category];if(d.includes(a)||d.includes(b))return!0}))}getName(){return((this.props.entity.entityID??this.props.entity.id)??this.props.entity.manifest?.name)??this.props.entity.name}getId(){return(this.props.entity.id??this.props.entity.entityID)??this.props.entity.name}}!function(a,b,c,d){var e,f=arguments.length,g=f<3?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(f<3?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g}([c.bind],k.prototype,"onToggle",null)
//# sourceMappingURL=data:application/json;base64,