"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(a,b){for(var c in b)Object.defineProperty(a,c,{enumerable:!0,get:b[c]})}(exports,{patches:()=>g,before:()=>h,after:()=>i,instead:()=>j,create:()=>k,unpatchAll:()=>l,default:()=>p});const a=require("../../../common/logger"),b=require("../../../common/utilities/index"),c=function(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=e(b);if(c&&c.has(a))return c.get(a);var d={},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var g in a)if("default"!==g&&Object.prototype.hasOwnProperty.call(a,g)){var h=f?Object.getOwnPropertyDescriptor(a,g):null;h&&(h.get||h.set)?Object.defineProperty(d,g,h):d[g]=a[g]}return d.default=a,c&&c.set(a,d),d}(require("@webpack")),d=function(a){return a&&a.__esModule?a:{default:a}}(require("./index"));function e(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(e=function(a){return a?c:b})(a)}const f=(0,a.createLogger)("Patcher","Menu"),g={};function h(a,b,c){m(a,b,c),n("before",a,b,c)}function i(a,b,c){m(a,b,c),n("after",a,b,c)}function j(a,b,c){m(a,b,c),n("instead",a,b,c)}function k(a){return{before:(b,c)=>h(a,b,c),after:(b,c)=>i(a,b,c),instead:(b,c)=>j(a,b,c),unpatchAll:()=>l(a)}}function l(a){for(let b in g){let c=g[b];g[b]=c.filter(b=>b.caller!==a)}return d.default.unpatchAll(a)}function m(a,b,c){if(a&&"string"==typeof a){if(b&&"string"==typeof b){if(!c||"function"!=typeof c)throw TypeError("third argument callback does not exist or is not of type function")}else throw TypeError("second argument menu does not exist or is not of type string")}else throw TypeError("first argument caller does not exist or is not of type string")}function n(a,b,c,d){g[c]??=[],g[c].push({type:a,caller:b,menu:c,callback:d,applied:!1})}function o(){let a=c.findByProps("openContextMenuLazy");d.default.instead("unbound-menu-patcher",a,"openContextMenuLazy",(a,c,e)=>{if(!c[1].__unbound){let h=c[1];c[1]=async(...a)=>{let c=await h(a[0]);return a=>(function(a,c){let e=c(a);try{if(e.type.displayName?.endsWith("ContextMenu")){let h=e.type?.displayName,i=g[h];if(!i?.length)return e;for(let j of i)d.default[j.type](j.caller,e,"type",(a,b,c)=>{try{return j.callback.apply(a,[a,b,c])}catch(d){f.error(`Failed to run context menu patch on ${h} of caller ${j.caller}.`,d)}},!0);return e}let k=(0,b.forceRender)(e.type)(e.props);if(!k)return e;let l=k.props.children;if(l.type?.displayName?.endsWith("ContextMenu")){let m=l.type?.displayName,n=g[m];if(!n?.length)return e;for(let o of n)d.default[o.type](o.caller,l,"type",(a,b,c)=>{try{return o.callback.apply(a,[a,b,c])}catch(d){f.error(`Failed to run context menu patch on ${m} of caller ${o.caller}.`,d)}},!0);return l}let p=(0,b.forceRender)(l.type)(l.props);if("AnalyticsContext"===p.type.displayName){let q=p.props.children,r=q.type?.displayName,s=g[r];if(!s?.length)return e;for(let t of s)d.default[t.type](t.caller,q,"type",(a,b,c)=>{try{return t.callback.apply(a,[a,b,c])}catch(d){f.error(`Failed to run context menu patch on ${r} of caller ${t.caller}.`,d)}},!0);return q}}catch{}return e})(a,c)},c[1].__unbound=!0}return e.call(a,...c)})}setImmediate(()=>c.data.available.then(o));const p={instead:j,create:k,before:h,after:i,patches:g}
//# sourceMappingURL=data:application/json;base64,