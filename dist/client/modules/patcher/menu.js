"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function _export(a,b){for(var c in b)Object.defineProperty(a,c,{enumerable:!0,get:b[c]})}(exports,{patches:()=>f,before:()=>before,after:()=>after,instead:()=>instead,create:()=>create,unpatchAll:()=>unpatchAll,default:()=>g});const a=require("../../../common/logger"),b=require("../../../common/utilities/index"),c=function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!==f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}(require("@webpack")),d=function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}(require("./index"));function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}const e=(0,a.createLogger)("Patcher","Menu"),f={};function before(a,b,c){validateArguments(a,b,c),push("before",a,b,c)}function after(a,b,c){validateArguments(a,b,c),push("after",a,b,c)}function instead(a,b,c){validateArguments(a,b,c),push("instead",a,b,c)}function create(a){return{before:(b,c)=>before(a,b,c),after:(b,c)=>after(a,b,c),instead:(b,c)=>instead(a,b,c),unpatchAll:()=>unpatchAll(a)}}function unpatchAll(a){for(let b in f){let c=f[b];f[b]=c.filter(b=>b.caller!==a)}return d.default.unpatchAll(a)}function validateArguments(a,b,c){if(a&&"string"==typeof a){if(b&&"string"==typeof b){if(!c||"function"!=typeof c)throw TypeError("third argument callback does not exist or is not of type function")}else throw TypeError("second argument menu does not exist or is not of type string")}else throw TypeError("first argument caller does not exist or is not of type string")}function push(a,b,c,d){f[c]??=[],f[c].push({type:a,caller:b,menu:c,callback:d,applied:!1})}function initialize(){let a=c.findByProps("openContextMenuLazy");d.default.instead("unbound-menu-patcher",a,"openContextMenuLazy",(a,c,g)=>{if(!c[1].__unbound){let h=c[1];c[1]=async(...a)=>{let c=await h(a[0]);return a=>(function handleMenu(a,c){let g=c(a);try{if(g.type.displayName?.endsWith("ContextMenu")){let h=g.type?.displayName,i=f[h];if(!i?.length)return g;for(let j of i)d.default[j.type](j.caller,g,"type",(a,b,c)=>{try{return j.callback.apply(a,[a,b,c])}catch(d){e.error(`Failed to run context menu patch on ${h} of caller ${j.caller}.`,d)}},!0);return g}let k=(0,b.forceRender)(g.type)(g.props);if(!k)return g;let l=k.props.children;if(l.type?.displayName?.endsWith("ContextMenu")){let m=l.type?.displayName,n=f[m];if(!n?.length)return g;for(let o of n)d.default[o.type](o.caller,l,"type",(a,b,c)=>{try{return o.callback.apply(a,[a,b,c])}catch(d){e.error(`Failed to run context menu patch on ${m} of caller ${o.caller}.`,d)}},!0);return l}let p=(0,b.forceRender)(l.type)(l.props);if("AnalyticsContext"===p.type.displayName){let q=p.props.children,r=q.type?.displayName,s=f[r];if(!s?.length)return g;for(let t of s)d.default[t.type](t.caller,q,"type",(a,b,c)=>{try{return t.callback.apply(a,[a,b,c])}catch(d){e.error(`Failed to run context menu patch on ${r} of caller ${t.caller}.`,d)}},!0);return q}}catch{}return g})(a,c)},c[1].__unbound=!0}return g.call(a,...c)})}setImmediate(()=>c.data.available.then(initialize));const g={instead,create,before,after,patches:f}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jbGllbnQvbW9kdWxlcy9wYXRjaGVyL21lbnUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTG9nZ2VyIH0gZnJvbSAnQGNvbW1vbi9sb2dnZXInO1xyXG5pbXBvcnQgeyBmb3JjZVJlbmRlciB9IGZyb20gJ0B1dGlsaXRpZXMnO1xyXG5pbXBvcnQgKiBhcyBXZWJwYWNrIGZyb20gJ0B3ZWJwYWNrJztcclxuaW1wb3J0IFBhdGNoZXIgZnJvbSAnLic7XHJcblxyXG5jb25zdCBMb2dnZXIgPSBjcmVhdGVMb2dnZXIoJ1BhdGNoZXInLCAnTWVudScpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHBhdGNoZXMgPSB7fTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBiZWZvcmUoY2FsbGVyOiBzdHJpbmcsIG1lbnU6IHN0cmluZywgY2FsbGJhY2s6IEZuKSB7XHJcbiAgIHZhbGlkYXRlQXJndW1lbnRzKGNhbGxlciwgbWVudSwgY2FsbGJhY2spO1xyXG4gICBwdXNoKCdiZWZvcmUnLCBjYWxsZXIsIG1lbnUsIGNhbGxiYWNrKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGFmdGVyKGNhbGxlcjogc3RyaW5nLCBtZW51OiBzdHJpbmcsIGNhbGxiYWNrOiBGbikge1xyXG4gICB2YWxpZGF0ZUFyZ3VtZW50cyhjYWxsZXIsIG1lbnUsIGNhbGxiYWNrKTtcclxuICAgcHVzaCgnYWZ0ZXInLCBjYWxsZXIsIG1lbnUsIGNhbGxiYWNrKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGluc3RlYWQoY2FsbGVyOiBzdHJpbmcsIG1lbnU6IHN0cmluZywgY2FsbGJhY2s6IEZuKSB7XHJcbiAgIHZhbGlkYXRlQXJndW1lbnRzKGNhbGxlciwgbWVudSwgY2FsbGJhY2spO1xyXG4gICBwdXNoKCdpbnN0ZWFkJywgY2FsbGVyLCBtZW51LCBjYWxsYmFjayk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoY2FsbGVyKSB7XHJcbiAgIHJldHVybiB7XHJcbiAgICAgIGJlZm9yZTogKG1lbnU6IHN0cmluZywgY2FsbGJhY2s6IEZuKSA9PiBiZWZvcmUoY2FsbGVyLCBtZW51LCBjYWxsYmFjayksXHJcbiAgICAgIGFmdGVyOiAobWVudTogc3RyaW5nLCBjYWxsYmFjazogRm4pID0+IGFmdGVyKGNhbGxlciwgbWVudSwgY2FsbGJhY2spLFxyXG4gICAgICBpbnN0ZWFkOiAobWVudTogc3RyaW5nLCBjYWxsYmFjazogRm4pID0+IGluc3RlYWQoY2FsbGVyLCBtZW51LCBjYWxsYmFjayksXHJcbiAgICAgIHVucGF0Y2hBbGw6ICgpID0+IHVucGF0Y2hBbGwoY2FsbGVyKVxyXG4gICB9O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdW5wYXRjaEFsbChjYWxsZXI6IHN0cmluZykge1xyXG4gICBmb3IgKGNvbnN0IG1lbnUgaW4gcGF0Y2hlcykge1xyXG4gICAgICBjb25zdCBjb2xsZWN0aW9uID0gcGF0Y2hlc1ttZW51XTtcclxuICAgICAgcGF0Y2hlc1ttZW51XSA9IGNvbGxlY3Rpb24uZmlsdGVyKGUgPT4gZS5jYWxsZXIgIT09IGNhbGxlcik7XHJcbiAgIH1cclxuXHJcbiAgIHJldHVybiBQYXRjaGVyLnVucGF0Y2hBbGwoY2FsbGVyKTtcclxufVxyXG5cclxuZnVuY3Rpb24gdmFsaWRhdGVBcmd1bWVudHMoY2FsbGVyOiBzdHJpbmcsIG1lbnU6IHN0cmluZywgY2FsbGJhY2s6IEZuKSB7XHJcbiAgIGlmICghY2FsbGVyIHx8IHR5cGVvZiBjYWxsZXIgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2ZpcnN0IGFyZ3VtZW50IGNhbGxlciBkb2VzIG5vdCBleGlzdCBvciBpcyBub3Qgb2YgdHlwZSBzdHJpbmcnKTtcclxuICAgfSBlbHNlIGlmICghbWVudSB8fCB0eXBlb2YgbWVudSAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2Vjb25kIGFyZ3VtZW50IG1lbnUgZG9lcyBub3QgZXhpc3Qgb3IgaXMgbm90IG9mIHR5cGUgc3RyaW5nJyk7XHJcbiAgIH0gZWxzZSBpZiAoIWNhbGxiYWNrIHx8IHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd0aGlyZCBhcmd1bWVudCBjYWxsYmFjayBkb2VzIG5vdCBleGlzdCBvciBpcyBub3Qgb2YgdHlwZSBmdW5jdGlvbicpO1xyXG4gICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHB1c2godHlwZTogc3RyaW5nLCBjYWxsZXI6IHN0cmluZywgbWVudTogc3RyaW5nLCBjYWxsYmFjazogRm4pIHtcclxuICAgcGF0Y2hlc1ttZW51XSA/Pz0gW107XHJcbiAgIHBhdGNoZXNbbWVudV0ucHVzaCh7XHJcbiAgICAgIHR5cGUsXHJcbiAgICAgIGNhbGxlcixcclxuICAgICAgbWVudSxcclxuICAgICAgY2FsbGJhY2ssXHJcbiAgICAgIGFwcGxpZWQ6IGZhbHNlLFxyXG4gICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlTWVudShwcm9wcywgcmVuZGVyKSB7XHJcbiAgIGxldCByZXMgPSByZW5kZXIocHJvcHMpO1xyXG5cclxuICAgdHJ5IHtcclxuICAgICAgLy8gRGV0ZWN0IG5vbi13cmFwcGVkIGNvbnRleHQgbWVudXNcclxuICAgICAgaWYgKHJlcy50eXBlLmRpc3BsYXlOYW1lPy5lbmRzV2l0aCgnQ29udGV4dE1lbnUnKSkge1xyXG4gICAgICAgICBjb25zdCBkaXNwbGF5TmFtZSA9IHJlcy50eXBlPy5kaXNwbGF5TmFtZTtcclxuICAgICAgICAgY29uc3QgcGVuZGluZyA9IHBhdGNoZXNbZGlzcGxheU5hbWVdO1xyXG4gICAgICAgICBpZiAoIXBlbmRpbmc/Lmxlbmd0aCkgcmV0dXJuIHJlcztcclxuXHJcbiAgICAgICAgIGZvciAoY29uc3QgcGF0Y2ggb2YgcGVuZGluZykge1xyXG4gICAgICAgICAgICBQYXRjaGVyW3BhdGNoLnR5cGVdKHBhdGNoLmNhbGxlciwgcmVzLCAndHlwZScsIChfLCBhcmdzLCByZXMpID0+IHtcclxuICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhdGNoLmNhbGxiYWNrLmFwcGx5KF8sIFtfLCBhcmdzLCByZXNdKTtcclxuICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoYEZhaWxlZCB0byBydW4gY29udGV4dCBtZW51IHBhdGNoIG9uICR7ZGlzcGxheU5hbWV9IG9mIGNhbGxlciAke3BhdGNoLmNhbGxlcn0uYCwgZSk7XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgdHJ1ZSk7XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgIHJldHVybiByZXM7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IHBheWxvYWQgPSBmb3JjZVJlbmRlcihyZXMudHlwZSkocmVzLnByb3BzKTtcclxuICAgICAgaWYgKCFwYXlsb2FkKSByZXR1cm4gcmVzO1xyXG5cclxuICAgICAgLy8gRGV0ZWN0IGNvbnRleHQgbWVudXMgb25seSB3cmFwcGVkIG9uY2VcclxuICAgICAgY29uc3QgbWVudSA9IHBheWxvYWQucHJvcHMuY2hpbGRyZW47XHJcbiAgICAgIGlmIChtZW51LnR5cGU/LmRpc3BsYXlOYW1lPy5lbmRzV2l0aCgnQ29udGV4dE1lbnUnKSkge1xyXG4gICAgICAgICBjb25zdCBkaXNwbGF5TmFtZSA9IG1lbnUudHlwZT8uZGlzcGxheU5hbWU7XHJcbiAgICAgICAgIGNvbnN0IHBlbmRpbmcgPSBwYXRjaGVzW2Rpc3BsYXlOYW1lXTtcclxuICAgICAgICAgaWYgKCFwZW5kaW5nPy5sZW5ndGgpIHJldHVybiByZXM7XHJcblxyXG4gICAgICAgICBmb3IgKGNvbnN0IHBhdGNoIG9mIHBlbmRpbmcpIHtcclxuICAgICAgICAgICAgUGF0Y2hlcltwYXRjaC50eXBlXShwYXRjaC5jYWxsZXIsIG1lbnUsICd0eXBlJywgKF8sIGFyZ3MsIHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gcGF0Y2guY2FsbGJhY2suYXBwbHkoXywgW18sIGFyZ3MsIHJlc10pO1xyXG4gICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcihgRmFpbGVkIHRvIHJ1biBjb250ZXh0IG1lbnUgcGF0Y2ggb24gJHtkaXNwbGF5TmFtZX0gb2YgY2FsbGVyICR7cGF0Y2guY2FsbGVyfS5gLCBlKTtcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCB0cnVlKTtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgcmV0dXJuIG1lbnU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIERldGVjdCBjb250ZXh0IG1lbnVzIHdyYXBwZWQgaW4gYW5hbHl0aWNzIGNvbnRleHRzXHJcbiAgICAgIGNvbnN0IGZvcmNlZCA9IGZvcmNlUmVuZGVyKG1lbnUudHlwZSkobWVudS5wcm9wcyk7XHJcbiAgICAgIGlmIChmb3JjZWQudHlwZS5kaXNwbGF5TmFtZSA9PT0gJ0FuYWx5dGljc0NvbnRleHQnKSB7XHJcbiAgICAgICAgIGNvbnN0IHBheWxvYWQgPSBmb3JjZWQucHJvcHMuY2hpbGRyZW47XHJcblxyXG4gICAgICAgICBjb25zdCBkaXNwbGF5TmFtZSA9IHBheWxvYWQudHlwZT8uZGlzcGxheU5hbWU7XHJcbiAgICAgICAgIGNvbnN0IHBlbmRpbmcgPSBwYXRjaGVzW2Rpc3BsYXlOYW1lXTtcclxuICAgICAgICAgaWYgKCFwZW5kaW5nPy5sZW5ndGgpIHJldHVybiByZXM7XHJcblxyXG4gICAgICAgICBmb3IgKGNvbnN0IHBhdGNoIG9mIHBlbmRpbmcpIHtcclxuICAgICAgICAgICAgUGF0Y2hlcltwYXRjaC50eXBlXShwYXRjaC5jYWxsZXIsIHBheWxvYWQsICd0eXBlJywgKF8sIGFyZ3MsIHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gcGF0Y2guY2FsbGJhY2suYXBwbHkoXywgW18sIGFyZ3MsIHJlc10pO1xyXG4gICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcihgRmFpbGVkIHRvIHJ1biBjb250ZXh0IG1lbnUgcGF0Y2ggb24gJHtkaXNwbGF5TmFtZX0gb2YgY2FsbGVyICR7cGF0Y2guY2FsbGVyfS5gLCBlKTtcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCB0cnVlKTtcclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgcmV0dXJuIHBheWxvYWQ7XHJcbiAgICAgIH1cclxuICAgfSBjYXRjaCB7IH1cclxuXHJcbiAgIHJldHVybiByZXM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XHJcbiAgIGNvbnN0IE9wZW5lciA9IFdlYnBhY2suZmluZEJ5UHJvcHMoJ29wZW5Db250ZXh0TWVudUxhenknKTtcclxuXHJcbiAgIFBhdGNoZXIuaW5zdGVhZCgndW5ib3VuZC1tZW51LXBhdGNoZXInLCBPcGVuZXIsICdvcGVuQ29udGV4dE1lbnVMYXp5JywgKHNlbGYsIGFyZ3MsIG9yaWcpID0+IHtcclxuICAgICAgaWYgKCFhcmdzWzFdLl9fdW5ib3VuZCkge1xyXG4gICAgICAgICBjb25zdCBvbGQgPSBhcmdzWzFdO1xyXG4gICAgICAgICBhcmdzWzFdID0gYXN5bmMgKC4uLmFyZ3MpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcmVuZGVyID0gYXdhaXQgb2xkKGFyZ3NbMF0pO1xyXG4gICAgICAgICAgICByZXR1cm4gKHByb3BzKSA9PiBoYW5kbGVNZW51KHByb3BzLCByZW5kZXIpO1xyXG4gICAgICAgICB9O1xyXG5cclxuICAgICAgICAgYXJnc1sxXS5fX3VuYm91bmQgPSB0cnVlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gb3JpZy5jYWxsKHNlbGYsIC4uLmFyZ3MpO1xyXG4gICB9KTtcclxufVxyXG5cclxuLy8gT2ZmbG9hZCBwYXRjaCB0byBhbm90aGVyIHRocmVhZCBhcyBpdHMgbm90IGluc3RhbnRseSBuZWVkZWRcclxuc2V0SW1tZWRpYXRlKCgpID0+IFdlYnBhY2suZGF0YS5hdmFpbGFibGUudGhlbihpbml0aWFsaXplKSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7IGluc3RlYWQsIGNyZWF0ZSwgYmVmb3JlLCBhZnRlciwgcGF0Y2hlcyB9OyJdLCJuYW1lcyI6WyJwYXRjaGVzIiwiYmVmb3JlIiwiYWZ0ZXIiLCJpbnN0ZWFkIiwiY3JlYXRlIiwidW5wYXRjaEFsbCIsIkxvZ2dlciIsImNyZWF0ZUxvZ2dlciIsImNhbGxlciIsIm1lbnUiLCJjYWxsYmFjayIsInZhbGlkYXRlQXJndW1lbnRzIiwicHVzaCIsImNvbGxlY3Rpb24iLCJmaWx0ZXIiLCJlIiwiUGF0Y2hlciIsIlR5cGVFcnJvciIsInR5cGUiLCJhcHBsaWVkIiwiaW5pdGlhbGl6ZSIsIk9wZW5lciIsIldlYnBhY2siLCJmaW5kQnlQcm9wcyIsInNlbGYiLCJhcmdzIiwib3JpZyIsIl9fdW5ib3VuZCIsIm9sZCIsInJlbmRlciIsInByb3BzIiwiaGFuZGxlTWVudSIsInJlcyIsImRpc3BsYXlOYW1lIiwiZW5kc1dpdGgiLCJwZW5kaW5nIiwibGVuZ3RoIiwicGF0Y2giLCJfIiwiYXBwbHkiLCJlcnJvciIsInBheWxvYWQiLCJmb3JjZVJlbmRlciIsImNoaWxkcmVuIiwiZm9yY2VkIiwiY2FsbCIsInNldEltbWVkaWF0ZSIsImRhdGEiLCJhdmFpbGFibGUiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiQUFBQSx3S0FPYUEsT0FBTyxLQUFQQSxDQUFPLENBRUpDLE1BQU0sS0FBTkEsTUFBTSxDQUtOQyxLQUFLLEtBQUxBLEtBQUssQ0FLTEMsT0FBTyxLQUFQQSxPQUFPLENBS1BDLE1BQU0sS0FBTkEsTUFBTSxDQVNOQyxVQUFV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