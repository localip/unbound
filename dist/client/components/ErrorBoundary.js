"use strict";const a=require("./discord"),b=require("@webpack"),c=require("../../common/constants"),d=_interopRequireDefault(require("./Divider")),e=_interopRequireDefault(require("react")),f=_interopRequireDefault(require("../styles/components/errorboundary.css")),g=_interopRequireDefault(require("./Icon"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}f.default.append();const h=(0,b.findByDisplayName)("IntegrationInfo");class ErrorBoundary extends e.default.PureComponent{constructor(a){super(a),this.state={error:!1}}componentDidCatch(a,{componentStack:b}){let c=`${a.name?`${a.name}: `:""}${a.message}`,d=this.cleanError(a.stack,c),e=this.cleanError(b);this.setState({error:!0,component:e,js:d})}cleanError(a,b){let clean=a=>Boolean(a)&&!a.includes("/assets"),d=a.split(c.Regex.newline);if(b){let e=d.findIndex(a=>a===b);null!==e&&d.splice(e,1)}return{stack:d.filter(clean).join("\n").replace(/    /g,""),message:b}}render(){if(this.state.error){let b=this.props.fallback;if(b)return e.default.createElement(b,Object.assign({},this.state));let c={name:"JavaScript Error",description:"Runtime error provided by JavaScript.",icon:"Close",state:"js"},d={name:"Component Lifecycle",description:"Lifecycle error provided by React.",icon:"Synced",state:"component"};return e.default.createElement("div",{className:"unbound-boundary-wrapper"},e.default.createElement("img",{src:"/assets/b5eb2f7d6b3f8cc9b60be4a5dcf28015.svg",className:"unbound-boundary-sad-wumpus"}),e.default.createElement(a.Text,{color:a.Text.Colors.MUTED,size:a.Text.Sizes.SIZE_16,className:"unbound-boundary-notice"},"Oops, we had a fucky wucky."),e.default.createElement(a.RelativeTooltip,{text:"Retry"},a=>e.default.createElement(g.default,Object.assign({},a,{className:"unbound-boundary-retry",name:"Replay",width:32,height:32,onClick:()=>this.setState({error:!1})}),"Retry")),this.renderStack(c),this.renderStack(d))}return this.props.children}renderStack({name:b,state:c,description:f,icon:i}){let j=this.state[`${c}Open`]?? !1,k=this.state[c];return k?e.default.createElement(a.Card,{onClick:()=>this.setState({[`${c}Open`]:!j}),className:"unbound-boundary-integration-card"},e.default.createElement("div",{className:"unbound-boundary-align"},e.default.createElement(h,{name:b,icon:a=>e.default.createElement(g.default,Object.assign({name:i},a)),details:[{text:f}]}),e.default.createElement(g.default,{name:`ArrowDrop${j?"Up":"Down"}`,className:"unbound-boundary-integration-icon"})),j&&e.default.createElement(e.default.Fragment,null,e.default.createElement(d.default,{className:"unbound-boundary-divider"}),k.message&&e.default.createElement(a.Card,{type:"card",className:"unbound-boundary-error-wrapper"},e.default.createElement(a.Scrollers.AdvancedScrollerThin,{className:"unbound-boundary-scroller"},e.default.createElement(a.Text,{className:"unbound-boundary-error-details"},k.message))),k.stack&&e.default.createElement(a.Card,{type:"card",className:"unbound-boundary-error-wrapper"},e.default.createElement(a.Scrollers.AdvancedScrollerThin,{className:"unbound-boundary-scroller"},e.default.createElement(a.Text,{className:"unbound-boundary-error-details"},k.stack))))):null}}module.exports=ErrorBoundary
//# sourceMappingURL=data:application/json;base64,