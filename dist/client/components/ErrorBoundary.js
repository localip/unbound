"use strict";const e=require("./discord"),t=require("@webpack"),a=require("../../common/constants"),l=_interopRequireDefault(require("./Divider")),r=_interopRequireDefault(require("react")),s=_interopRequireDefault(require("../styles/components/errorboundary.css")),n=_interopRequireDefault(require("./Icon"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}s.default.append();const c=(0,t.findByDisplayName)("IntegrationInfo");class ErrorBoundary extends r.default.PureComponent{constructor(e){super(e),this.state={error:!1}}componentDidCatch(e,{componentStack:t}){let a=`${e.name?`${e.name}: `:""}${e.message}`,l=this.cleanError(e.stack,a),r=this.cleanError(t);this.setState({error:!0,component:r,js:l})}cleanError(e,t){let clean=e=>Boolean(e)&&!e.includes("/assets"),l=e.split(a.Regex.newline);if(t){let r=l.findIndex(e=>e===t);null!==r&&l.splice(r,1)}return{stack:l.filter(clean).join("\n").replace(/    /g,""),message:t}}render(){if(this.state.error){let t=this.props.fallback;return t?r.default.createElement(t,Object.assign({},this.state)):r.default.createElement("div",{className:"unbound-boundary-wrapper"},r.default.createElement("img",{src:"/assets/b5eb2f7d6b3f8cc9b60be4a5dcf28015.svg",className:"unbound-boundary-sad-wumpus"}),r.default.createElement(e.Text,{color:e.Text.Colors.MUTED,size:e.Text.Sizes.SIZE_16,className:"unbound-boundary-notice"},"Oops, we had a fucky wucky."),r.default.createElement(e.RelativeTooltip,{text:"Retry"},e=>r.default.createElement(n.default,Object.assign({},e,{className:"unbound-boundary-retry",name:"Replay",width:32,height:32,onClick:()=>this.setState({error:!1})}),"Retry")),this.renderStack({name:"JavaScript Error",description:"Runtime error provided by JavaScript.",icon:"Close",state:"js"}),this.renderStack({name:"Component Lifecycle",description:"Lifecycle error provided by React.",icon:"Synced",state:"component"}))}return this.props.children}renderStack({name:t,state:a,description:s,icon:i}){let d=this.state[`${a}Open`]??!1,u=this.state[a];return u?r.default.createElement(e.Card,{onClick:()=>this.setState({[`${a}Open`]:!d}),className:"unbound-boundary-integration-card"},r.default.createElement("div",{className:"unbound-boundary-align"},r.default.createElement(c,{name:t,icon:e=>r.default.createElement(n.default,Object.assign({name:i},e)),details:[{text:s}]}),r.default.createElement(n.default,{name:`ArrowDrop${d?"Up":"Down"}`,className:"unbound-boundary-integration-icon"})),d&&r.default.createElement(r.default.Fragment,null,r.default.createElement(l.default,{className:"unbound-boundary-divider"}),u.message&&r.default.createElement(e.Card,{type:"card",className:"unbound-boundary-error-wrapper"},r.default.createElement(e.Scrollers.AdvancedScrollerThin,{className:"unbound-boundary-scroller"},r.default.createElement(e.Text,{className:"unbound-boundary-error-details"},u.message))),u.stack&&r.default.createElement(e.Card,{type:"card",className:"unbound-boundary-error-wrapper"},r.default.createElement(e.Scrollers.AdvancedScrollerThin,{className:"unbound-boundary-scroller"},r.default.createElement(e.Text,{className:"unbound-boundary-error-details"},u.stack))))):null}}module.exports=ErrorBoundary
//# sourceMappingURL=data:application/json;base64,