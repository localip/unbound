"use strict";const a=k(require("../../common/utilities")),b=require("../../common/logger"),c=k(require("../core/builtins")),d=k(require("../core/patches")),e=require("path"),f=k(require("../managers/index")),g=k(require("@webpack")),h=function(a){return a&&a.__esModule?a:{default:a}}(require("../modules/patcher/index")),i=k(require("@api"));function j(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(j=function(a){return a?c:b})(a)}function k(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=j(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!==f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}const l=(0,b.createLogger)();class m{utilities=a;patcher=h.default;webpack=g;async initialize(){global.unbound=this,l.log("Initializing...");let a=performance.now();for(let b in await d.initialize(),await c.initialize(),this.apis={},i){let e=b.toLowerCase();this.apis[e]=i[b],await this.apis[e].initialize()}this.managers={plugins:new f.Plugins,themes:new f.Themes},this.managers.themes.initialize(),this.managers.plugins.initialize(),l.log(`Initialized in ${Math.round(performance.now()-a)}ms.`)}async shutdown(){for(let a in l.log("Shutting down..."),this.managers.plugins.shutdown(),this.managers.themes.shutdown(),i){let b=a.toLowerCase();this.apis[b]=i[a],await this.apis[b].shutdown?.()}await d.shutdown(),await c.shutdown(),await g.shutdown();let f=[...document.querySelectorAll('style[data-unbound="true"')];for(let h of f)h.remove();let j=(0,e.basename)((0,e.resolve)(__dirname,"..","..","..")),k=Object.keys(require.cache).filter(a=>~a.indexOf(j));for(let m=0,n=k.length;m<n;m++){let o=require.cache[k[m]];delete require.cache[k[m]];for(let p=0;p<o.parent.children.filter(Boolean).length;p++)if(o.parent.children[p]&& ~o.parent.children[p].path.indexOf(j)){o.parent.children.splice(p,1);break}}delete global.unbound,global.unbound={initialize:async()=>{let a=require("@webpack");await a.initialize();let b=require("@structures/unbound"),c=new b;await c.initialize()},restart:()=>global.unbound.initialize(),shutdown:()=>{}}}async restart(){await this.shutdown(),await global.unbound?.initialize?.()}}module.exports=m
//# sourceMappingURL=data:application/json;base64,