"use strict";const e=require("path"),t=_interopRequireWildcard(require("../../common/utilities")),i=require("../../common/logger"),r=_interopRequireWildcard(require("../core/builtins")),n=_interopRequireWildcard(require("../core/patches")),s=_interopRequireWildcard(require("../managers/index")),a=_interopRequireWildcard(require("@webpack")),o=require("http"),l=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(require("../modules/patcher/index")),u=_interopRequireWildcard(require("@api"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,i=new WeakMap;return(_getRequireWildcardCache=function(e){return e?i:t})(e)}function _interopRequireWildcard(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var i=_getRequireWildcardCache(t);if(i&&i.has(e))return i.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var a=n?Object.getOwnPropertyDescriptor(e,s):null;a&&(a.get||a.set)?Object.defineProperty(r,s,a):r[s]=e[s]}return r.default=e,i&&i.set(e,r),r}const d=(0,i.createLogger)();class Unbound{#sockets=new Set;utilities=t;patcher=l.default;webpack=a;async initialize(){global.unbound=this,d.log("Initializing...");let e=performance.now();for(let t in await n.initialize(),await r.initialize(),this.apis={},u){let i=t.toLowerCase();this.apis[i]=u[t],await this.apis[i].initialize?.()}this.managers={plugins:new s.Plugins,themes:new s.Themes},this.managers.themes.initialize(),this.managers.plugins.initialize(),d.log(`Initialized in ${Math.round(performance.now()-e)}ms.`),this.#setupServer()}async shutdown(){for(let t of this.#sockets)t.destroy(),this.#sockets.delete(t);for(let i in this.server?.close?.(()=>d.debug("Server closed")),d.log("Shutting down..."),this.managers.plugins.shutdown(),this.managers.themes.shutdown(),u){let s=i.toLowerCase();this.apis[s]=u[i],await this.apis[s].shutdown?.()}await n.shutdown(),await r.shutdown(),await a.shutdown();let o=[...document.querySelectorAll('style[data-unbound="true"')];for(let l of o)l.remove();let h=(0,e.basename)((0,e.resolve)(__dirname,"..","..","..")),c=Object.keys(require.cache).filter(e=>~e.indexOf(h));for(let p=0,f=c.length;p<f;p++){let w=require.cache[c[p]];delete require.cache[c[p]];for(let g=0;g<w.parent.children.filter(Boolean).length;g++)if(w.parent.children[g]&& ~w.parent.children[g].path.indexOf(h)){w.parent.children.splice(g,1);break}}delete global.unbound,global.unbound={async initialize(){let e=require("@webpack");await e.initialize();let t=require("@structures/unbound"),i=new t;await i.initialize()},restart:()=>global.unbound.initialize(),shutdown(){}}}async restart(){await this.shutdown(),await global.unbound?.initialize?.()}#setupServer(){this.server=(0,o.createServer)(this.#onRequest.bind(this)),this.server.on("connection",e=>{this.#sockets.add(e),this.server.once("close",()=>{this.#sockets.delete(e)})}),this.server.listen(9859,()=>d.debug("Server running at port 9859"))}#onRequest(h,c){c.statusCode=200;let p=h.method.toLowerCase(),f=h.url.split(/[?#]/),w=f[1],g=f[0];if(c.setHeader("Access-Control-Allow-Origin","*"),!g||"/"===g)return c.end();let y=(0,e.join)(__dirname,"..","routes",g);if(require.resolve(y))try{let v=require(y);if(!v[p])return c.statusCode=405,c.end();v[p](this,h,c,w)}catch(q){d.error(`Router failed to route request. (URL: ${g})`,q),c.statusCode=500,c.end()}else c.statusCode=404,c.end()}}module.exports=Unbound
//# sourceMappingURL=data:application/json;base64,