"use strict";const a=require("../../../common/logger"),b=_interopRequireWildcard(require("../../../client/api/settings")),c=require("path"),d=_interopRequireWildcard(require("../../../client/managers/index")),e=_interopRequireWildcard(require("@webpack"));function _getRequireWildcardCache(a){if("function"!=typeof WeakMap)return null;var b=new WeakMap,c=new WeakMap;return(_getRequireWildcardCache=function(a){return a?c:b})(a)}function _interopRequireWildcard(a,b){if(!b&&a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var c=_getRequireWildcardCache(b);if(c&&c.has(a))return c.get(a);var d={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in a)if("default"!==f&&Object.prototype.hasOwnProperty.call(a,f)){var g=e?Object.getOwnPropertyDescriptor(a,f):null;g&&(g.get||g.set)?Object.defineProperty(d,f,g):d[f]=a[f]}return d.default=a,c&&c.set(a,d),d}const f=(0,a.createLogger)();module.exports=class Unbound{webpack=e;async initialize(){global.unbound=this,f.log("Initializing...");let a=performance.now();for(let c in this.apis={settings:b},this.apis){let e=this.apis[c];await e.initialize()}this.managers={plugins:new d.Plugins,themes:new d.Themes},this.managers.plugins.initialize(),this.managers.themes.initialize(),f.log(`Initialized in ${Math.round(performance.now()-a)}ms.`)}async shutdown(){f.log("Shutting down..."),this.managers.plugins.shutdown(),await e.shutdown();let a=(0,c.basename)((0,c.resolve)(__dirname,"..","..","..")),b=Object.keys(require.cache).filter(b=>~b.indexOf(a));b.map(a=>delete require.cache[a]),delete global.unbound,global.unbound={async initialize(){let a=require("@webpack");await a.initialize();let b=require("./unbound"),c=new b;await c.initialize()},restart:()=>global.unbound.initialize(),shutdown(){}}}async restart(){await this.shutdown(),await global.unbound?.initialize?.()}}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcmVsb2FkL3NwbGFzaC9zdHJ1Y3R1cmVzL3VuYm91bmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogTW9yZSBsaW1pdGVkIHZlcnNpb24gb2YgdGhlIG9yaWdpbmFsIHVuYm91bmQgZ2xvYmFsLlxyXG4gKiBJdCdzIGR1cGxpY2F0ZSBjb2RlLCBidXQgbG9hZGluZyB0aGUgb3JpZ2luYWwgd2lsbFxyXG4gKiBjYXVzZSBpdCB0byBub3QgbG9hZCBhcyB0aGVyZSdzIEFQSXMgd2hpY2ggcmVseSBvblxyXG4gKiB3ZWJwYWNrIG1vZHVsZXMgdGhhdCBhcmVuJ3QgaW4gdGhlIHNwbGFzaCBzY3JlZW4uXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgY3JlYXRlTG9nZ2VyIH0gZnJvbSAnQGNvbW1vbi9sb2dnZXInO1xyXG5pbXBvcnQgKiBhcyBTZXR0aW5ncyBmcm9tICdAYXBpL3NldHRpbmdzJztcclxuaW1wb3J0IHsgYmFzZW5hbWUsIHJlc29sdmUgfSBmcm9tICdwYXRoJztcclxuaW1wb3J0ICogYXMgTWFuYWdlcnMgZnJvbSAnQG1hbmFnZXJzJztcclxuaW1wb3J0ICogYXMgV2VicGFjayBmcm9tICdAd2VicGFjayc7XHJcblxyXG5jb25zdCBMb2dnZXIgPSBjcmVhdGVMb2dnZXIoKTtcclxuXHJcbmNsYXNzIFVuYm91bmQge1xyXG4gICBhcGlzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xyXG4gICB3ZWJwYWNrID0gV2VicGFjaztcclxuICAgbWFuYWdlcnM6IHtcclxuICAgICAgcGx1Z2luczogTWFuYWdlcnMuUGx1Z2lucztcclxuICAgICAgdGhlbWVzOiBNYW5hZ2Vycy5UaGVtZXM7XHJcbiAgIH07XHJcblxyXG4gICBhc3luYyBpbml0aWFsaXplKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgICAoZ2xvYmFsLnVuYm91bmQgYXMgYW55KSA9IHRoaXM7XHJcblxyXG4gICAgICBMb2dnZXIubG9nKCdJbml0aWFsaXppbmcuLi4nKTtcclxuICAgICAgY29uc3Qgc3RhcnQgPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuXHJcbiAgICAgIHRoaXMuYXBpcyA9IHtcclxuICAgICAgICAgc2V0dGluZ3M6IFNldHRpbmdzXHJcbiAgICAgIH07XHJcblxyXG4gICAgICAvLyBJbml0aWFsaXplIEFQSXNcclxuICAgICAgZm9yIChjb25zdCBhcGkgaW4gdGhpcy5hcGlzKSB7XHJcbiAgICAgICAgIGNvbnN0IGluc3RhbmNlID0gdGhpcy5hcGlzW2FwaV07XHJcbiAgICAgICAgIGF3YWl0IGluc3RhbmNlLmluaXRpYWxpemUoKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5tYW5hZ2VycyA9IHtcclxuICAgICAgICAgcGx1Z2luczogbmV3IE1hbmFnZXJzLlBsdWdpbnMoKSxcclxuICAgICAgICAgdGhlbWVzOiBuZXcgTWFuYWdlcnMuVGhlbWVzKCksXHJcbiAgICAgIH07XHJcblxyXG4gICAgICB0aGlzLm1hbmFnZXJzLnBsdWdpbnMuaW5pdGlhbGl6ZSgpO1xyXG4gICAgICB0aGlzLm1hbmFnZXJzLnRoZW1lcy5pbml0aWFsaXplKCk7XHJcblxyXG4gICAgICBMb2dnZXIubG9nKGBJbml0aWFsaXplZCBpbiAke01hdGgucm91bmQocGVyZm9ybWFuY2Uubm93KCkgLSBzdGFydCl9bXMuYCk7XHJcbiAgIH1cclxuXHJcbiAgIGFzeW5jIHNodXRkb3duKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgICBMb2dnZXIubG9nKCdTaHV0dGluZyBkb3duLi4uJyk7XHJcblxyXG4gICAgICB0aGlzLm1hbmFnZXJzLnBsdWdpbnMuc2h1dGRvd24oKTtcclxuXHJcbiAgICAgIGF3YWl0IFdlYnBhY2suc2h1dGRvd24oKTtcclxuXHJcbiAgICAgIC8vIENsZWFyIHJlcXVpcmUgY2FjaGUgdG8gYWxsb3cgZm9yIGFueSBjb2RlIGNoYW5nZXMgdG8gYXBwbHlcclxuICAgICAgY29uc3QgcGFyZW50ID0gYmFzZW5hbWUocmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsICcuLicsICcuLicpKTtcclxuICAgICAgY29uc3QgY2FjaGUgPSBPYmplY3Qua2V5cyhyZXF1aXJlLmNhY2hlKS5maWx0ZXIoYyA9PiB+Yy5pbmRleE9mKHBhcmVudCkpO1xyXG4gICAgICBjYWNoZS5tYXAoYyA9PiBkZWxldGUgcmVxdWlyZS5jYWNoZVtjXSk7XHJcblxyXG4gICAgICBkZWxldGUgZ2xvYmFsLnVuYm91bmQ7XHJcbiAgICAgIChnbG9iYWwudW5ib3VuZCBhcyBhbnkpID0ge1xyXG4gICAgICAgICBpbml0aWFsaXplOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IFdlYnBhY2sgPSByZXF1aXJlKCdAd2VicGFjaycpO1xyXG4gICAgICAgICAgICBhd2FpdCBXZWJwYWNrLmluaXRpYWxpemUoKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IENsaWVudCA9IHJlcXVpcmUoJy4vdW5ib3VuZCcpO1xyXG4gICAgICAgICAgICBjb25zdCBpbnN0YW5jZSA9IG5ldyBDbGllbnQoKTtcclxuICAgICAgICAgICAgYXdhaXQgaW5zdGFuY2UuaW5pdGlhbGl6ZSgpO1xyXG4gICAgICAgICB9LFxyXG4gICAgICAgICByZXN0YXJ0OiAoKSA9PiBnbG9iYWwudW5ib3VuZC5pbml0aWFsaXplKCksXHJcbiAgICAgICAgIHNodXRkb3duOiAoKSA9PiB7IH1cclxuICAgICAgfTtcclxuICAgfVxyXG5cclxuICAgYXN5bmMgcmVzdGFydCgpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgICAgYXdhaXQgdGhpcy5zaHV0ZG93bigpO1xyXG4gICAgICBhd2FpdCBnbG9iYWwudW5ib3VuZD8uaW5pdGlhbGl6ZT8uKCk7XHJcbiAgIH1cclxufTtcclxuXHJcbmV4cG9ydCA9IFVuYm91bmQ7Il0sIm5hbWVzIjpbIkxvZ2dlciIsImNyZWF0ZUxvZ2dlciIsIlVuYm91bmQiLCJ3ZWJwYWNrIiwiV2VicGFjayIsImluaXRpYWxpemUiLCJnbG9iYWwiLCJ1bmJvdW5kIiwibG9nIiwic3RhcnQiLCJwZXJmb3JtYW5jZSIsIm5vdyIsImFwaSIsImFwaXMiLCJzZXR0aW5ncyIsIlNldHRpbmdzIiwiaW5zdGFuY2UiLCJtYW5hZ2VycyIsInBsdWdpbnMiLCJNYW5hZ2VycyIsIlBsdWdpbnMiLCJ0aGVtZXMiLCJUaGVtZXMiLCJNYXRoIiwicm91bmQiLCJzaHV0ZG93biIsInBhcmVudCIsImJhc2VuYW1lIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImNhY2hlIiwiT2JqZWN0Iiwia2V5cyIsInJlcXVpcmUiLCJmaWx0ZXIiLCJjIiwiaW5kZXhPZiIsIm1hcCIsIkNsaWVudCIsInJlc3RhcnQiXSwibWFwcGluZ3MiOiJBQU9BLDZCQUE2Qix3QkFBZ0Isb0NBQ25CLDhCQUFlLGFBQ1AsTUFBTSxvQ0FDZCxnQ0FBVyxxQ0FDWixVQUFVLDJwQkFFbkMsTUFBTUEsQ0FBTSxDQUFHQyxHQUFBQSxDQUFZLGFBQUEsR0FBRSxBQUFDLGdCQUU5QixNQUFNQyxPQUFPLENBRVZDLE9BQU8sQ0FBR0MsQ0FBTyxBQUFDLEFBTWxCLE9BQU1DLFVBQVUsRUFBa0IsQ0FDL0IsQUFBQ0MsTUFBTSxDQUFDQyxPQUFPLENBQVcsSUFBSSxDQUU5QlAsQ0FBTSxDQUFDUSxHQUFHLENBQUMsaUJBQWlCLENBQUMsQUFDN0IsS0FBTUMsQ0FBSyxDQUFHQyxXQUFXLENBQUNDLEdBQUcsRUFBRSxBQUFDLEFBT2hDLEtBQUssSUFBTUMsQ0FBRyxJQUxkLElBQUksQ0FBQ0MsSUFBSSxDQUFHLENBQ1RDLFFBQVEsQ0FBRUMsQ0FBUSxDQUNwQixDQUdpQixJQUFJLENBQUNGLElBQUksQ0FBRSxDQUMxQixJQUFNRyxDQUFRLENBQUcsSUFBSSxDQUFDSCxJQUFJLENBQUNELENBQUcsQ0FBQyxBQUFDLEFBQ2hDLE9BQU1JLENBQVEsQ0FBQ1gsVUFBVSxFQUFFLENBQzdCLEFBRUQsSUFBSSxDQUFDWSxRQUFRLENBQUcsQ0FDYkMsT0FBTyxDQUFFLElBQUlDLENBQVEsQ0FBQ0MsT0FBTyxBQUFFLENBQy9CQyxNQUFNLENBQUUsSUFBSUYsQ0FBUSxDQUFDRyxNQUFNLEFBQUUsQ0FDL0IsQ0FFRCxJQUFJLENBQUNMLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDYixVQUFVLEVBQUUsQ0FDbEMsSUFBSSxDQUFDWSxRQUFRLENBQUNJLE1BQU0sQ0FBQ2hCLFVBQVUsRUFBRSxDQUVqQ0wsQ0FBTSxDQUFDUSxHQUFHLENBQUMsQ0FBQyxlQUFlLEVBQUVlLElBQUksQ0FBQ0MsS0FBSyxDQUFDZCxXQUFXLENBQUNDLEdBQUcsRUFBRSxDQUFHRixDQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUMxRSxBQUVELE1BQU1nQixRQUFRLEVBQWtCLENBQzdCekIsQ0FBTSxDQUFDUSxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FFOUIsSUFBSSxDQUFDUyxRQUFRLENBQUNDLE9BQU8sQ0FBQ08sUUFBUSxFQUFFLENBRWhDLE1BQU1yQixDQUFPLENBQUNxQixRQUFRLEVBQUUsQUFHeEIsS0FBTUMsQ0FBTSxDQUFHQyxHQUFBQSxDQUFRLFNBQUEsRUFBQ0MsR0FBQUEsQ0FBTyxRQUFBLEVBQUNDLFNBQVMsQ0FBRSxJQUFJLENBQUUsSUFBSSxDQUFFLElBQUksQ0FBQyxDQUFDLENBQ3ZEQyxDQUFLLENBQUdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPLENBQUNILEtBQUssQ0FBQyxDQUFDSSxNQUFNLENBQUNDLENBQUMsRUFBSSxDQUFDQSxDQUFDLENBQUNDLE9BQU8sQ0FBQ1YsQ0FBTSxDQUFDLENBQUMsQUFEVixBQUU5REksQ0FBQUEsQ0FBSyxDQUFDTyxHQUFHLENBQUNGLENBQUMsRUFBSSxPQUFPRixPQUFPLENBQUNILEtBQUssQ0FBQ0ssQ0FBQyxDQUFDLENBQUMsQ0FFdkMsT0FBTzdCLE1BQU0sQ0FBQ0MsT0FBTyxDQUNyQixBQUFDRCxNQUFNLENBQUNDLE9BQU8sQ0FBVyxDQUNYLE1BQVpGLFVBQVUsRUFBYyxDQUNyQixJQUFNRCxDQUFPLENBQUc2QixPQUFPLENBQUMsVUFBVSxDQUFDLEFBQUMsQUFDcEMsT0FBTTdCLENBQU8sQ0FBQ0MsVUFBVSxFQUFFLEFBRTFCLEtBQU1pQyxDQUFNLENBQUdMLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FDN0JqQixDQUFRLENBQUcsSUFBSXNCLENBQU0sQUFBRSxBQURPLEFBRXBDLE9BQU10QixDQUFRLENBQUNYLFVBQVUsRUFBRSxDQUM3QixDQUNEa0MsT0FBTyxDQUFFLElBQU1qQyxNQUFNLENBQUNDLE9BQU8sQ0FBQ0YsVUFBVSxFQUFFLENBQ2hDLEFBQVZvQixRQUFRLEVBQVEsRUFBRyxDQUNyQixDQUNILEFBRUQsTUFBTWMsT0FBTyxFQUFrQixDQUM1QixNQUFNLElBQUksQ0FBQ2QsUUFBUSxFQUFFLENBQ3JCLE1BQU1uQixNQUFNLENBQUNDLE9BQU8sRUFBRUYsVUFBVSxJQUFJLENBQ3RDLENBQ0gsQUFFZ0IifQ==